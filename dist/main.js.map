{"version":3,"file":"main.js","mappingsrkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjokltCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;;;;;ACJA;;;;;ACAA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACzlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AEhiBA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://se-tailoring-framework/./js/app.js","webpack://se-tailoring-framework/./js/components/assessment.js","webpack://se-tailoring-framework/./js/components/export.js","webpack://se-tailoring-framework/./js/components/recommendations.js","webpack://se-tailoring-framework/./js/components/visualization.js","webpack://se-tailoring-framework/webpack/bootstrap","webpack://se-tailoring-framework/webpack/runtime/chunk loaded","webpack://se-tailoring-framework/webpack/runtime/compat get default export","webpack://se-tailoring-framework/webpack/runtime/define property getters","webpack://se-tailoring-framework/webpack/runtime/get javascript update chunk filename","webpack://se-tailoring-framework/webpack/runtime/get update manifest filename","webpack://se-tailoring-framework/webpack/runtime/getFullHash","webpack://se-tailoring-framework/webpack/runtime/global","webpack://se-tailoring-framework/webpack/runtime/hasOwnProperty shorthand","webpack://se-tailoring-framework/webpack/runtime/load script","webpack://se-tailoring-framework/webpack/runtime/make namespace object","webpack://se-tailoring-framework/webpack/runtime/hot module replacement","webpack://se-tailoring-framework/webpack/runtime/publicPath","webpack://se-tailoring-framework/webpack/runtime/jsonp chunk loading","webpack://se-tailoring-framework/webpack/before-startup","webpack://se-tailoring-framework/webpack/startup","webpack://se-tailoring-framework/webpack/after-startup"],"sourcesContent":["/**\n * Main Application Controller for SE Process Tailoring Framework\n * Handles navigation, data loading, and view management\n */\n\n// Import component modules\nimport './components/assessment.js';\nimport './components/visualization.js';\nimport './components/recommendations.js';\nimport './components/export.js';\n\nclass SEFrameworkApp {\n  constructor() {\n    this.currentView = \"welcome\";\n    this.assessmentData = {};\n    this.processData = {};\n    this.questionData = {};\n    this.dependencyData = {};\n    this.recommendations = {};\n    this.assessmentEngine = null;\n    this.visualizer = null;\n    this.recommendationEngine = null;\n    this.exportManager = null;\n\n    // Assessment state\n    this.assessmentResponses = {};\n    this.assessmentScores = {\n      complexity: 0,\n      safety: 0,\n      scale: 0,\n      maturity: 0,\n      overall: 0,\n    };\n\n    this.init();\n  }\n\n  async init() {\n    try {\n      console.log(\"=== SE Framework App Initialization Started ===\");\n      this.showLoading();\n\n      // Check if required components are loaded\n      console.log(\"Step 1: Checking component availability:\", {\n        AssessmentEngine: typeof AssessmentEngine,\n        ProcessNetworkVisualizer: typeof ProcessNetworkVisualizer,\n        RecommendationEngine: typeof RecommendationEngine,\n        ExportManager: typeof ExportManager,\n      });\n\n      console.log(\"Step 2: Loading data...\");\n      await this.loadData();\n      console.log(\"Step 3: Data loaded successfully\");\n\n      console.log(\"Step 4: Setting up event listeners...\");\n      this.setupEventListeners();\n      console.log(\"Step 5: Event listeners setup complete\");\n\n      console.log(\"Step 6: Rendering welcome view...\");\n      this.renderWelcomeView();\n      console.log(\"Step 7: Welcome view rendered\");\n\n      console.log(\"Step 8: About to hide loading overlay...\");\n      this.hideLoading();\n      console.log(\"Step 9: Loading overlay hidden\");\n\n      console.log(\"=== App Initialized Successfully ===\");\n    } catch (error) {\n      console.error(\"=== App Initialization Failed ===\", error);\n      console.error(\"Error details:\", error.stack);\n      this.showError(\n        `Failed to load application data: ${error.message}. Please refresh the page.`,\n      );\n      this.hideLoading();\n    }\n  }\n\n  async loadData() {\n    try {\n      console.log(\"Starting data loading...\");\n\n      // Load data files sequentially for better error handling\n      const basePath = window.location.hostname === 'localhost' ? '' : '/se-tailoring-framework';\n      const processesResponse = await fetch(`${basePath}/data/processes.json`);\n      console.log(\"Processes response status:\", processesResponse.status);\n      if (!processesResponse.ok) {\n        throw new Error(\"Failed to load processes data\");\n      }\n      const processesArray = await processesResponse.json();\n      const processes = { processes: processesArray };\n\n      const questionsResponse = await fetch(`${basePath}/data/questions.json`);\n      console.log(\"Questions response status:\", questionsResponse.status);\n      if (!questionsResponse.ok) {\n        throw new Error(\"Failed to load questions data\");\n      }\n      const questions = await questionsResponse.json();\n\n      const dependenciesResponse = await fetch(`${basePath}/data/dependencies.json`);\n      console.log(\"Dependencies response status:\", dependenciesResponse.status);\n      if (!dependenciesResponse.ok) {\n        throw new Error(\"Failed to load dependencies data\");\n      }\n      const dependencies = await dependenciesResponse.json();\n\n      console.log(\"Data loaded successfully:\", {\n        processes: processesArray ? processesArray.length : 0,\n        questions: questions.assessmentCategories\n          ? questions.assessmentCategories.length\n          : 0,\n        dependencies: dependencies.dependencies\n          ? dependencies.dependencies.length\n          : 0,\n      });\n\n      this.processData = processes;\n      this.questionData = questions;\n      this.dependencyData = dependencies;\n\n      console.log(\"Step 2.5: Checking component classes...\");\n      // Check if component classes are available\n      const componentCheck = {\n        AssessmentEngine: typeof AssessmentEngine,\n        ProcessNetworkVisualizer: typeof ProcessNetworkVisualizer,\n        RecommendationEngine: typeof RecommendationEngine,\n        ExportManager: typeof ExportManager,\n      };\n      console.log(\"Component availability:\", componentCheck);\n\n      if (typeof AssessmentEngine === \"undefined\") {\n        throw new Error(\"AssessmentEngine class not loaded\");\n      }\n      if (typeof ProcessNetworkVisualizer === \"undefined\") {\n        throw new Error(\"ProcessNetworkVisualizer class not loaded\");\n      }\n      if (typeof RecommendationEngine === \"undefined\") {\n        throw new Error(\"RecommendationEngine class not loaded\");\n      }\n      if (typeof ExportManager === \"undefined\") {\n        throw new Error(\"ExportManager class not loaded\");\n      }\n\n      console.log(\"Step 2.6: Initializing components...\");\n      // Initialize components\n      this.assessmentEngine = new AssessmentEngine(this.questionData, this);\n      console.log(\"AssessmentEngine created\");\n\n      this.visualizer = new ProcessNetworkVisualizer(\n        this.processData,\n        this.dependencyData,\n        this,\n      );\n      console.log(\"ProcessNetworkVisualizer created\");\n\n      this.recommendationEngine = new RecommendationEngine(\n        this.processData,\n        this.dependencyData,\n        this,\n      );\n      console.log(\"RecommendationEngine created\");\n\n      this.exportManager = new ExportManager(this);\n      console.log(\"ExportManager created\");\n\n      // Initialize admin portal - TEMPORARILY DISABLED FOR PRODUCTION\n      // if (typeof AdminPortal !== \"undefined\") {\n      //   this.adminPortal = new AdminPortal(this);\n      //   this.adminPortal.init();\n      //   console.log(\"AdminPortal created and initialized\");\n      // } else {\n      //   console.log(\"AdminPortal class not loaded\");\n      // }\n\n      console.log(\"Step 2.7: All components initialized successfully\");\n  } catch (error) {\n    console.error(\"Error loading data:\", error);\n    throw error;\n  }\n}\n\ntoggleAdminPanel() {\n  const adminPanel = document.getElementById(\"admin-panel\");\n  if (adminPanel) {\n    // Check if panel is currently visible (has transform style or is positioned at left: 0)\n    const isVisible = adminPanel.style.transform === \"translateX(0px)\" || \n                     adminPanel.style.transform === \"\" ||\n                     adminPanel.style.left === \"0px\";\n    \n    // Toggle panel visibility - move it off-screen to the left\n    adminPanel.style.transform = isVisible ? \"translateX(-100%)\" : \"translateX(0px)\";\n    \n    // Update admin button active state\n    const navAdmin = document.getElementById(\"nav-admin\");\n    if (navAdmin) {\n      navAdmin.classList.toggle(\"active\", !isVisible);\n    }\n  }\n}\n\n  setupEventListeners() {\n    try {\n      // Navigation\n      const brandLink = document.getElementById(\"brand-link\");\n      if (brandLink) {\n        brandLink.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          this.showView(\"welcome\");\n        });\n      }\n\n      const navWelcome = document.getElementById(\"nav-welcome\");\n      if (navWelcome) {\n        navWelcome.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          this.showView(\"welcome\");\n        });\n      }\n\n      const navAssessment = document.getElementById(\"nav-assessment\");\n      if (navAssessment) {\n        navAssessment.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          this.showView(\"assessment\");\n        });\n      }\n\n      const navVisualization = document.getElementById(\"nav-visualization\");\n      if (navVisualization) {\n        navVisualization.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          this.showView(\"visualization\");\n        });\n      }\n\n      const navRecommendations = document.getElementById(\"nav-recommendations\");\n      if (navRecommendations) {\n        navRecommendations.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          this.showView(\"recommendations\");\n        });\n      }\n\n      const navExport = document.getElementById(\"nav-export\");\n      if (navExport) {\n        navExport.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          this.showView(\"export\");\n        });\n      }\n\n      // Admin panel toggle\n      const navAdmin = document.getElementById(\"nav-admin\");\n      if (navAdmin) {\n        navAdmin.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          this.toggleAdminPanel();\n        });\n      }\n\n      // Start assessment button\n      const startAssessmentBtn = document.getElementById(\n        \"start-assessment-btn\",\n      );\n      if (startAssessmentBtn) {\n        startAssessmentBtn.addEventListener(\"click\", () => {\n          this.showView(\"assessment\");\n        });\n      }\n    } catch (error) {\n      console.error(\"Error setting up event listeners:\", error);\n    }\n\n    // Keyboard navigation\n    document.addEventListener(\"keydown\", (e) => {\n      if (e.ctrlKey || e.metaKey) {\n        switch (e.key) {\n          case \"1\":\n            e.preventDefault();\n            this.showView(\"welcome\");\n            break;\n          case \"2\":\n            e.preventDefault();\n            this.showView(\"assessment\");\n            break;\n          case \"3\":\n            e.preventDefault();\n            this.showView(\"visualization\");\n            break;\n          case \"4\":\n            e.preventDefault();\n            this.showView(\"recommendations\");\n            break;\n          case \"5\":\n            e.preventDefault();\n            this.showView(\"export\");\n            break;\n          case \"6\":\n            e.preventDefault();\n            this.toggleAdminPanel();\n            break;\n        }\n      }\n    });\n  }\n\n  showView(viewName) {\n    console.log(`=== showView called with: ${viewName} ===`);\n    try {\n      console.log(`Step 1: Hiding all views...`);\n      // Hide all views\n      const allViews = document.querySelectorAll(\".view-container\");\n      console.log(`Found ${allViews.length} view containers`);\n      allViews.forEach((view) => {\n        view.style.display = \"none\";\n      });\n\n      console.log(`Step 2: Updating navigation...`);\n      // Update navigation\n      const allNavLinks = document.querySelectorAll(\".nav-link\");\n      console.log(`Found ${allNavLinks.length} nav links`);\n      allNavLinks.forEach((link) => {\n        link.classList.remove(\"active\");\n      });\n\n      console.log(`Step 3: Showing target view: ${viewName}-view`);\n      // Show selected view\n      const targetView = document.getElementById(`${viewName}-view`);\n      console.log(`Target view element:`, targetView);\n\n      if (targetView) {\n        targetView.style.display = \"block\";\n        console.log(`Step 3a: Target view displayed`);\n\n        // Activate corresponding nav link\n        const navLink = document.getElementById(`nav-${viewName}`);\n        console.log(`Nav link element:`, navLink);\n        if (navLink) {\n          navLink.classList.add(\"active\");\n          console.log(`Step 3b: Nav link activated`);\n        }\n\n        this.currentView = viewName;\n        console.log(`Step 3c: Current view set to ${viewName}`);\n\n        console.log(`Step 4: Initializing view-specific content...`);\n        // Initialize view-specific content\n        switch (viewName) {\n          case \"assessment\":\n            this.renderAssessmentView();\n            break;\n          case \"visualization\":\n            this.renderVisualizationView();\n            break;\n          case \"recommendations\":\n            this.renderRecommendationsView();\n            break;\n          case \"export\":\n            this.renderExportView();\n            break;\n        }\n        console.log(`Step 4a: View-specific content initialized`);\n\n        console.log(`Step 5: Updating progress indicator...`);\n        // Update progress indicator\n        this.updateProgressIndicator();\n        console.log(`Step 5a: Progress indicator updated`);\n\n        // Scroll to top\n        window.scrollTo(0, 0);\n        console.log(`Step 6: Scrolled to top`);\n\n        console.log(`=== View ${viewName} shown successfully ===`);\n      } else {\n        console.error(`View ${viewName} not found`);\n        console.error(\n          `Available views:`,\n          Array.from(document.querySelectorAll('[id$=\"-view\"]')).map(\n            (el) => el.id,\n          ),\n        );\n      }\n    } catch (error) {\n      console.error(`Error showing view ${viewName}:`, error);\n      console.error(`Error stack:`, error.stack);\n    }\n  }\n\n  renderWelcomeView() {\n    console.log(\"Rendering welcome view...\");\n    try {\n      // Welcome view is static HTML, just ensure it's visible\n      this.showView(\"welcome\");\n      console.log(\"Welcome view rendered successfully\");\n    } catch (error) {\n      console.error(\"Error rendering welcome view:\", error);\n      // Fallback: manually show welcome view\n      const welcomeView = document.getElementById(\"welcome-view\");\n      if (welcomeView) {\n        welcomeView.style.display = \"block\";\n      }\n    }\n  }\n\n  renderAssessmentView() {\n    if (this.assessmentEngine) {\n      this.assessmentEngine.render();\n      this.showProgressIndicator();\n    }\n  }\n\n  renderVisualizationView() {\n    if (this.visualizer) {\n      // Small delay to ensure container is visible before rendering\n      setTimeout(() => {\n        this.visualizer.render();\n      }, 100);\n    }\n  }\n\n  renderRecommendationsView() {\n    console.log(\"renderRecommendationsView called\");\n    console.log(\"hasCompletedAssessment:\", this.hasCompletedAssessment());\n    console.log(\"recommendations object:\", this.recommendations);\n    console.log(\"recommendationEngine available:\", !!this.recommendationEngine);\n    \n    if (this.recommendationEngine) {\n      // Ensure recommendations are generated before rendering\n      if (this.hasCompletedAssessment() && (!this.recommendations || Object.keys(this.recommendations).length === 0)) {\n        console.log(\"Calling calculateScores to generate recommendations\");\n        this.calculateScores();\n      }\n      console.log(\"Calling recommendationEngine.render()\");\n      this.recommendationEngine.render();\n    }\n  }\n\n  renderExportView() {\n    if (this.exportManager) {\n      this.exportManager.render();\n    }\n  }\n\n  updateProgressIndicator() {\n    const progressContainer = document.getElementById(\"progress-container\");\n    const progressBar = document.getElementById(\"overall-progress\");\n    const progressText = document.getElementById(\"progress-text\");\n\n    if (this.currentView === \"welcome\") {\n      progressContainer.style.display = \"none\";\n      return;\n    }\n\n    // Calculate overall progress\n    let progress = 0;\n    switch (this.currentView) {\n      case \"assessment\":\n        progress = this.getAssessmentProgress();\n        break;\n      case \"visualization\":\n        progress = this.hasCompletedAssessment() ? 75 : 25;\n        break;\n      case \"recommendations\":\n        progress = this.hasCompletedAssessment() ? 90 : 50;\n        break;\n      case \"export\":\n        progress = 100;\n        break;\n    }\n\n    progressContainer.style.display = \"block\";\n    progressBar.style.width = `${progress}%`;\n    progressText.textContent = `${Math.round(progress)}%`;\n  }\n\n  showProgressIndicator() {\n    document.getElementById(\"progress-container\").style.display = \"block\";\n  }\n\n  hideProgressIndicator() {\n    document.getElementById(\"progress-container\").style.display = \"none\";\n  }\n\n  getAssessmentProgress() {\n    if (!this.assessmentEngine) return 0;\n\n    const totalQuestions = this.getTotalQuestions();\n    const answeredQuestions = Object.keys(this.assessmentResponses).length;\n\n    return totalQuestions > 0\n      ? Math.min((answeredQuestions / totalQuestions) * 60, 60)\n      : 0;\n  }\n\n  getTotalQuestions() {\n    if (!this.questionData.assessmentCategories) return 0;\n\n    return this.questionData.assessmentCategories.reduce((total, category) => {\n      return total + (category.questions ? category.questions.length : 0);\n    }, 0);\n  }\n\n  hasCompletedAssessment() {\n    const totalQuestions = this.getTotalQuestions();\n    const answeredQuestions = Object.keys(this.assessmentResponses).length;\n    return answeredQuestions >= totalQuestions && totalQuestions > 0;\n  }\n\n  updateAssessmentResponse(questionId, response) {\n    this.assessmentResponses[questionId] = response;\n    this.calculateScores();\n    this.updateProgressIndicator();\n\n    // Auto-save to localStorage\n    this.saveAssessmentState();\n  }\n\n  calculateScores() {\n    console.log(\"Calculating scores...\");\n    if (!this.questionData.assessmentCategories) return;\n\n    const dimensionScores = {\n      complexity: [],\n      safety: [],\n      scale: [],\n      maturity: [],\n    };\n\n    // Calculate dimension scores based on responses\n    this.questionData.assessmentCategories.forEach((category) => {\n      category.questions.forEach((question) => {\n        const response = this.assessmentResponses[question.id];\n        if (response && response.score !== undefined) {\n          const dimension = question.dimension;\n          if (dimensionScores[dimension]) {\n            dimensionScores[dimension].push({\n              score: response.score,\n              weight: question.weight || 1,\n            });\n          }\n        }\n      });\n    });\n\n    // Calculate weighted averages for each dimension\n    Object.keys(dimensionScores).forEach((dimension) => {\n      const scores = dimensionScores[dimension];\n      if (scores.length > 0) {\n        const weightedSum = scores.reduce(\n          (sum, item) => sum + item.score * item.weight,\n          0,\n        );\n        const totalWeight = scores.reduce((sum, item) => sum + item.weight, 0);\n        this.assessmentScores[dimension] =\n          totalWeight > 0 ? weightedSum / totalWeight : 0;\n      }\n    });\n\n    // Calculate overall score (weighted average of dimensions)\n    const dimensionWeights = {\n      complexity: 0.3,\n      safety: 0.25,\n      scale: 0.25,\n      maturity: 0.2,\n    };\n\n    let overallScore = 0;\n    let totalWeight = 0;\n\n    Object.keys(dimensionWeights).forEach((dimension) => {\n      if (this.assessmentScores[dimension] > 0) {\n        overallScore +=\n          this.assessmentScores[dimension] * dimensionWeights[dimension];\n        totalWeight += dimensionWeights[dimension];\n      }\n    });\n\n    this.assessmentScores.overall =\n      totalWeight > 0 ? overallScore / totalWeight : 0;\n\n    // Generate recommendations if assessment is complete\n    if (this.hasCompletedAssessment() && this.recommendationEngine) {\n      console.log(\"Assessment complete, generating recommendations...\");\n      console.log(\"Assessment scores data:\", this.assessmentScores);\n      \n      // Ensure the scores object has the expected structure\n      const recommendationScores = {\n        complexity: this.assessmentScores.complexity || 0,\n        safety: this.assessmentScores.safety || 0,\n        scale: this.assessmentScores.scale || 0,\n        maturity: this.assessmentScores.maturity || 0\n      };\n      \n      console.log(\"Scores passed to recommendation engine:\", recommendationScores);\n      this.recommendations = this.recommendationEngine.generateRecommendations(recommendationScores);\n      console.log(\"Generated recommendations:\", this.recommendations);\n      console.log(\"Recommendations object keys:\", Object.keys(this.recommendations || {}));\n    }\n  }\n\n  saveAssessmentState() {\n    const state = {\n      responses: this.assessmentResponses,\n      scores: this.assessmentScores,\n      recommendations: this.recommendations,\n      timestamp: Date.now(),\n    };\n    localStorage.setItem(\"se-tailoring-assessment\", JSON.stringify(state));\n  }\n\n  loadAssessmentState() {\n    try {\n      const saved = localStorage.getItem(\"se-tailoring-assessment\");\n      if (saved) {\n        const state = JSON.parse(saved);\n\n        // Only load if saved within last 24 hours\n        const dayOld = 24 * 60 * 60 * 1000;\n        if (Date.now() - state.timestamp < dayOld) {\n          this.assessmentResponses = state.responses || {};\n          this.assessmentScores = state.scores || {};\n          this.recommendations = state.recommendations || {};\n          return true;\n        }\n      }\n    } catch (error) {\n      // Failed to load saved assessment state\n    }\n    return false;\n  }\n\n  clearAssessmentState() {\n    this.assessmentResponses = {};\n    this.assessmentScores = {\n      complexity: 0,\n      safety: 0,\n      scale: 0,\n      maturity: 0,\n      overall: 0,\n    };\n    this.recommendations = {};\n    localStorage.removeItem(\"se-tailoring-assessment\");\n    this.updateProgressIndicator();\n  }\n\n  showLoading() {\n    document.getElementById(\"loading-overlay\").style.display = \"flex\";\n  }\n\n  hideLoading() {\n    console.log(\"=== Hiding loading overlay ===\");\n    const loadingOverlay = document.getElementById(\"loading-overlay\");\n    console.log(\"Loading overlay element:\", loadingOverlay);\n\n    if (loadingOverlay) {\n      console.log(\"Current display style:\", loadingOverlay.style.display);\n      console.log(\n        \"Current computed style:\",\n        window.getComputedStyle(loadingOverlay).display,\n      );\n\n      // Try multiple approaches to hide it\n      loadingOverlay.style.display = \"none\";\n      loadingOverlay.style.visibility = \"hidden\";\n      loadingOverlay.style.opacity = \"0\";\n      loadingOverlay.style.pointerEvents = \"none\";\n\n      // Also add a class to ensure it stays hidden\n      loadingOverlay.classList.add(\"hidden\");\n\n      console.log(\"Loading overlay hidden with multiple methods\");\n      console.log(\"New display style:\", loadingOverlay.style.display);\n      console.log(\n        \"New computed style:\",\n        window.getComputedStyle(loadingOverlay).display,\n      );\n    } else {\n      console.warn(\"Loading overlay element not found\");\n      console.log(\n        \"Available elements with loading in ID:\",\n        Array.from(document.querySelectorAll('[id*=\"loading\"]')).map(\n          (el) => el.id,\n        ),\n      );\n    }\n    console.log(\"=== Loading overlay hide attempt complete ===\");\n  }\n\n  showError(message) {\n    console.error(\"Showing error:\", message);\n\n    // Create and show error alert\n    const alertHtml = `\n            <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n                <i class=\"bi bi-exclamation-triangle-fill me-2\"></i>\n                <strong>Error:</strong> ${message}\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n            </div>\n        `;\n\n    // Insert at top of main content\n    const mainContent = document.getElementById(\"main-content\");\n    if (mainContent) {\n      mainContent.insertAdjacentHTML(\"afterbegin\", alertHtml);\n\n      // Auto-remove after 10 seconds\n      setTimeout(() => {\n        const alert = mainContent.querySelector(\".alert-danger\");\n        if (alert) {\n          try {\n            const bsAlert = new bootstrap.Alert(alert);\n            bsAlert.close();\n          } catch (e) {\n            // Fallback: just remove the element\n            alert.remove();\n          }\n        }\n      }, 10000);\n    } else {\n      console.error(\"Main content element not found for error display\");\n    }\n  }\n\n  showSuccess(message) {\n    // Create and show success alert\n    const alertHtml = `\n            <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                <i class=\"bi bi-check-circle-fill me-2\"></i>\n                ${message}\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n            </div>\n        `;\n\n    // Insert at top of main content\n    const mainContent = document.getElementById(\"main-content\");\n    mainContent.insertAdjacentHTML(\"afterbegin\", alertHtml);\n\n    // Auto-remove after 5 seconds\n    setTimeout(() => {\n      const alert = mainContent.querySelector(\".alert-success\");\n      if (alert) {\n        const bsAlert = new bootstrap.Alert(alert);\n        bsAlert.close();\n      }\n    }, 5000);\n  }\n\n  // Utility methods\n  getProcessById(processId) {\n    return this.processData.processes?.find((p) => p.id === processId);\n  }\n\n  getDependenciesForProcess(processId) {\n    return (\n      this.dependencyData.dependencies?.filter((d) => d.source === processId) ||\n      []\n    );\n  }\n\n  getProcessesDependingOn(processId) {\n    return (\n      this.dependencyData.dependencies?.filter((d) => d.target === processId) ||\n      []\n    );\n  }\n\n  showProcessDetails(processId) {\n    const modal = document.getElementById('process-detail-modal');\n    const title = document.getElementById('process-modal-title');\n    const body = document.getElementById('process-modal-body');\n\n    if (!modal || !title || !body) {\n      console.error('Modal elements not found - check HTML structure');\n      return;\n    }\n\n    // Ensure modal is properly initialized in the DOM\n    if (!modal.classList.contains('modal')) {\n      console.error('Modal element is not properly initialized');\n      return;\n    }\n\n    const process = this.getProcessById(processId);\n    const recommendation = this.recommendations[processId];\n\n    if (!process) {\n      return;\n    }\n\n    const recommendedLevel = recommendation?.recommendedLevel || 'basic';\n    \n    title.textContent = process.name;\n\n    body.innerHTML = `\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <h6>Current Recommendation</h6>\n                    <span class=\"level-badge level-${recommendedLevel}\">${recommendedLevel}</span>\n                    <p class=\"mt-2 text-muted\">${process.tailoringLevels?.[recommendedLevel]?.description || 'No description available'}</p>\n                </div>\n                <div class=\"col-md-6\">\n                    <h6>Process Metrics</h6>\n                    <ul class=\"list-unstyled\">\n                        <li><strong>Effort:</strong> ${recommendation?.effort || 1}/5</li>\n                        <li><strong>Complexity:</strong> ${recommendation?.complexity || 1}/5</li>\n                        <li><strong>Confidence:</strong> ${Math.round((recommendation?.confidence || 0.8) * 100)}%</li>\n                        <li><strong>Category:</strong> ${this.processData.processCategories?.[process.category] || process.category}</li>\n                    </ul>\n                </div>\n            </div>\n\n            ${recommendation?.rationale ? `\n                <div class=\"mt-3\">\n                    <h6>Rationale</h6>\n                    <ul class=\"list-unstyled\">\n                        ${recommendation.rationale.map(reason => `<li class=\"text-muted\">• ${reason}</li>`).join('')}\n                    </ul>\n                </div>\n            ` : ''}\n\n            ${process?.tailoringLevels ? `\n                <div class=\"mt-3\">\n                    <h6>Available Tailoring Levels</h6>\n                    <div class=\"accordion\" id=\"levels-accordion\">\n                        ${Object.keys(process.tailoringLevels).map((level, index) => `\n                            <div class=\"accordion-item\">\n                                <h2 class=\"accordion-header\">\n                                    <button class=\"accordion-button ${level !== recommendedLevel ? 'collapsed' : ''}\" \n                                            type=\"button\" data-bs-toggle=\"collapse\" \n                                            data-bs-target=\"#level-${level}\">\n                                        <span class=\"level-badge level-${level} me-2\">${level}</span>\n                                        ${process.tailoringLevels[level].description}\n                                    </button>\n                                </h2>\n                                <div id=\"level-${level}\" \n                                     class=\"accordion-collapse collapse ${level === recommendedLevel ? 'show' : ''}\"\n                                     data-bs-parent=\"#levels-accordion\">\n                                    <div class=\"accordion-body\">\n                                        <p><strong>Activities:</strong></p>\n                                        <ul>\n                                            ${process.tailoringLevels[level].activities?.map(activity => `<li>${activity}</li>`).join('') || '<li>No activities specified</li>'}\n                                        </ul>\n                                        <p><strong>Key Outputs:</strong></p>\n                                        <ul>\n                                            ${process.tailoringLevels[level].outputs?.map(output => `<li>${output}</li>`).join('') || '<li>No outputs specified</li>'}\n                                        </ul>\n                                        <p><strong>Key Artifacts/Deliverables:</strong></p>\n                                        <ul>\n                                            ${process.tailoringLevels[level].artifacts?.map(artifact => `<li>${artifact}</li>`).join('') || '<li>No artifacts specified</li>'}\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        `).join('')}\n                    </div>\n                </div>\n            ` : ''}\n        `;\n\n    // Ensure Bootstrap is available\n    if (typeof bootstrap === 'undefined') {\n      console.error('Bootstrap not available');\n      return;\n    }\n\n    try {\n      const bsModal = new bootstrap.Modal(modal);\n      bsModal.show();\n      console.log('Modal shown successfully for process:', processId);\n      \n      // Debug: Check modal state after showing\n      setTimeout(() => {\n        console.log('=== MODAL DEBUG INFO ===');\n        console.log('Modal display:', modal.style.display);\n        console.log('Modal classes:', modal.className);\n        console.log('Modal visibility:', modal.offsetParent !== null);\n        \n        // Check if backdrop exists\n        const backdrops = document.querySelectorAll('.modal-backdrop');\n        console.log('Backdrops found:', backdrops.length);\n        \n        // Check z-index issues\n        console.log('Modal z-index:', modal.style.zIndex);\n        console.log('Modal computed z-index:', window.getComputedStyle(modal).zIndex);\n        \n        // Check if modal is actually visible\n        const rect = modal.getBoundingClientRect();\n        console.log('Modal position:', rect.top, rect.left, rect.width, rect.height);\n        console.log('Modal in viewport:', rect.top >= 0 && rect.left >= 0 && \n          rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && \n          rect.right <= (window.innerWidth || document.documentElement.clientWidth));\n        \n        // Check if any parent elements are hidden\n        let current = modal;\n        const hiddenParents = [];\n        while (current.parentElement) {\n          current = current.parentElement;\n          const style = window.getComputedStyle(current);\n          if (style.display === 'none' || style.visibility === 'hidden' || style.opacity === '0') {\n            hiddenParents.push(current);\n          }\n        }\n        console.log('Hidden parents:', hiddenParents.length, hiddenParents);\n        \n        // Force modal to be visible if hidden - check all possible hiding conditions\n        const computedStyle = window.getComputedStyle(modal);\n        if (modal.offsetParent === null || \n            rect.width === 0 || \n            rect.height === 0 ||\n            computedStyle.display === 'none' ||\n            computedStyle.visibility === 'hidden' ||\n            computedStyle.opacity === '0') {\n          \n          console.log('Modal appears hidden - forcing visibility');\n          \n          // Remove from DOM and re-append to ensure proper positioning\n          const parent = modal.parentElement;\n          parent.removeChild(modal);\n          document.body.appendChild(modal);\n          \n          // Force visible styles\n          modal.style.display = 'block';\n          modal.style.visibility = 'visible';\n          modal.style.opacity = '1';\n          modal.style.zIndex = '1050';\n          modal.style.position = 'fixed';\n          modal.style.top = '50%';\n          modal.style.left = '50%';\n          modal.style.transform = 'translate(-50%, -50%)';\n          \n          // Ensure backdrop is properly positioned\n          const backdrops = document.querySelectorAll('.modal-backdrop');\n          backdrops.forEach(backdrop => {\n            backdrop.style.zIndex = '1040';\n          });\n        }\n        \n        console.log('=== END DEBUG ===');\n      }, 100);\n      \n    } catch (error) {\n      console.error('Failed to show modal:', error);\n      // Fallback: manually show the modal if Bootstrap fails\n      modal.style.display = 'block';\n      modal.classList.add('show');\n      document.body.classList.add('modal-open');\n      \n      // Create backdrop manually\n      const backdrop = document.createElement('div');\n      backdrop.className = 'modal-backdrop fade show';\n      backdrop.style.zIndex = '1040';\n      document.body.appendChild(backdrop);\n      \n      // Ensure modal has proper z-index\n      modal.style.zIndex = '1050';\n    }\n  }\n\n  // Public API for components\n  getAssessmentData() {\n    return {\n      responses: this.assessmentResponses,\n      scores: this.assessmentScores,\n      recommendations: this.recommendationEngine ? this.recommendationEngine.getRecommendations() : this.recommendations,\n    };\n  }\n\n  getProcessData() {\n    return this.processData;\n  }\n\n  getDependencyData() {\n    return this.dependencyData;\n  }\n}\n\n// Initialize application when DOM is loaded\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.log(\"DOM loaded, initializing app...\");\n\n  // Failsafe: Hide loading screen after 10 seconds regardless of what happens\n  const failsafeTimeout = setTimeout(() => {\n    console.warn(\"Failsafe timeout reached - hiding loading screen\");\n    forceHideLoadingOverlay();\n  }, 10000);\n\n  // Wait a bit to ensure all scripts are loaded\n  setTimeout(() => {\n    try {\n      // Check if all required components are available\n      const requiredComponents = [\n        \"AssessmentEngine\",\n        \"ProcessNetworkVisualizer\",\n        \"RecommendationEngine\",\n        \"ExportManager\",\n      ];\n\n      const missingComponents = requiredComponents.filter(\n        (comp) => typeof window[comp] === \"undefined\",\n      );\n\n      if (missingComponents.length > 0) {\n        console.error(\"Missing components:\", missingComponents);\n        throw new Error(\n          `Required components not loaded: ${missingComponents.join(\", \")}`,\n        );\n      }\n\n      console.log(\"All components available, initializing app...\");\n      window.seApp = new SEFrameworkApp();\n\n      // Clear failsafe timeout if app initializes successfully\n      clearTimeout(failsafeTimeout);\n\n      // Additional failsafe: Force hide loading overlay after successful initialization\n      setTimeout(() => {\n        console.log(\"Additional failsafe: Forcing loading overlay to hide\");\n        forceHideLoadingOverlay();\n      }, 1000);\n    } catch (error) {\n      console.error(\"Failed to initialize app:\", error);\n\n      // Clear failsafe timeout since we're handling the error\n      clearTimeout(failsafeTimeout);\n\n      // Show error to user\n      const loadingOverlay = document.getElementById(\"loading-overlay\");\n      if (loadingOverlay) {\n        loadingOverlay.innerHTML = `\n                    <div class=\"text-center text-white\">\n                        <div class=\"spinner-border mb-3\" role=\"status\">\n                            <span class=\"visually-hidden\">Loading...</span>\n                        </div>\n                        <p class=\"text-danger\">Failed to initialize application</p>\n                        <p class=\"small\">${error.message}</p>\n                        <button class=\"btn btn-outline-light\" onclick=\"window.location.reload()\">Retry</button>\n                    </div>\n                `;\n      }\n    }\n  }, 100); // Small delay to ensure scripts are loaded\n});\n\n// Aggressive function to hide loading overlay\nfunction forceHideLoadingOverlay() {\n  console.log(\"=== Force hiding loading overlay ===\");\n\n  // Try multiple selectors\n  const selectors = [\n    \"#loading-overlay\",\n    \".loading-overlay\",\n    '[id*=\"loading\"]',\n    \".position-fixed.top-0.start-0.w-100.h-100\",\n  ];\n\n  selectors.forEach((selector) => {\n    try {\n      const elements = document.querySelectorAll(selector);\n      elements.forEach((element) => {\n        console.log(`Hiding element with selector: ${selector}`);\n        element.style.display = \"none\";\n        element.style.visibility = \"hidden\";\n        element.style.opacity = \"0\";\n        element.style.pointerEvents = \"none\";\n        element.classList.add(\"hidden\");\n        element.setAttribute(\"hidden\", \"\");\n      });\n    } catch (error) {\n      console.warn(`Error hiding elements with selector ${selector}:`, error);\n    }\n  });\n\n  // Also try to remove the loading overlay completely\n  try {\n    const loadingOverlay = document.getElementById(\"loading-overlay\");\n    if (loadingOverlay && loadingOverlay.parentNode) {\n      console.log(\"Removing loading overlay from DOM\");\n      loadingOverlay.parentNode.removeChild(loadingOverlay);\n    }\n  } catch (error) {\n    console.warn(\"Error removing loading overlay from DOM:\", error);\n  }\n\n  console.log(\"=== Force hide complete ===\");\n}\n\n// Handle browser back/forward buttons\nwindow.addEventListener(\"popstate\", (event) => {\n  if (window.seApp && event.state) {\n    window.seApp.showView(event.state.view);\n  }\n});\n\n// Export for global access\nwindow.SEFrameworkApp = SEFrameworkApp;\n","/**\n * Assessment Engine Component\n * Manages the assessment interface, question rendering, and response collection\n */\n\nclass AssessmentEngine {\n  constructor(questionData, app) {\n    this.questionData = questionData;\n    this.app = app;\n    this.currentCategoryIndex = 0;\n    this.currentQuestionIndex = 0;\n    this.assessmentContainer = null;\n  }\n\n  render() {\n    this.assessmentContainer = document.getElementById('assessment-content');\n    if (!this.assessmentContainer) return;\n\n    this.renderAssessmentInterface();\n  }\n\n  renderAssessmentInterface() {\n    if (!this.questionData.assessmentCategories || this.questionData.assessmentCategories.length === 0) {\n      this.renderNoQuestions();\n      return;\n    }\n\n    // Clear container once at the beginning to prevent duplicate elements\n    this.assessmentContainer.innerHTML = '';\n    \n    this.renderProgressBar();\n    this.renderCurrentQuestion();\n    this.renderNavigation();\n  }\n\n  renderProgressBar() {\n    const progressContainer = document.createElement('div');\n    progressContainer.className = 'assessment-progress mb-4';\n\n    const totalQuestions = this.getTotalQuestions();\n    const answeredQuestions = Object.keys(this.app.assessmentResponses).length;\n    const progressPercentage = totalQuestions > 0 ? (answeredQuestions / totalQuestions) * 100 : 0;\n\n    progressContainer.innerHTML = `\n            <div class=\"d-flex justify-content-between align-items-center mb-2\">\n                <h6 class=\"mb-0\">Assessment Progress</h6>\n                <small class=\"text-muted\">${answeredQuestions}/${totalQuestions} questions answered</small>\n            </div>\n            <div class=\"progress\" style=\"height: 8px;\">\n                <div class=\"progress-bar\" role=\"progressbar\" \n                     style=\"width: ${progressPercentage}%\" \n                     aria-valuenow=\"${progressPercentage}\" \n                     aria-valuemin=\"0\" \n                     aria-valuemax=\"100\">\n                </div>\n            </div>\n            <div class=\"mt-2\">\n                <small class=\"text-muted\">\n                    ${this.getCurrentCategory()?.name || 'No category'} \n                    (${this.currentQuestionIndex + 1}/${this.getCurrentCategory()?.questions?.length || 0})\n                </small>\n            </div>\n        `;\n\n    this.assessmentContainer.appendChild(progressContainer);\n  }\n\n  renderCurrentQuestion() {\n    const question = this.getCurrentQuestion();\n    if (!question) {\n      this.renderAssessmentComplete();\n      return;\n    }\n\n    const questionCard = document.createElement('div');\n    questionCard.className = 'card question-card';\n    questionCard.innerHTML = `\n            <div class=\"card-header\">\n                <h5 class=\"card-title mb-0\">\n                    <span class=\"badge bg-primary me-2\">Q${this.currentQuestionIndex + 1}</span>\n                    ${question.text}\n                </h5>\n                <small class=\"text-muted\">${this.getDimensionBadge(question.dimension)}</small>\n            </div>\n            <div class=\"card-body\">\n                ${this.renderResponseOptions(question)}\n                ${question.description ? `<p class=\"text-muted mt-3\">${question.description}</p>` : ''}\n            </div>\n        `;\n\n    this.assessmentContainer.appendChild(questionCard);\n  }\n\n  renderResponseOptions(question) {\n    const currentResponse = this.app.assessmentResponses[question.id];\n    const currentValue = currentResponse ? currentResponse.score : null;\n\n    return `\n            <div class=\"response-options\">\n                <div class=\"btn-group-vertical w-100\" role=\"group\">\n                    ${question.options.map(option => `\n                        <button type=\"button\" \n                                class=\"btn btn-outline-primary ${currentValue === option.value ? 'active' : ''}\"\n                                data-score=\"${option.value}\"\n                                onclick=\"window.seApp.assessmentEngine.selectResponse(${option.value}, '${option.label}')\">\n                            ${option.label}\n                        </button>\n                    `).join('')}\n                </div>\n            </div>\n        `;\n  }\n\n  renderNavigation() {\n    // Clear any existing navigation elements first to prevent duplicates\n    const existingNav = this.assessmentContainer.querySelector('.assessment-navigation');\n    if (existingNav) {\n      existingNav.remove();\n    }\n    \n    const navContainer = document.createElement('div');\n    navContainer.className = 'assessment-navigation mt-4';\n    \n    // Check if current question has been answered\n    const currentQuestion = this.getCurrentQuestion();\n    const hasAnswered = currentQuestion && this.app.assessmentResponses[currentQuestion.id];\n    const isLast = this.isLastQuestion();\n    \n    // Only show \"Complete Assessment\" when on the last question AND it has been answered\n    const buttonText = (isLast && hasAnswered) ? 'Complete Assessment' : 'Next Question';\n    const buttonClass = (isLast && hasAnswered) ? 'btn-success' : 'btn-primary';\n    const buttonIcon = (isLast && hasAnswered) ? 'bi-check-lg' : 'bi-arrow-right';\n    \n    navContainer.innerHTML = `\n            <div class=\"d-flex justify-content-between\">\n                <button class=\"btn btn-outline-secondary\" \n                        onclick=\"window.seApp.assessmentEngine.previousQuestion()\"\n                        ${this.currentQuestionIndex === 0 && this.currentCategoryIndex === 0 ? 'disabled' : ''}>\n                    <i class=\"bi bi-arrow-left\"></i> Previous\n                </button>\n                <button class=\"btn ${buttonClass}\" \n                        onclick=\"window.seApp.assessmentEngine.nextQuestion()\"\n                        ${!hasAnswered ? 'disabled' : ''}>\n                    ${buttonText} \n                    <i class=\"bi ${buttonIcon}\"></i>\n                </button>\n            </div>\n        `;\n\n    this.assessmentContainer.appendChild(navContainer);\n  }\n\n  renderNoQuestions() {\n    this.assessmentContainer.innerHTML = `\n            <div class=\"text-center py-5\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <i class=\"bi bi-exclamation-triangle display-1 text-warning mb-3\"></i>\n                        <h3>No Assessment Questions</h3>\n                        <p class=\"text-muted\">\n                            The assessment questions could not be loaded. Please check the data files.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  renderAssessmentComplete() {\n    // Generate recommendations automatically when assessment is complete\n    this.app.calculateScores();\n    \n    this.assessmentContainer.innerHTML = `\n            <div class=\"text-center py-5\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <i class=\"bi bi-check-circle display-1 text-success mb-3\"></i>\n                        <h3>Assessment Complete!</h3>\n                        <p class=\"text-muted mb-4\">\n                            You have completed all assessment questions. Your process tailoring recommendations are ready.\n                        </p>\n                        <div class=\"mb-4\">\n                            <h5>Assessment Scores</h5>\n                            <div class=\"row\">\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Overall</h6>\n                                            <h3 class=\"text-primary\">${this.app.assessmentScores.overall?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Complexity</h6>\n                                            <h3 class=\"text-info\">${this.app.assessmentScores.complexity?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Safety</h6>\n                                            <h3 class=\"text-warning\">${this.app.assessmentScores.safety?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Scale</h6>\n                                            <h3 class=\"text-success\">${this.app.assessmentScores.scale?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <button class=\"btn btn-primary btn-lg\" onclick=\"window.seApp.showView('recommendations')\">\n                            <i class=\"bi bi-graph-up\"></i>\n                            View Recommendations\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  selectResponse(score, label) {\n    const question = this.getCurrentQuestion();\n    if (!question) return;\n\n    this.app.updateAssessmentResponse(question.id, {\n      score: score,\n      label: label,\n      dimension: question.dimension,\n    });\n\n    // Update UI to show selected response\n    this.updateResponseButtons(score);\n  }\n\n  updateResponseButtons(selectedScore) {\n    const buttons = this.assessmentContainer.querySelectorAll('.response-options button');\n    buttons.forEach(button => {\n      const score = parseInt(button.getAttribute('data-score'));\n      if (score === selectedScore) {\n        button.classList.add('active');\n      } else {\n        button.classList.remove('active');\n      }\n    });\n    \n    // Re-render navigation to enable Next button after response selection\n    this.renderNavigation();\n  }\n\n  nextQuestion() {\n    const currentCategory = this.getCurrentCategory();\n    if (!currentCategory) return;\n\n    // Move to next question in current category\n    this.currentQuestionIndex++;\n\n    // If we've reached the end of current category, move to next category\n    if (this.currentQuestionIndex >= currentCategory.questions.length) {\n      this.currentCategoryIndex++;\n      this.currentQuestionIndex = 0;\n\n      // If we've reached the end of all categories, show completion\n      if (this.currentCategoryIndex >= this.questionData.assessmentCategories.length) {\n        this.renderAssessmentComplete();\n        return;\n      }\n    }\n\n    this.renderAssessmentInterface();\n  }\n\n  previousQuestion() {\n    // Move to previous question\n    this.currentQuestionIndex--;\n\n    // If we've gone before the first question in current category\n    if (this.currentQuestionIndex < 0) {\n      this.currentCategoryIndex--;\n\n      // If we've gone before the first category, stay at first question\n      if (this.currentCategoryIndex < 0) {\n        this.currentCategoryIndex = 0;\n        this.currentQuestionIndex = 0;\n      } else {\n        // Move to last question of previous category\n        const prevCategory = this.questionData.assessmentCategories[this.currentCategoryIndex];\n        this.currentQuestionIndex = prevCategory.questions.length - 1;\n      }\n    }\n\n    this.renderAssessmentInterface();\n  }\n\n  getCurrentCategory() {\n    return this.questionData.assessmentCategories[this.currentCategoryIndex];\n  }\n\n  getCurrentQuestion() {\n    const category = this.getCurrentCategory();\n    return category?.questions?.[this.currentQuestionIndex];\n  }\n\n  getTotalQuestions() {\n    if (!this.questionData.assessmentCategories) return 0;\n    return this.questionData.assessmentCategories.reduce((total, category) => {\n      return total + (category.questions ? category.questions.length : 0);\n    }, 0);\n  }\n\n  isLastQuestion() {\n    const lastCategoryIndex = this.questionData.assessmentCategories.length - 1;\n    const lastCategory = this.questionData.assessmentCategories[lastCategoryIndex];\n    return this.currentCategoryIndex === lastCategoryIndex &&\n               this.currentQuestionIndex === lastCategory.questions.length - 1;\n  }\n\n  getDimensionBadge(dimension) {\n    const badgeClasses = {\n      complexity: 'bg-info',\n      safety: 'bg-warning',\n      scale: 'bg-success',\n      maturity: 'bg-secondary',\n    };\n\n    const dimensionLabels = {\n      complexity: 'Technical Complexity',\n      safety: 'Safety Criticality',\n      scale: 'Project Scale',\n      maturity: 'Organizational Maturity',\n    };\n\n    return `<span class=\"badge ${badgeClasses[dimension] || 'bg-secondary'}\">${dimensionLabels[dimension] || dimension}</span>`;\n  }\n\n  resetAssessment() {\n    this.currentCategoryIndex = 0;\n    this.currentQuestionIndex = 0;\n    this.renderAssessmentInterface();\n  }\n}\n\n// Export for global access\nwindow.AssessmentEngine = AssessmentEngine;\n","/**\n * Export Manager Component\n * Handles PDF reports, JSON configuration, and Excel analytics export\n */\n\nclass ExportManager {\n  constructor(app) {\n    this.app = app;\n  }\n\n  render() {\n    const container = document.getElementById('export-content');\n    if (!container) return;\n\n    const assessmentData = this.app.getAssessmentData();\n    const hasData = assessmentData.recommendations && Object.keys(assessmentData.recommendations).length > 0;\n\n    if (!hasData) {\n      this.renderNoData(container);\n      return;\n    }\n\n    this.renderExportOptions(container, assessmentData);\n  }\n\n  renderNoData(container) {\n    container.innerHTML = `\n            <div class=\"text-center py-5\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <i class=\"bi bi-exclamation-circle display-1 text-warning mb-3\"></i>\n                        <h3>No Data to Export</h3>\n                        <p class=\"text-muted mb-4\">\n                            Complete the assessment first to generate exportable recommendations and reports.\n                        </p>\n                        <button class=\"btn btn-primary\" onclick=\"window.seApp.showView('assessment')\">\n                            <i class=\"bi bi-clipboard-check\"></i>\n                            Start Assessment\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  renderExportOptions(container, assessmentData) {\n    const stats = this.calculateExportStats(assessmentData);\n\n    container.innerHTML = `\n            <div class=\"card shadow-sm mb-4\">\n                <div class=\"card-header bg-gradient-primary text-white\">\n                    <h4 class=\"card-title mb-0\">\n                        <i class=\"bi bi-download\"></i>\n                        Export Reports & Data\n                    </h4>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"alert alert-info\">\n                        <i class=\"bi bi-info-circle me-2\"></i>\n                        <strong>Ready to Export:</strong> Your assessment contains ${stats.totalProcesses} process recommendations \n                        with ${stats.totalQuestions} assessment responses across ${stats.categories} categories.\n                    </div>\n                    \n                    <div class=\"row mb-4\">\n                        <div class=\"col-md-3 text-center\">\n                            <div class=\"stat-card\">\n                                <span class=\"stat-number text-primary\">${stats.totalProcesses}</span>\n                                <span class=\"stat-label\">Process Recommendations</span>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3 text-center\">\n                            <div class=\"stat-card\">\n                                <span class=\"stat-number text-success\">${stats.averageConfidence}%</span>\n                                <span class=\"stat-label\">Average Confidence</span>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3 text-center\">\n                            <div class=\"stat-card\">\n                                <span class=\"stat-number text-warning\">${stats.totalEffort}</span>\n                                <span class=\"stat-label\">Total Effort Score</span>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3 text-center\">\n                            <div class=\"stat-card\">\n                                <span class=\"stat-number text-info\">${stats.dependencies}</span>\n                                <span class=\"stat-label\">Dependencies</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-lg-4 mb-4\">\n                    <div class=\"export-option\" data-export-type=\"pdf\">\n                        <div class=\"export-icon\">\n                            <i class=\"bi bi-file-earmark-pdf-fill\"></i>\n                        </div>\n                        <h5 class=\"export-title\">Professional PDF Report</h5>\n                        <p class=\"export-description\">\n                            Comprehensive report with executive summary, detailed recommendations, \n                            process network visualization, and implementation roadmap.\n                        </p>\n                        <button class=\"btn btn-primary\" id=\"export-pdf-btn\">\n                            <i class=\"bi bi-download\"></i>\n                            Download PDF\n                        </button>\n                    </div>\n                </div>\n                \n                <div class=\"col-lg-4 mb-4\">\n                    <div class=\"export-option\" data-export-type=\"json\">\n                        <div class=\"export-icon\">\n                            <i class=\"bi bi-file-earmark-code-fill\"></i>\n                        </div>\n                        <h5 class=\"export-title\">JSON Configuration</h5>\n                        <p class=\"export-description\">\n                            Machine-readable format containing assessment data, scores, and recommendations \n                            for integration with other tools and systems.\n                        </p>\n                        <button class=\"btn btn-outline-primary\" id=\"export-json-btn\">\n                            <i class=\"bi bi-download\"></i>\n                            Download JSON\n                        </button>\n                    </div>\n                </div>\n                \n                <div class=\"col-lg-4 mb-4\">\n                    <div class=\"export-option\" data-export-type=\"excel\">\n                        <div class=\"export-icon\">\n                            <i class=\"bi bi-file-earmark-spreadsheet-fill\"></i>\n                        </div>\n                        <h5 class=\"export-title\">Excel Analytics</h5>\n                        <p class=\"export-description\">\n                            Spreadsheet format with assessment responses, process recommendations, \n                            effort calculations, and pivot tables for further analysis.\n                        </p>\n                        <button class=\"btn btn-outline-success\" id=\"export-excel-btn\">\n                            <i class=\"bi bi-download\"></i>\n                            Download Excel\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h6 class=\"card-title mb-0\">\n                        <i class=\"bi bi-gear\"></i>\n                        Export Options\n                    </h6>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"include-assessment-details\" checked>\n                                <label class=\"form-check-label\" for=\"include-assessment-details\">\n                                    Include detailed assessment responses\n                                </label>\n                            </div>\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"include-rationale\" checked>\n                                <label class=\"form-check-label\" for=\"include-rationale\">\n                                    Include recommendation rationale\n                                </label>\n                            </div>\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"include-dependencies\" checked>\n                                <label class=\"form-check-label\" for=\"include-dependencies\">\n                                    Include process dependencies\n                                </label>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"include-visualization\" checked>\n                                <label class=\"form-check-label\" for=\"include-visualization\">\n                                    Include process network visualization\n                                </label>\n                            </div>\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"include-metadata\" checked>\n                                <label class=\"form-check-label\" for=\"include-metadata\">\n                                    Include metadata and timestamps\n                                </label>\n                            </div>\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"include-implementation-guide\">\n                                <label class=\"form-check-label\" for=\"include-implementation-guide\">\n                                    Include implementation guidance\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"mt-4 text-center\">\n                <small class=\"text-muted\">\n                    <i class=\"bi bi-shield-check\"></i>\n                    All exports are generated locally in your browser. No data is sent to external servers.\n                </small>\n            </div>\n        `;\n\n    this.attachExportEventListeners();\n  }\n\n  calculateExportStats(assessmentData) {\n    const recommendations = assessmentData.recommendations || {};\n    const responses = assessmentData.responses || {};\n\n    const totalProcesses = Object.keys(recommendations).length;\n    const totalQuestions = Object.keys(responses).length;\n    const categories = new Set(Object.values(responses).map(r => r.dimension)).size;\n\n    const confidenceValues = Object.values(recommendations).map(r => r.confidence || 0);\n    const averageConfidence = confidenceValues.length > 0\n      ? Math.round(confidenceValues.reduce((sum, c) => sum + c, 0) / confidenceValues.length * 100)\n      : 0;\n\n    const totalEffort = Object.values(recommendations).reduce((sum, r) => sum + (r.effort || 0), 0);\n\n    const dependencies = Object.values(recommendations).reduce((sum, r) => sum + (r.dependencies?.length || 0), 0);\n\n    return {\n      totalProcesses,\n      totalQuestions,\n      categories,\n      averageConfidence,\n      totalEffort,\n      dependencies,\n    };\n  }\n\n  attachExportEventListeners() {\n    document.getElementById('export-pdf-btn')?.addEventListener('click', () => {\n      this.exportPDF();\n    });\n\n    document.getElementById('export-json-btn')?.addEventListener('click', () => {\n      this.exportJSON();\n    });\n\n    document.getElementById('export-excel-btn')?.addEventListener('click', () => {\n      this.exportExcel();\n    });\n\n    // Export option hover effects\n    document.querySelectorAll('.export-option').forEach(option => {\n      option.addEventListener('click', (e) => {\n        if (!e.target.closest('button')) {\n          const button = option.querySelector('button');\n          if (button) button.click();\n        }\n      });\n    });\n  }\n\n  getExportOptions() {\n    return {\n      includeAssessmentDetails: document.getElementById('include-assessment-details')?.checked ?? true,\n      includeRationale: document.getElementById('include-rationale')?.checked ?? true,\n      includeDependencies: document.getElementById('include-dependencies')?.checked ?? true,\n      includeVisualization: document.getElementById('include-visualization')?.checked ?? true,\n      includeMetadata: document.getElementById('include-metadata')?.checked ?? true,\n      includeImplementationGuide: document.getElementById('include-implementation-guide')?.checked ?? false,\n    };\n  }\n\n  async exportPDF() {\n    try {\n      this.showExportProgress('Generating PDF report...');\n\n      const assessmentData = this.app.getAssessmentData();\n      const options = this.getExportOptions();\n\n      // Initialize jsPDF\n      const { jsPDF } = window.jspdf;\n      const doc = new jsPDF();\n\n      let yPosition = 20;\n      const pageHeight = doc.internal.pageSize.height;\n      const marginBottom = 20;\n\n      // Helper function to add new page if needed\n      const checkNewPage = (neededSpace = 20) => {\n        if (yPosition + neededSpace > pageHeight - marginBottom) {\n          doc.addPage();\n          yPosition = 20;\n        }\n      };\n\n      // Title Page\n      doc.setFontSize(24);\n      doc.setTextColor(13, 110, 253);\n      doc.text('Systems Engineering Process', 20, yPosition);\n      yPosition += 10;\n      doc.text('Tailoring Report', 20, yPosition);\n      yPosition += 20;\n\n      doc.setFontSize(12);\n      doc.setTextColor(0, 0, 0);\n      doc.text(`Generated: ${new Date().toLocaleDateString()}`, 20, yPosition);\n      yPosition += 10;\n      doc.text('Based on ISO/IEC/IEEE 15288:2023', 20, yPosition);\n      yPosition += 30;\n\n      // Executive Summary\n      checkNewPage(40);\n      doc.setFontSize(16);\n      doc.setTextColor(13, 110, 253);\n      doc.text('Executive Summary', 20, yPosition);\n      yPosition += 15;\n\n      doc.setFontSize(10);\n      doc.setTextColor(0, 0, 0);\n\n      const scores = assessmentData.scores;\n      const summary = [\n        `Overall Assessment Score: ${scores.overall?.toFixed(1) || 'N/A'}/5.0`,\n        `Technical Complexity: ${scores.complexity?.toFixed(1) || 'N/A'}/5.0`,\n        `Safety Criticality: ${scores.safety?.toFixed(1) || 'N/A'}/5.0`,\n        `Project Scale: ${scores.scale?.toFixed(1) || 'N/A'}/5.0`,\n        `Organizational Maturity: ${scores.maturity?.toFixed(1) || 'N/A'}/5.0`,\n      ];\n\n      summary.forEach(line => {\n        checkNewPage();\n        doc.text(line, 20, yPosition);\n        yPosition += 6;\n      });\n\n      yPosition += 10;\n\n      // Process Recommendations\n      const recommendations = assessmentData.recommendations || {};\n      const levelCounts = this.getLevelCounts(recommendations);\n\n      const recSummary = [\n        `Total Processes Analyzed: ${Object.keys(recommendations).length}`,\n        `Basic Level Processes: ${levelCounts.basic}`,\n        `Standard Level Processes: ${levelCounts.standard}`,\n        `Comprehensive Level Processes: ${levelCounts.comprehensive}`,\n      ];\n\n      recSummary.forEach(line => {\n        checkNewPage();\n        doc.text(line, 20, yPosition);\n        yPosition += 6;\n      });\n\n      // Process Recommendations Section\n      checkNewPage(30);\n      yPosition += 10;\n      doc.setFontSize(16);\n      doc.setTextColor(13, 110, 253);\n      doc.text('Process Recommendations', 20, yPosition);\n      yPosition += 15;\n\n      // Group by category\n      const grouped = this.groupRecommendationsByCategory(recommendations);\n\n      Object.keys(grouped).forEach(category => {\n        checkNewPage(20);\n        doc.setFontSize(14);\n        doc.setTextColor(0, 0, 0);\n        const categoryName = this.app.processData.processCategories?.[category] || category;\n        doc.text(categoryName, 20, yPosition);\n        yPosition += 10;\n\n        grouped[category].forEach(process => {\n          checkNewPage(15);\n          doc.setFontSize(10);\n          doc.setTextColor(0, 0, 0);\n\n          const processLine = `${process.processName}: ${process.recommendedLevel.toUpperCase()}`;\n          doc.text(processLine, 25, yPosition);\n          yPosition += 5;\n\n          if (options.includeRationale && process.rationale) {\n            process.rationale.slice(0, 2).forEach(reason => {\n              checkNewPage();\n              const reasonText = `  • ${reason}`;\n              const splitText = doc.splitTextToSize(reasonText, 160);\n              splitText.forEach(line => {\n                doc.text(line, 30, yPosition);\n                yPosition += 4;\n              });\n            });\n          }\n          yPosition += 3;\n        });\n        yPosition += 5;\n      });\n\n      // Implementation Guidance\n      if (options.includeImplementationGuide) {\n        checkNewPage(30);\n        doc.setFontSize(16);\n        doc.setTextColor(13, 110, 253);\n        doc.text('Implementation Guidance', 20, yPosition);\n        yPosition += 15;\n\n        doc.setFontSize(10);\n        doc.setTextColor(0, 0, 0);\n\n        const guidance = [\n          '1. Begin with high-priority Technical Management processes',\n          '2. Implement processes in dependency order',\n          '3. Start with Basic level and mature gradually',\n          '4. Monitor effectiveness and adjust as needed',\n          '5. Regular reviews ensure continued alignment',\n        ];\n\n        guidance.forEach(item => {\n          checkNewPage();\n          doc.text(item, 20, yPosition);\n          yPosition += 6;\n        });\n      }\n\n      // Assessment Details\n      if (options.includeAssessmentDetails) {\n        checkNewPage(30);\n        doc.setFontSize(16);\n        doc.setTextColor(13, 110, 253);\n        doc.text('Assessment Details', 20, yPosition);\n        yPosition += 15;\n\n        const responses = assessmentData.responses || {};\n        const categories = this.app.questionData.assessmentCategories || [];\n\n        categories.forEach(category => {\n          checkNewPage(15);\n          doc.setFontSize(12);\n          doc.setTextColor(0, 0, 0);\n          doc.text(category.name, 20, yPosition);\n          yPosition += 8;\n\n          category.questions.forEach(question => {\n            const response = responses[question.id];\n            if (response) {\n              checkNewPage(12);\n              doc.setFontSize(9);\n              doc.text(`Q: ${question.text}`, 25, yPosition);\n              yPosition += 5;\n              doc.text(`A: ${response.label} (Score: ${response.score})`, 25, yPosition);\n              yPosition += 7;\n            }\n          });\n          yPosition += 5;\n        });\n      }\n\n      // Metadata\n      if (options.includeMetadata) {\n        checkNewPage(20);\n        doc.setFontSize(12);\n        doc.setTextColor(100, 100, 100);\n        doc.text('Report Metadata', 20, yPosition);\n        yPosition += 10;\n\n        doc.setFontSize(8);\n        const metadata = [\n          `Generated: ${new Date().toISOString()}`,\n          'Framework Version: 1.0.0',\n          'Standard: ISO/IEC/IEEE 15288:2023',\n          `Processes Analyzed: ${Object.keys(recommendations).length}`,\n          `Assessment Questions: ${Object.keys(assessmentData.responses || {}).length}`,\n        ];\n\n        metadata.forEach(line => {\n          doc.text(line, 20, yPosition);\n          yPosition += 4;\n        });\n      }\n\n      // Save the PDF\n      const fileName = `SE_Process_Tailoring_Report_${new Date().toISOString().split('T')[0]}.pdf`;\n      doc.save(fileName);\n\n      this.hideExportProgress();\n      this.app.showSuccess('PDF report downloaded successfully!');\n\n    } catch (error) {\n      // PDF export error\n      this.hideExportProgress();\n      this.app.showError('Failed to generate PDF report. Please try again.');\n    }\n  }\n\n  exportJSON() {\n    try {\n      const assessmentData = this.app.getAssessmentData();\n      const options = this.getExportOptions();\n\n      const exportData = {\n        metadata: {\n          generatedAt: new Date().toISOString(),\n          version: '1.0.0',\n          standard: 'ISO/IEC/IEEE 15288:2023',\n          frameworkVersion: '1.0.0',\n        },\n        assessmentScores: assessmentData.scores,\n        recommendations: assessmentData.recommendations,\n      };\n\n      if (options.includeAssessmentDetails) {\n        exportData.assessmentResponses = assessmentData.responses;\n      }\n\n      if (options.includeDependencies) {\n        exportData.dependencies = this.app.getDependencyData();\n      }\n\n      if (options.includeMetadata) {\n        exportData.processData = this.app.getProcessData();\n      }\n\n      const jsonString = JSON.stringify(exportData, null, 2);\n      const blob = new Blob([jsonString], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `SE_Process_Tailoring_Config_${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      this.app.showSuccess('JSON configuration downloaded successfully!');\n\n    } catch (error) {\n      // JSON export error\n      this.app.showError('Failed to export JSON configuration. Please try again.');\n    }\n  }\n\n  exportExcel() {\n    try {\n      const assessmentData = this.app.getAssessmentData();\n      const options = this.getExportOptions();\n\n      // Create CSV content (simplified Excel export)\n      let csvContent = 'Process Name,Category,Recommended Level,Effort,Complexity,Confidence,Rationale\\n';\n\n      const recommendations = assessmentData.recommendations || {};\n      Object.values(recommendations).forEach(rec => {\n        const rationale = options.includeRationale\n          ? rec.rationale?.join('; ') || ''\n          : '';\n\n        csvContent += `\"${rec.processName}\",\"${rec.category}\",\"${rec.recommendedLevel}\",${rec.effort},${rec.complexity},${Math.round(rec.confidence * 100)},\"${rationale}\"\\n`;\n      });\n\n      // Add assessment data if requested\n      if (options.includeAssessmentDetails) {\n        csvContent += '\\n\\nAssessment Responses\\n';\n        csvContent += 'Question,Response,Score,Dimension\\n';\n\n        Object.values(assessmentData.responses || {}).forEach(response => {\n          csvContent += `\"${response.questionId}\",\"${response.label}\",${response.score},\"${response.dimension}\"\\n`;\n        });\n      }\n\n      const blob = new Blob([csvContent], { type: 'text/csv' });\n      const url = URL.createObjectURL(blob);\n\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `SE_Process_Tailoring_Analysis_${new Date().toISOString().split('T')[0]}.csv`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      this.app.showSuccess('Excel/CSV file downloaded successfully!');\n\n    } catch (error) {\n      // Excel export error\n      this.app.showError('Failed to export Excel file. Please try again.');\n    }\n  }\n\n  showExportProgress(message) {\n    // Show loading state\n    const loadingHtml = `\n            <div class=\"text-center py-4\" id=\"export-progress\">\n                <div class=\"spinner-border text-primary mb-3\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <p class=\"text-muted\">${message}</p>\n            </div>\n        `;\n\n    document.body.insertAdjacentHTML('beforeend', `\n            <div class=\"position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center bg-dark bg-opacity-50\" style=\"z-index: 9999;\" id=\"export-overlay\">\n                ${loadingHtml}\n            </div>\n        `);\n  }\n\n  hideExportProgress() {\n    const overlay = document.getElementById('export-overlay');\n    if (overlay) {\n      overlay.remove();\n    }\n  }\n\n  // Helper methods\n  getLevelCounts(recommendations) {\n    const counts = { basic: 0, standard: 0, comprehensive: 0 };\n    Object.values(recommendations).forEach(rec => {\n      counts[rec.recommendedLevel] = (counts[rec.recommendedLevel] || 0) + 1;\n    });\n    return counts;\n  }\n\n  groupRecommendationsByCategory(recommendations) {\n    const grouped = {};\n    Object.values(recommendations).forEach(rec => {\n      const category = rec.category || 'other';\n      if (!grouped[category]) {\n        grouped[category] = [];\n      }\n      grouped[category].push(rec);\n    });\n\n    // Sort within categories\n    Object.keys(grouped).forEach(category => {\n      grouped[category].sort((a, b) => a.processName.localeCompare(b.processName));\n    });\n\n    return grouped;\n  }\n}\n\n// Export for global access\nwindow.ExportManager = ExportManager;\n","/**\n * Recommendation Engine Component\n * Generates process tailoring recommendations based on assessment scores\n */\n\nclass RecommendationEngine {\n  constructor(processData, dependencyData, app) {\n    this.processData = processData;\n    this.dependencyData = dependencyData;\n    this.app = app;\n    this.recommendations = {};\n    this.calculationSettings = {\n      basicThreshold: 2.0,\n      standardThreshold: 3.5,\n      maxDependencyIterations: 10\n    };\n  }\n\n  generateRecommendations(assessmentScores) {\n    console.log(\"=== Recommendation Engine: generateRecommendations called ===\");\n    console.log(\"assessmentScores:\", assessmentScores);\n    console.log(\"processData available:\", !!this.processData);\n    console.log(\"processData.processes:\", this.processData.processes ? this.processData.processes.length : 0);\n    \n    const processes = this.processData.processes || [];\n    const recommendations = {};\n\n    console.log(\"Processing\", processes.length, \"processes\");\n\n    // Generate base recommendations for each process\n    processes.forEach(process => {\n      console.log(\"Processing process:\", process.id, process.name);\n      recommendations[process.id] = this.calculateProcessLevel(process, assessmentScores);\n      console.log(\"Generated recommendation for\", process.id, \":\", recommendations[process.id]);\n    });\n\n    console.log(\"Base recommendations generated:\", Object.keys(recommendations));\n\n    // Apply dependency constraints\n    this.applyDependencyConstraints(recommendations);\n\n    // Apply safety and other constraints\n    this.applyProcessConstraints(recommendations, assessmentScores);\n\n    // Calculate confidence scores\n    this.calculateConfidenceScores(recommendations, assessmentScores);\n\n    console.log(\"Final recommendations:\", recommendations);\n    console.log(\"Final recommendations keys:\", Object.keys(recommendations));\n\n    this.recommendations = recommendations;\n    return recommendations;\n  }\n\n  calculateProcessLevel(process, scores) {\n    console.log(\"calculateProcessLevel for process:\", process.id, \"with scores:\", scores);\n    \n    // Base level calculation using weighted assessment scores\n    const baseScore = this.calculateBaseScore(process, scores);\n    console.log(\"Base score for\", process.id, \":\", baseScore);\n\n    // Get thresholds from calculation settings or use defaults\n    const basicThreshold = this.calculationSettings?.basicThreshold || 2.1;\n    const standardThreshold = this.calculationSettings?.standardThreshold || 3.6;\n    \n    // Determine level based on score thresholds\n    let level = 'basic';\n    if (baseScore >= standardThreshold) {\n      level = 'comprehensive';\n    } else if (baseScore >= basicThreshold) {\n      level = 'standard';\n    }\n    console.log(\"Recommended level for\", process.id, \":\", level);\n\n    const result = {\n      processId: process.id,\n      processName: process.name,\n      category: process.category,\n      recommendedLevel: level,\n      baseScore: baseScore,\n      rationale: this.generateRationale(process, scores, level),\n      effort: process.tailoringLevels[level]?.effort || 1,\n      complexity: process.tailoringLevels[level]?.complexity || 1,\n      activities: process.tailoringLevels[level]?.activities || [],\n      outputs: process.tailoringLevels[level]?.outputs || [],\n      dependencies: [],\n      constraints: [],\n      confidence: 0.8, // Will be calculated later\n    };\n    \n    console.log(\"Final recommendation object for\", process.id, \":\", result);\n    return result;\n  }\n\n  calculateBaseScore(process, scores) {\n    // Process-specific scoring weights based on category\n    const weights = this.getProcessWeights(process);\n\n    // Calculate weighted score\n    let weightedScore = 0;\n    let totalWeight = 0;\n\n    Object.keys(weights).forEach(dimension => {\n      if (scores[dimension] !== undefined) {\n        weightedScore += scores[dimension] * weights[dimension];\n        totalWeight += weights[dimension];\n      }\n    });\n\n    return totalWeight > 0 ? weightedScore / totalWeight : 0;\n  }\n\n  getProcessWeights(process) {\n    // Default weights - can be customized per process\n    const defaultWeights = {\n      complexity: 0.3,\n      safety: 0.25,\n      scale: 0.25,\n      maturity: 0.2,\n    };\n\n    // Process-specific weight adjustments\n    const adjustments = {\n      // Safety-critical processes weight safety more heavily\n      'risk_management': { safety: 0.4, complexity: 0.25, scale: 0.2, maturity: 0.15 },\n      'quality_assurance': { safety: 0.35, complexity: 0.25, scale: 0.2, maturity: 0.2 },\n      'verification': { safety: 0.35, complexity: 0.3, scale: 0.2, maturity: 0.15 },\n      'validation': { safety: 0.35, complexity: 0.25, scale: 0.2, maturity: 0.2 },\n\n      // Technical processes weight complexity more heavily\n      'system_analysis': { complexity: 0.4, safety: 0.2, scale: 0.25, maturity: 0.15 },\n      'architecture_definition': { complexity: 0.4, safety: 0.2, scale: 0.25, maturity: 0.15 },\n      'design_definition': { complexity: 0.4, safety: 0.2, scale: 0.25, maturity: 0.15 },\n\n      // Management processes weight scale and maturity more heavily\n      'project_planning': { scale: 0.35, maturity: 0.25, complexity: 0.2, safety: 0.2 },\n      'project_assessment_control': { scale: 0.35, maturity: 0.25, complexity: 0.2, safety: 0.2 },\n      'configuration_management': { scale: 0.3, maturity: 0.3, complexity: 0.2, safety: 0.2 },\n    };\n\n    return adjustments[process.id] || defaultWeights;\n  }\n\n  applyDependencyConstraints(recommendations) {\n    const dependencies = this.dependencyData.dependencies || [];\n    let changed = true;\n    let iterations = 0;\n    const maxIterations = this.calculationSettings?.maxDependencyIterations || 10; // Prevent infinite loops\n\n    // Iteratively apply constraints until no more changes\n    while (changed && iterations < maxIterations) {\n      changed = false;\n      iterations++;\n\n      dependencies.forEach(dep => {\n        const sourceRec = recommendations[dep.source];\n        const targetRec = recommendations[dep.target];\n\n        if (sourceRec && targetRec) {\n          const sourceLevel = this.getLevelValue(sourceRec.recommendedLevel);\n          const requiredTargetLevel = this.getLevelValue(dep.targetLevel);\n          const currentTargetLevel = this.getLevelValue(targetRec.recommendedLevel);\n\n          // If source is at the specified level and target is below required minimum\n          if (sourceLevel >= this.getLevelValue(dep.sourceLevel) &&\n                        currentTargetLevel < requiredTargetLevel) {\n\n            const newLevel = dep.targetLevel;\n            targetRec.recommendedLevel = newLevel;\n            targetRec.effort = this.processData.processes.find(p => p.id === dep.target)?.tailoringLevels[newLevel]?.effort || targetRec.effort;\n            targetRec.complexity = this.processData.processes.find(p => p.id === dep.target)?.tailoringLevels[newLevel]?.complexity || targetRec.complexity;\n\n            // Add dependency constraint to rationale\n            targetRec.constraints.push({\n              type: 'dependency',\n              source: dep.source,\n              sourceLevel: dep.sourceLevel,\n              reason: `Required by ${sourceRec.processName} at ${dep.sourceLevel} level`,\n            });\n\n            // Track the dependency\n            sourceRec.dependencies.push({\n              target: dep.target,\n              targetName: targetRec.processName,\n              requiredLevel: dep.targetLevel,\n              type: dep.type || 'horizontal',\n            });\n\n            changed = true;\n          }\n        }\n      });\n    }\n\n    if (iterations >= maxIterations) {\n      // Dependency constraint resolution reached maximum iterations\n    }\n  }\n\n  applyProcessConstraints(recommendations, scores) {\n    const processes = this.processData.processes || [];\n\n    processes.forEach(process => {\n      const rec = recommendations[process.id];\n      if (!rec || !process.constraints) return;\n\n      process.constraints.forEach(constraint => {\n        if (this.evaluateConstraintCondition(constraint.condition, scores)) {\n          const requiredLevel = constraint.requiredLevel;\n          const currentLevel = this.getLevelValue(rec.recommendedLevel);\n          const requiredLevelValue = this.getLevelValue(requiredLevel);\n\n          if (currentLevel < requiredLevelValue) {\n            rec.recommendedLevel = requiredLevel;\n            rec.effort = process.tailoringLevels[requiredLevel]?.effort || rec.effort;\n            rec.complexity = process.tailoringLevels[requiredLevel]?.complexity || rec.complexity;\n\n            rec.constraints.push({\n              type: 'process',\n              condition: constraint.condition,\n              reason: constraint.rationale || 'Process constraint applied',\n            });\n          }\n        }\n      });\n    });\n  }\n\n  evaluateConstraintCondition(condition, scores) {\n    try {\n      // Simple condition evaluation - extend as needed\n      // Example: \"safety_criticality > 3\"\n      const match = condition.match(/(\\w+)\\s*([><=]+)\\s*(\\d+\\.?\\d*)/);\n      if (match) {\n        const [, dimension, operator, threshold] = match;\n        const score = scores[dimension];\n        const thresholdValue = parseFloat(threshold);\n\n        switch (operator) {\n          case '>': return score > thresholdValue;\n          case '>=': return score >= thresholdValue;\n          case '<': return score < thresholdValue;\n          case '<=': return score <= thresholdValue;\n          case '=': case '==': return Math.abs(score - thresholdValue) < 0.1;\n          default: return false;\n        }\n      }\n    } catch (error) {\n      // Failed to evaluate constraint condition\n    }\n    return false;\n  }\n\n  calculateConfidenceScores(recommendations, scores) {\n    Object.values(recommendations).forEach(rec => {\n      let confidence = 0.8; // Base confidence\n\n      // Reduce confidence if score is near threshold boundaries\n      const baseScore = rec.baseScore;\n      if ((baseScore >= 2.0 && baseScore <= 2.2) || (baseScore >= 3.5 && baseScore <= 3.7)) {\n        confidence -= 0.2;\n      }\n\n      // Reduce confidence if conflicting constraints\n      if (rec.constraints.length > 2) {\n        confidence -= 0.1;\n      }\n\n      // Increase confidence if multiple factors align\n      const extremeScores = Object.values(scores).filter(s => s <= 1.5 || s >= 4.5).length;\n      if (extremeScores >= 2) {\n        confidence += 0.1;\n      }\n\n      rec.confidence = Math.max(0.4, Math.min(1.0, confidence));\n    });\n  }\n\n  getLevelValue(level) {\n    const values = { 'basic': 1, 'standard': 2, 'comprehensive': 3 };\n    return values[level] || 1;\n  }\n\n  generateRationale(process, scores, level) {\n    const rationale = [];\n    const weights = this.getProcessWeights(process);\n\n    // Primary drivers\n    const primaryFactors = Object.keys(weights)\n      .map(dim => ({ dimension: dim, weight: weights[dim], score: scores[dim] }))\n      .sort((a, b) => b.weight - a.weight)\n      .slice(0, 2);\n\n    primaryFactors.forEach(factor => {\n      const impact = this.getScoreImpact(factor.score);\n      rationale.push(`${this.getDimensionName(factor.dimension)} (${factor.score.toFixed(1)}/5.0) ${impact.description}`);\n    });\n\n    // Level justification\n    switch (level) {\n      case 'basic':\n        rationale.push('Basic level recommended for low complexity and risk profile');\n        break;\n      case 'standard':\n        rationale.push('Standard level provides balanced formality for moderate complexity');\n        break;\n      case 'comprehensive':\n        rationale.push('Comprehensive level required for high complexity and criticality');\n        break;\n    }\n\n    return rationale;\n  }\n\n  getDimensionName(dimension) {\n    const names = {\n      complexity: 'Technical Complexity',\n      safety: 'Safety Criticality',\n      scale: 'Project Scale',\n      maturity: 'Organizational Maturity',\n    };\n    return names[dimension] || dimension;\n  }\n\n  getScoreImpact(score) {\n    if (score <= 2.0) return { level: 'low', description: 'suggests minimal formality' };\n    if (score <= 3.5) return { level: 'medium', description: 'indicates moderate formality needed' };\n    return { level: 'high', description: 'requires high formality and rigor' };\n  }\n\n  render() {\n    const container = document.getElementById('recommendations-content');\n    if (!container) return;\n\n    const assessmentData = this.app.getAssessmentData();\n    console.log(\"Recommendations render - assessmentData:\", assessmentData);\n    console.log(\"Recommendations render - hasCompletedAssessment:\", this.app.hasCompletedAssessment());\n\n    // Check if assessment is completed before showing recommendations\n    if (!this.app.hasCompletedAssessment()) {\n      console.log(\"Assessment not completed, showing no recommendations\");\n      this.renderNoRecommendations(container);\n      return;\n    }\n\n    if (!assessmentData.recommendations || Object.keys(assessmentData.recommendations).length === 0) {\n      console.log(\"No recommendations data available, showing no recommendations\");\n      this.renderNoRecommendations(container);\n      return;\n    }\n\n    console.log(\"Rendering recommendations with data:\", assessmentData.recommendations);\n    this.renderRecommendations(container, assessmentData);\n  }\n\n  renderNoRecommendations(container) {\n    container.innerHTML = `\n            <div class=\"text-center py-5\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <i class=\"bi bi-exclamation-circle display-1 text-warning mb-3\"></i>\n                        <h3>No Recommendations Available</h3>\n                        <p class=\"text-muted mb-4\">\n                            Complete the assessment first to generate personalized process tailoring recommendations.\n                        </p>\n                        <button class=\"btn btn-primary\" onclick=\"window.seApp.showView('assessment')\">\n                            <i class=\"bi bi-clipboard-check\"></i>\n                            Start Assessment\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  renderRecommendations(container, assessmentData) {\n    const recommendations = assessmentData.recommendations;\n\n    // Group recommendations by category\n    const groupedRecs = this.groupRecommendationsByCategory(recommendations);\n\n    // Calculate summary statistics\n    const stats = this.calculateSummaryStats(recommendations);\n\n    const html = `\n            <div class=\"mb-4\">\n                <div class=\"card shadow-sm\">\n                    <div class=\"card-header bg-gradient-primary text-white\">\n                        <h4 class=\"card-title mb-0\">\n                            <i class=\"bi bi-lightbulb-fill\"></i>\n                            Process Tailoring Recommendations\n                        </h4>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row mb-4\">\n                            <div class=\"col-md-3\">\n                                <div class=\"stat-card border-start-primary\">\n                                    <span class=\"stat-number text-success\">${stats.basic}</span>\n                                    <span class=\"stat-label\">Basic Level</span>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"stat-card border-start-warning\">\n                                    <span class=\"stat-number text-warning\">${stats.standard}</span>\n                                    <span class=\"stat-label\">Standard Level</span>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"stat-card border-start-danger\">\n                                    <span class=\"stat-number text-danger\">${stats.comprehensive}</span>\n                                    <span class=\"stat-label\">Comprehensive Level</span>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"stat-card\">\n                                    <span class=\"stat-number\">${stats.totalEffort}</span>\n                                    <span class=\"stat-label\">Total Effort Score</span>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"alert alert-info\">\n                            <i class=\"bi bi-info-circle me-2\"></i>\n                            <strong>Implementation Guidance:</strong> Start with high-priority processes and gradually implement others. \n                            Pay special attention to dependency relationships shown in the visualization.\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            ${Object.keys(groupedRecs).map(category => this.renderCategorySection(category, groupedRecs[category])).join('')}\n        `;\n\n    container.innerHTML = html;\n    this.attachRecommendationEventListeners();\n  }\n\n  groupRecommendationsByCategory(recommendations) {\n    const grouped = {};\n\n    Object.values(recommendations).forEach(rec => {\n      const category = rec.category || 'other';\n      if (!grouped[category]) {\n        grouped[category] = [];\n      }\n      grouped[category].push(rec);\n    });\n\n    // Sort processes within each category by name\n    Object.keys(grouped).forEach(category => {\n      grouped[category].sort((a, b) => a.processName.localeCompare(b.processName));\n    });\n\n    return grouped;\n  }\n\n  renderCategorySection(category, processes) {\n    const categoryName = this.processData.processCategories?.[category] || category;\n\n    return `\n            <div class=\"mb-4\">\n                <h5 class=\"mb-3\">\n                    <i class=\"bi bi-${this.getCategoryIcon(category)}\"></i>\n                    ${categoryName}\n                </h5>\n                <div class=\"row\">\n                    ${processes.map(process => this.renderProcessCard(process)).join('')}\n                </div>\n            </div>\n        `;\n  }\n\n  renderProcessCard(process) {\n    const levelClass = process.recommendedLevel;\n    const confidencePercent = Math.round(process.confidence * 100);\n\n    return `\n            <div class=\"col-lg-6 mb-3\">\n                <div class=\"process-card card ${levelClass}\">\n                    <div class=\"card-body\">\n                        <div class=\"d-flex justify-content-between align-items-start mb-2\">\n                            <h6 class=\"process-title mb-1\">${process.processName}</h6>\n                            <span class=\"level-badge level-${levelClass}\">${process.recommendedLevel}</span>\n                        </div>\n                        \n                        <div class=\"mb-2\">\n                            <small class=\"text-muted\">\n                                Effort: <strong>${process.effort}</strong> | \n                                Complexity: <strong>${process.complexity}</strong> | \n                                Confidence: <strong>${confidencePercent}%</strong>\n                            </small>\n                        </div>\n\n                        <div class=\"mb-3\">\n                            <strong>Rationale:</strong>\n                            <ul class=\"list-unstyled mt-1 mb-0\">\n                                ${process.rationale.map(reason => `<li class=\"text-small text-muted\">• ${reason}</li>`).join('')}\n                            </ul>\n                        </div>\n\n                        ${process.constraints.length > 0 ? `\n                            <div class=\"mb-3\">\n                                <strong>Constraints Applied:</strong>\n                                <ul class=\"list-unstyled mt-1 mb-0\">\n                                    ${process.constraints.map(constraint => `\n                                        <li class=\"text-small text-warning\">• ${constraint.reason}</li>\n                                    `).join('')}\n                                </ul>\n                            </div>\n                        ` : ''}\n\n                        ${process.dependencies.length > 0 ? `\n                            <div class=\"mb-3\">\n                                <strong>Dependencies:</strong>\n                                <ul class=\"dependency-list\">\n                                    ${process.dependencies.map(dep => `\n                                        <li class=\"dependency-item ${dep.type === 'vertical' ? 'critical' : 'important'}\">\n                                            <small>\n                                                <strong>${dep.targetName}</strong> requires <em>${dep.requiredLevel}</em> level\n                                                <span class=\"badge badge-sm bg-secondary ms-1\">${dep.type}</span>\n                                            </small>\n                                        </li>\n                                    `).join('')}\n                                </ul>\n                            </div>\n                        ` : ''}\n\n                        <div class=\"text-end\">\n                            <button class=\"btn btn-outline-primary btn-sm\" onclick=\"window.seApp.showProcessDetails('${process.processId}')\">\n                                <i class=\"bi bi-info-circle\"></i>\n                                Details\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  calculateSummaryStats(recommendations) {\n    const stats = {\n      basic: 0,\n      standard: 0,\n      comprehensive: 0,\n      totalEffort: 0,\n      averageConfidence: 0,\n    };\n\n    const recs = Object.values(recommendations);\n\n    recs.forEach(rec => {\n      stats[rec.recommendedLevel]++;\n      stats.totalEffort += rec.effort || 0;\n    });\n\n    stats.averageConfidence = recs.length > 0\n      ? recs.reduce((sum, rec) => sum + rec.confidence, 0) / recs.length\n      : 0;\n\n    return stats;\n  }\n\n  getCategoryIcon(category) {\n    const icons = {\n      'technical_management': 'gear',\n      'technical': 'cpu',\n      'other': 'circle',\n    };\n    return icons[category] || 'circle';\n  }\n\n  attachRecommendationEventListeners() {\n    // Add any interactive event listeners here\n    // Currently handled through onclick attributes in the HTML\n  }\n\n  // Public methods for app integration\n  getRecommendations() {\n    return this.recommendations;\n  }\n\n  getProcessRecommendation(processId) {\n    return this.recommendations[processId];\n  }\n}\n\n// Export for global access\nwindow.RecommendationEngine = RecommendationEngine;\n","/**\n * Process Network Visualizer Component\n * Creates interactive D3.js network diagrams showing process relationships\n */\n\nclass ProcessNetworkVisualizer {\n  constructor(processData, dependencyData, app) {\n    this.processData = processData;\n    this.dependencyData = dependencyData;\n    this.app = app;\n    this.svg = null;\n    this.simulation = null;\n    this.nodes = [];\n    this.links = [];\n    this.width = 800;\n    this.height = 600;\n    this.zoom = null;\n    this.currentFilters = {\n      categories: new Set(['technical_management', 'technical']),\n      levels: new Set(['basic', 'standard', 'comprehensive']),\n      showDependencies: true,\n      showMetrics: true,\n      showRecommendations: true,\n      searchTerm: '',\n      layoutSettings: {\n        chargeStrength: -200,\n        linkStrength: 0.5,\n      },\n    };\n  }\n\n  render() {\n    this.setupContainer();\n    this.renderControls();\n    this.prepareData();\n    this.createVisualization();\n    this.setupEventListeners();\n  }\n\n  setupContainer() {\n    const container = document.getElementById('network-visualization');\n    if (!container) return;\n\n    // Clear existing content\n    container.innerHTML = '';\n\n    // Get container dimensions\n    const rect = container.getBoundingClientRect();\n    this.width = Math.max(800, rect.width - 20);\n    this.height = Math.max(600, rect.height - 20);\n  }\n\n  renderControls() {\n    const controlsContainer = document.getElementById('visualization-controls');\n    if (!controlsContainer) return;\n\n    const html = `\n            <div class=\"control-group\">\n                <label class=\"control-label\">Search Processes</label>\n                <div class=\"input-group input-group-sm\">\n                    <span class=\"input-group-text\">\n                        <i class=\"bi bi-search\"></i>\n                    </span>\n                    <input type=\"text\" class=\"form-control\" id=\"process-search\" \n                           placeholder=\"Type to search processes...\">\n                </div>\n            </div>\n\n            <div class=\"control-group\">\n                <label class=\"control-label\">Process Categories</label>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"filter-technical-mgmt\" checked>\n                    <label class=\"form-check-label\" for=\"filter-technical-mgmt\">\n                        Technical Management\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"filter-technical\" checked>\n                    <label class=\"form-check-label\" for=\"filter-technical\">\n                        Technical Processes\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"filter-agreement\" checked>\n                    <label class=\"form-check-label\" for=\"filter-agreement\">\n                        Agreement Processes\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"filter-project\" checked>\n                    <label class=\"form-check-label\" for=\"filter-project\">\n                        Project Processes\n                    </label>\n                </div>\n            </div>\n\n            <div class=\"control-group\">\n                <label class=\"control-label\">Tailoring Levels</label>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"filter-basic\" checked>\n                    <label class=\"form-check-label\" for=\"filter-basic\">\n                        <span class=\"level-badge level-basic\">Basic</span>\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"filter-standard\" checked>\n                    <label class=\"form-check-label\" for=\"filter-standard\">\n                        <span class=\"level-badge level-standard\">Standard</span>\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"filter-comprehensive\" checked>\n                    <label class=\"form-check-label\" for=\"filter-comprehensive\">\n                        <span class=\"level-badge level-comprehensive\">Comprehensive</span>\n                    </label>\n                </div>\n            </div>\n\n            <div class=\"control-group\">\n                <label class=\"control-label\">Visualization Mode</label>\n                <select class=\"form-select form-select-sm\" id=\"view-mode-select\">\n                    <option value=\"network\">Network Overview</option>\n                    <option value=\"flow\">Input/Output Flow</option>\n                    <option value=\"focused\">Focused Process View</option>\n                </select>\n            </div>\n\n            <div class=\"control-group\">\n                <label class=\"control-label\">Display Options</label>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"show-dependencies\" checked>\n                    <label class=\"form-check-label\" for=\"show-dependencies\">\n                        Show Dependencies\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"show-labels\" checked>\n                    <label class=\"form-check-label\" for=\"show-labels\">\n                        Show Labels\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"show-metrics\" checked>\n                    <label class=\"form-check-label\" for=\"show-metrics\">\n                        Show Metrics\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"show-inputs-outputs\" checked>\n                    <label class=\"form-check-label\" for=\"show-inputs-outputs\">\n                        Show Inputs/Outputs\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"show-recommendations\" checked>\n                    <label class=\"form-check-label\" for=\"show-recommendations\">\n                        Show Recommendations\n                    </label>\n                </div>\n            </div>\n\n            <div class=\"control-group\">\n                <label class=\"control-label\">Layout</label>\n                <select class=\"form-select form-select-sm\" id=\"layout-select\">\n                    <option value=\"force\">Force-Directed</option>\n                    <option value=\"circular\">Circular</option>\n                    <option value=\"hierarchical\">Hierarchical</option>\n                    <option value=\"flow\">Flow Layout</option>\n                </select>\n            </div>\n\n            <div class=\"control-group\">\n                <label class=\"control-label\">Focus Process</label>\n                <select class=\"form-select form-select-sm\" id=\"focus-process-select\">\n                    <option value=\"\">All Processes</option>\n                    ${this.processData.processes ? this.processData.processes.map(p => \n                      `<option value=\"${p.id}\">${p.name}</option>`\n                    ).join('') : ''}\n                </select>\n            </div>\n\n            <div class=\"control-group\">\n                <label class=\"control-label\">Force Layout Settings</label>\n                <div class=\"input-group input-group-sm\">\n                    <span class=\"input-group-text\">Charge</span>\n                    <input type=\"range\" class=\"form-range\" id=\"charge-strength\" min=\"-1000\" max=\"-50\" value=\"-200\">\n                    <span class=\"input-group-text\" id=\"charge-value\">-200</span>\n                </div>\n                <div class=\"input-group input-group-sm\">\n                    <span class=\"input-group-text\">Link</span>\n                    <input type=\"range\" class=\"form-range\" id=\"link-strength\" min=\"0\" max=\"2\" step=\"0.1\" value=\"0.5\">\n                    <span class=\"input-group-text\" id=\"link-value\">0.5</span>\n                </div>\n            </div>\n\n            <div class=\"control-group\">\n                <button class=\"btn btn-outline-primary btn-sm w-100\" id=\"reset-filters-btn\">\n                    <i class=\"bi bi-arrow-clockwise\"></i>\n                    Reset Filters\n                </button>\n                <button class=\"btn btn-outline-secondary btn-sm w-100 mt-2\" id=\"export-network-btn\">\n                    <i class=\"bi bi-download\"></i>\n                    Export Network\n                </button>\n                <button class=\"btn btn-outline-info btn-sm w-100 mt-2\" id=\"help-network-btn\">\n                    <i class=\"bi bi-question-circle\"></i>\n                    Help & Tips\n                </button>\n                <button class=\"btn btn-outline-success btn-sm w-100 mt-2\" id=\"zoom-fit-btn\">\n                    <i class=\"bi bi-arrows-fullscreen\"></i>\n                    Fit to View\n                </button>\n            </div>\n        `;\n\n    controlsContainer.innerHTML = html;\n    this.attachControlEventListeners();\n  }\n\n  attachControlEventListeners() {\n    // Search functionality\n    const searchInput = document.getElementById('process-search');\n    if (searchInput) {\n      searchInput.addEventListener('input', (e) => {\n        this.currentFilters.searchTerm = e.target.value.toLowerCase();\n        this.updateVisualization();\n      });\n    }\n\n    // Category filters\n    ['technical-mgmt', 'technical'].forEach(category => {\n      const checkbox = document.getElementById(`filter-${category}`);\n      if (checkbox) {\n        checkbox.addEventListener('change', (e) => {\n          const categoryKey = category === 'technical-mgmt' ? 'technical_management' : 'technical';\n          if (e.target.checked) {\n            this.currentFilters.categories.add(categoryKey);\n          } else {\n            this.currentFilters.categories.delete(categoryKey);\n          }\n          this.updateVisualization();\n        });\n      }\n    });\n\n    // Level filters\n    ['basic', 'standard', 'comprehensive'].forEach(level => {\n      const checkbox = document.getElementById(`filter-${level}`);\n      if (checkbox) {\n        checkbox.addEventListener('change', (e) => {\n          if (e.target.checked) {\n            this.currentFilters.levels.add(level);\n          } else {\n            this.currentFilters.levels.delete(level);\n          }\n          this.updateVisualization();\n        });\n      }\n    });\n\n    // Display options\n    const showDepsCheckbox = document.getElementById('show-dependencies');\n    if (showDepsCheckbox) {\n      showDepsCheckbox.addEventListener('change', (e) => {\n        this.currentFilters.showDependencies = e.target.checked;\n        this.updateVisualization();\n      });\n    }\n\n    const showLabelsCheckbox = document.getElementById('show-labels');\n    if (showLabelsCheckbox) {\n      showLabelsCheckbox.addEventListener('change', (e) => {\n        this.toggleLabels(e.target.checked);\n      });\n    }\n\n    // Layout selection\n    const layoutSelect = document.getElementById('layout-select');\n    if (layoutSelect) {\n      layoutSelect.addEventListener('change', (e) => {\n        this.changeLayout(e.target.value);\n      });\n    }\n\n    // Force layout settings\n    const chargeSlider = document.getElementById('charge-strength');\n    const chargeValue = document.getElementById('charge-value');\n    if (chargeSlider && chargeValue) {\n      chargeSlider.addEventListener('input', (e) => {\n        const value = parseInt(e.target.value);\n        chargeValue.textContent = value;\n        this.currentFilters.layoutSettings.chargeStrength = value;\n        this.updateForceLayout();\n      });\n    }\n\n    const linkSlider = document.getElementById('link-strength');\n    const linkValue = document.getElementById('link-value');\n    if (linkSlider && linkValue) {\n      linkSlider.addEventListener('input', (e) => {\n        const value = parseFloat(e.target.value);\n        linkValue.textContent = value;\n        this.currentFilters.layoutSettings.linkStrength = value;\n        this.updateForceLayout();\n      });\n    }\n\n    // Display options\n    const showMetricsCheckbox = document.getElementById('show-metrics');\n    if (showMetricsCheckbox) {\n      showMetricsCheckbox.addEventListener('change', (e) => {\n        this.currentFilters.showMetrics = e.target.checked;\n        this.updateVisualization();\n      });\n    }\n\n    const showRecsCheckbox = document.getElementById('show-recommendations');\n    if (showRecsCheckbox) {\n      showRecsCheckbox.addEventListener('change', (e) => {\n        this.currentFilters.showRecommendations = e.target.checked;\n        this.updateVisualization();\n      });\n    }\n\n    // Export button\n    const exportBtn = document.getElementById('export-network-btn');\n    if (exportBtn) {\n      exportBtn.addEventListener('click', () => {\n        this.exportNetwork();\n      });\n    }\n\n    // Help button\n    const helpBtn = document.getElementById('help-network-btn');\n    if (helpBtn) {\n      helpBtn.addEventListener('click', () => {\n        this.showHelpModal();\n      });\n    }\n\n    // Reset filters\n    const resetBtn = document.getElementById('reset-filters-btn');\n    if (resetBtn) {\n      resetBtn.addEventListener('click', () => {\n        this.resetFilters();\n      });\n    }\n  }\n\n  updateForceLayout() {\n    if (this.simulation) {\n      this.simulation.force('charge', d3.forceManyBody().strength(this.currentFilters.layoutSettings.chargeStrength));\n      const linkForce = this.simulation.force('link');\n      if (linkForce) {\n        linkForce.strength(this.currentFilters.layoutSettings.linkStrength);\n      }\n      this.simulation.alpha(0.3).restart();\n    }\n  }\n\n  exportNetwork() {\n    const svgElement = this.svg.node();\n    const serializer = new XMLSerializer();\n    const source = serializer.serializeToString(svgElement);\n\n    // Add namespace\n    const svgWithNamespace = source.replace('<svg', '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n\n    // Create download link\n    const blob = new Blob([svgWithNamespace], { type: 'image/svg+xml' });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'se-process-network.svg';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }\n\n  showHelpModal() {\n    const modalHtml = `\n            <div class=\"modal fade\" id=\"network-help-modal\" tabindex=\"-1\">\n                <div class=\"modal-dialog modal-lg\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\">Network Visualization Help</h5>\n                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <h6>Interactive Features</h6>\n                            <ul>\n                                <li><strong>Drag nodes</strong> to reposition them</li>\n                                <li><strong>Click nodes</strong> to view process details</li>\n                                <li><strong>Mouse wheel</strong> to zoom in/out</li>\n                                <li><strong>Drag background</strong> to pan the view</li>\n                            </ul>\n                            \n                            <h6>Filtering Options</h6>\n                            <ul>\n                                <li><strong>Search</strong>: Filter processes by name</li>\n                                <li><strong>Categories</strong>: Show/hide process categories</li>\n                                <li><strong>Levels</strong>: Filter by tailoring levels</li>\n                                <li><strong>Dependencies</strong>: Toggle dependency visibility</li>\n                            </ul>\n                            \n                            <h6>Layout Controls</h6>\n                            <ul>\n                                <li><strong>Force-Directed</strong>: Dynamic physics-based layout</li>\n                                <li><strong>Circular</strong>: Organized circular arrangement</li>\n                                <li><strong>Hierarchical</strong>: Tree-like structure</li>\n                                <li><strong>Charge/Link</strong>: Adjust node repulsion and link strength</li>\n                            </ul>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n\n    // Remove existing modal if any\n    const existingModal = document.getElementById('network-help-modal');\n    if (existingModal) {\n      existingModal.remove();\n    }\n\n    // Add modal to DOM\n    document.body.insertAdjacentHTML('beforeend', modalHtml);\n\n    // Show modal\n    const modal = new bootstrap.Modal(document.getElementById('network-help-modal'));\n    modal.show();\n  }\n\n  prepareData() {\n    const processes = this.processData.processes || [];\n    const dependencies = this.dependencyData.dependencies || [];\n    const recommendations = this.app.getAssessmentData().recommendations;\n\n    // Create nodes\n    this.nodes = processes.map(process => {\n      const recommendation = recommendations?.[process.id];\n      const recommendedLevel = recommendation?.recommendedLevel || 'basic';\n\n      return {\n        id: process.id,\n        name: process.name,\n        category: process.category,\n        description: process.tailoringLevels?.basic?.description || '',\n        recommendedLevel: recommendedLevel,\n        effort: recommendation?.effort || 1,\n        complexity: recommendation?.complexity || 1,\n        confidence: recommendation?.confidence || 0.8,\n        x: Math.random() * this.width,\n        y: Math.random() * this.height,\n        inputs: this.getAllInputs(process),\n        outputs: this.getAllOutputs(process)\n      };\n    });\n\n    // Create links from dependencies - resolve node references\n    this.links = dependencies.map(dep => {\n      const sourceNode = this.nodes.find(n => n.id === dep.source);\n      const targetNode = this.nodes.find(n => n.id === dep.target);\n      \n      // Only create link if both nodes exist\n      if (!sourceNode || !targetNode) {\n        console.warn(`Skipping dependency: ${dep.source} -> ${dep.target} (node not found)`);\n        return null;\n      }\n      \n      return {\n        source: sourceNode,\n        target: targetNode,\n        type: dep.type || 'horizontal',\n        sourceLevel: dep.sourceLevel,\n        targetLevel: dep.targetLevel,\n        strength: dep.type === 'vertical' ? 0.8 : 0.4,\n        // Add input/output relationship info\n        inputOutputRelationship: this.findInputOutputRelationship(sourceNode, targetNode)\n      };\n    }).filter(link => link !== null);\n\n    // Prepare for flow visualization\n    this.prepareFlowData();\n  }\n\n  createVisualization() {\n    const container = document.getElementById('network-visualization');\n    if (!container) return;\n\n    // Create SVG container with responsive design\n    this.svg = d3.select(container)\n      .append('svg')\n      .attr('width', '100%')\n      .attr('height', '100%')\n      .attr('viewBox', [0, 0, this.width, this.height])\n      .attr('preserveAspectRatio', 'xMidYMid meet')\n      .attr('class', 'network-svg')\n      .style('background', '#f8f9fa');\n\n    // Add zoom behavior with smooth transitions\n    this.zoom = d3.zoom()\n      .scaleExtent([0.1, 8])\n      .translateExtent([[0, 0], [this.width, this.height]])\n      .on('zoom', (event) => {\n        this.svg.select('.zoom-container').attr('transform', event.transform);\n      });\n\n    this.svg.call(this.zoom)\n      .call(this.zoom.transform, d3.zoomIdentity);\n\n    // Create container for zoomable content\n    const zoomContainer = this.svg.append('g').attr('class', 'zoom-container');\n\n    // Add sophisticated arrow markers for different link types\n    const defs = this.svg.append('defs');\n\n    const markerTypes = [\n      { id: 'dependency', color: '#dc3545', width: 4 },\n      { id: 'information', color: '#0d6efd', width: 3 },\n      { id: 'sequential', color: '#198754', width: 2 },\n    ];\n\n    markerTypes.forEach(type => {\n      defs.append('marker')\n        .attr('id', `arrow-${type.id}`)\n        .attr('viewBox', '0 -5 10 10')\n        .attr('refX', 18)\n        .attr('refY', 0)\n        .attr('markerWidth', 8)\n        .attr('markerHeight', 8)\n        .attr('orient', 'auto')\n        .append('path')\n        .attr('d', 'M0,-5L10,0L0,5')\n        .attr('fill', type.color)\n        .attr('stroke', type.color)\n        .attr('stroke-width', type.width);\n    });\n\n    // Create enhanced force simulation with custom parameters\n    this.simulation = d3.forceSimulation(this.nodes)\n      .force('link', d3.forceLink(this.links)\n        .id(d => d.id)\n        .strength(this.currentFilters.layoutSettings.linkStrength)\n        .distance(100))\n      .force('charge', d3.forceManyBody().strength(this.currentFilters.layoutSettings.chargeStrength))\n      .force('center', d3.forceCenter(this.width / 2, this.height / 2))\n      .force('collision', d3.forceCollide().radius(45))\n      .force('x', d3.forceX(this.width / 2).strength(0.05))\n      .force('y', d3.forceY(this.height / 2).strength(0.05));\n\n    // Draw links with enhanced styling\n    this.linkElements = zoomContainer.append('g')\n      .attr('class', 'links')\n      .selectAll('line')\n      .data(this.links)\n      .enter()\n      .append('line')\n      .attr('class', d => `network-link link-${d.type}`)\n      .attr('marker-end', d => `url(#arrow-${d.type})`)\n      .attr('stroke-width', d => {\n        const strengths = { dependency: 3, information: 2, sequential: 1.5 };\n        return strengths[d.type] || 1.5;\n      })\n      .attr('stroke-opacity', 0.8)\n      .attr('stroke-linecap', 'round');\n\n    // Draw nodes with enhanced styling and interactivity\n    this.nodeElements = zoomContainer.append('g')\n      .attr('class', 'nodes')\n      .selectAll('circle')\n      .data(this.nodes)\n      .enter()\n      .append('circle')\n      .attr('class', d => `network-node node-${d.category} level-${d.recommendedLevel}`)\n      .attr('r', 20)\n      .attr('fill', d => this.getNodeColor(d))\n      .attr('stroke', '#fff')\n      .attr('stroke-width', 2)\n      .attr('cursor', 'pointer')\n      .call(d3.drag()\n        .on('start', (event, d) => this.dragStarted(event, d))\n        .on('drag', (event, d) => this.dragged(event, d))\n        .on('end', (event, d) => this.dragEnded(event, d)),\n      )\n      .on('mouseover', (event, d) => this.showTooltip(event, d))\n      .on('mouseout', () => this.hideTooltip())\n      .on('click', (event, d) => this.nodeClicked(event, d));\n\n    // Add dynamic labels with conditional visibility\n    this.labelElements = zoomContainer.append('g')\n      .attr('class', 'labels')\n      .selectAll('text')\n      .data(this.nodes)\n      .enter()\n      .append('text')\n      .attr('class', 'network-text')\n      .attr('text-anchor', 'middle')\n      .attr('dy', 35)\n      .attr('font-size', '12px')\n      .attr('font-weight', '600')\n      .attr('fill', '#2c3e50')\n      .attr('pointer-events', 'none')\n      .attr('paint-order', 'stroke')\n      .attr('stroke', '#ffffff')\n      .attr('stroke-width', 3)\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-linejoin', 'round')\n      .text(d => this.getNodeLabel(d));\n\n    // Add metric badges if enabled\n    this.metricElements = zoomContainer.append('g')\n      .attr('class', 'metrics')\n      .selectAll('text')\n      .data(this.nodes)\n      .enter()\n      .append('text')\n      .attr('class', 'node-metric')\n      .attr('text-anchor', 'middle')\n      .attr('dy', -25)\n      .attr('font-size', '10px')\n      .attr('fill', '#6c757d')\n      .attr('pointer-events', 'none')\n      .text(d => {\n        if (!this.currentFilters.showMetrics) return '';\n        return `Connections: ${this.getConnectionCount(d)}`;\n      });\n\n    // Create tooltip\n    this.tooltip = d3.select('body')\n      .append('div')\n      .attr('class', 'network-tooltip')\n      .style('opacity', 0);\n\n    // Update positions on simulation tick with smooth transitions\n    this.simulation.on('tick', () => this.ticked());\n\n    // Initial update\n    this.updateVisualization();\n  }\n\n  getNodeColor(node) {\n    const colors = {\n      technicalManagement: '#4e79a7',\n      technical: '#f28e2c',\n      agreement: '#e15759',\n      project: '#76b7b2'\n    };\n    return colors[node.category] || '#999';\n  }\n\n  getNodeLabel(node) {\n    // Truncate long names\n    const maxLength = 12;\n    if (node.name.length > maxLength) {\n      return `${node.name.substring(0, maxLength - 3) }...`;\n    }\n    return node.name;\n  }\n\n  getNodeRadius(node) {\n    return 12;\n  }\n\n  getLinkStrokeWidth(link) {\n    if (link.inputOutputRelationship) {\n      return Math.min(3 + link.inputOutputRelationship.count * 0.5, 6);\n    }\n    return 2;\n  }\n\n  getLinkMarker(link) {\n    if (link.inputOutputRelationship) {\n      return 'url(#arrowhead)';\n    }\n    return null;\n  }\n\n  updateVisualization() {\n    if (!this.nodeElements || !this.linkElements) return;\n\n    // Filter nodes\n    const visibleNodes = this.nodes.filter(node => this.isNodeVisible(node));\n    const visibleNodeIds = new Set(visibleNodes.map(n => n.id));\n\n    // Filter links\n    const visibleLinks = this.currentFilters.showDependencies\n      ? this.links.filter(link =>\n        visibleNodeIds.has(link.source.id || link.source) &&\n                visibleNodeIds.has(link.target.id || link.target),\n      )\n      : [];\n\n    // Update node visibility\n    this.nodeElements\n      .style('opacity', d => this.isNodeVisible(d) ? 1 : 0.1)\n      .style('pointer-events', d => this.isNodeVisible(d) ? 'all' : 'none');\n\n    // Update link visibility\n    this.linkElements\n      .style('opacity', d => {\n        const sourceVisible = visibleNodeIds.has(d.source.id || d.source);\n        const targetVisible = visibleNodeIds.has(d.target.id || d.target);\n        return (sourceVisible && targetVisible && this.currentFilters.showDependencies) ? 0.6 : 0;\n      });\n\n    // Update label visibility\n    this.labelElements\n      .style('opacity', d => this.isNodeVisible(d) ? 1 : 0.1);\n\n    // Update simulation\n    this.simulation.nodes(visibleNodes);\n    const linkForce = this.simulation.force('link');\n    if (linkForce) {\n      linkForce.links(visibleLinks);\n    }\n    this.simulation.alpha(0.3).restart();\n  }\n\n  // Helper methods for input/output processing\n  getAllInputs(process) {\n    const inputs = new Set();\n    Object.values(process.tailoringLevels || {}).forEach(level => {\n      (level.inputs || []).forEach(input => inputs.add(input));\n    });\n    return Array.from(inputs);\n  }\n\n  getAllOutputs(process) {\n    const outputs = new Set();\n    Object.values(process.tailoringLevels || {}).forEach(level => {\n      (level.outputs || []).forEach(output => outputs.add(output));\n    });\n    return Array.from(outputs);\n  }\n\n  findInputOutputRelationship(sourceNode, targetNode) {\n    const commonOutputsInputs = sourceNode.outputs.filter(output => \n      targetNode.inputs.includes(output)\n    );\n    \n    return commonOutputsInputs.length > 0 ? {\n      items: commonOutputsInputs,\n      count: commonOutputsInputs.length\n    } : null;\n  }\n\n  // Flow visualization methods\n  prepareFlowData() {\n    this.flowData = {\n      inputFlows: new Map(),\n      outputFlows: new Map(),\n      processFlows: new Map()\n    };\n\n    // Build flow relationships\n    this.nodes.forEach(node => {\n      this.flowData.inputFlows.set(node.id, new Set());\n      this.flowData.outputFlows.set(node.id, new Set());\n      this.flowData.processFlows.set(node.id, new Set());\n    });\n\n    this.links.forEach(link => {\n      if (link.inputOutputRelationship) {\n        this.flowData.inputFlows.get(link.target.id).add({\n          source: link.source.id,\n          items: link.inputOutputRelationship.items\n        });\n        this.flowData.outputFlows.get(link.source.id).add({\n          target: link.target.id,\n          items: link.inputOutputRelationship.items\n        });\n        this.flowData.processFlows.get(link.source.id).add(link.target.id);\n        this.flowData.processFlows.get(link.target.id).add(link.source.id);\n      }\n    });\n  }\n\n  setupFlowVisualization() {\n    // Flow visualization setup - simplified to avoid non-functional code\n    this.flowContainer = d3.select('#process-network svg g')\n      .append('g')\n      .attr('class', 'flow-visualization')\n      .style('opacity', 0);\n  }\n\n  showProcessFlow(process) {\n    const processId = process.id;\n    const flows = [];\n\n    // Get input flows\n    const inputFlows = Array.from(this.flowData.inputFlows.get(processId) || []);\n    inputFlows.forEach(flow => {\n      flows.push({\n        type: 'input',\n        from: flow.source,\n        to: processId,\n        items: flow.items,\n        color: '#4CAF50'\n      });\n    });\n\n    // Get output flows\n    const outputFlows = Array.from(this.flowData.outputFlows.get(processId) || []);\n    outputFlows.forEach(flow => {\n      flows.push({\n        type: 'output',\n        from: processId,\n        to: flow.target,\n        items: flow.items,\n        color: '#FF5722'\n      });\n    });\n\n    // Update flow visualization\n    this.updateFlowVisualization(flows);\n  }\n\n  updateFlowVisualization(flows = []) {\n    if (!flows.length) {\n      this.flowContainer.style('opacity', 0);\n      return;\n    }\n\n    this.flowContainer.style('opacity', 1);\n\n    const flowPaths = this.flowPaths.data(flows, d => `${d.from}-${d.to}-${d.type}`);\n    \n    flowPaths.enter()\n      .append('path')\n      .attr('class', 'flow-path')\n      .attr('fill', 'none')\n      .attr('stroke', d => d.color)\n      .attr('stroke-width', 2)\n      .attr('stroke-dasharray', d => d.type === 'input' ? '5,5' : null)\n      .attr('opacity', 0.7)\n      .merge(flowPaths)\n      .attr('d', d => {\n        const fromNode = this.nodes.find(n => n.id === d.from);\n        const toNode = this.nodes.find(n => n.id === d.to);\n        if (!fromNode || !toNode) return '';\n        \n        return `M${fromNode.x},${fromNode.y} L${toNode.x},${toNode.y}`;\n      });\n\n    flowPaths.exit().remove();\n\n    const flowLabels = this.flowLabels.data(flows, d => `${d.from}-${d.to}-${d.type}`);\n    \n    flowLabels.enter()\n      .append('text')\n      .attr('class', 'flow-label')\n      .attr('font-size', '8px')\n      .attr('fill', d => d.color)\n      .attr('text-anchor', 'middle')\n      .merge(flowLabels)\n      .attr('x', d => {\n        const fromNode = this.nodes.find(n => n.id === d.from);\n        const toNode = this.nodes.find(n => n.id === d.to);\n        return (fromNode.x + toNode.x) / 2;\n      })\n      .attr('y', d => {\n        const fromNode = this.nodes.find(n => n.id === d.from);\n        const toNode = this.nodes.find(n => n.id === d.to);\n        return (fromNode.y + toNode.y) / 2 - 10;\n      })\n      .text(d => d.items.slice(0, 2).join(', ') + (d.items.length > 2 ? '...' : ''));\n\n    flowLabels.exit().remove();\n  }\n\n  hideProcessFlow() {\n    this.flowContainer.style('opacity', 0);\n  }\n\n  // Enhanced filtering and interaction methods\n  isNodeVisible(node) {\n    // Category filter\n    if (!this.currentFilters.categories.has(node.category)) {\n      return false;\n    }\n\n    // Level filter\n    if (!this.currentFilters.levels.has(node.recommendedLevel)) {\n      return false;\n    }\n\n    // Search filter\n    if (this.currentFilters.searchTerm &&\n            !node.name.toLowerCase().includes(this.currentFilters.searchTerm)) {\n      return false;\n    }\n\n    // Check focus process filter\n    const focusProcess = document.getElementById('focus-process-select');\n    if (focusProcess && focusProcess.value) {\n      const focusedId = focusProcess.value;\n      if (node.id !== focusedId) {\n        // Check if this node is connected to focused process\n        const connectedProcesses = this.flowData.processFlows.get(focusedId) || new Set();\n        if (!connectedProcesses.has(node.id)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  ticked() {\n    if (this.linkElements) {\n      this.linkElements\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y);\n    }\n\n    if (this.nodeElements) {\n      this.nodeElements\n        .attr('cx', d => d.x)\n        .attr('cy', d => d.y);\n    }\n\n    if (this.labelElements) {\n      this.labelElements\n        .attr('x', d => d.x)\n        .attr('y', d => d.y);\n    }\n\n    if (this.metricElements) {\n      this.metricElements\n        .attr('x', d => d.x)\n        .attr('y', d => d.y);\n    }\n  }\n\n  dragStarted(event, d) {\n    if (!event.active) this.simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n\n  dragged(event, d) {\n    d.fx = event.x;\n    d.fy = event.y;\n  }\n\n  dragEnded(event, d) {\n    if (!event.active) this.simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n  }\n\n  handleMouseOver(event, d) {\n    // Highlight connected nodes and links\n    this.highlightConnectedElements(d);\n\n    // Show enhanced tooltip with input/output info\n    this.showEnhancedTooltip(event, d);\n\n    // Show flow visualization for this process\n    this.showProcessFlow(d);\n\n    // Add hover effect\n    d3.select(event.currentTarget)\n      .attr('stroke-width', 3)\n      .attr('stroke', '#ffc107')\n      .attr('filter', 'url(#glow)');\n  }\n\n  handleMouseOut(event, d) {\n    // Remove highlights\n    this.clearHighlights();\n\n    // Hide tooltip\n    this.hideTooltip();\n\n    // Hide flow visualization\n    this.hideProcessFlow();\n\n    // Remove hover effect\n    d3.select(event.currentTarget)\n      .attr('stroke-width', 2)\n      .attr('stroke', '#fff')\n      .attr('filter', null);\n  }\n\n  highlightConnectedElements(node) {\n    // Highlight connected links\n    this.linkElements\n      .style('stroke-width', link =>\n        (link.source.id === node.id || link.target.id === node.id) ? 4 : 1.5,\n      )\n      .style('stroke-opacity', link =>\n        (link.source.id === node.id || link.target.id === node.id) ? 1 : 0.3,\n      );\n\n    // Highlight connected nodes\n    this.nodeElements\n      .style('opacity', otherNode => {\n        const isConnected = this.links.some(link =>\n          (link.source.id === node.id && link.target.id === otherNode.id) ||\n                    (link.source.id === otherNode.id && link.target.id === node.id),\n        );\n        return isConnected ? 1 : 0.3;\n      });\n  }\n\n  showEnhancedTooltip(event, d) {\n    const tooltipContent = `\n            <div class=\"tooltip-content\">\n                <h4>${d.name}</h4>\n                <p><strong>Category:</strong> ${d.category}</p>\n                <p><strong>Recommended Level:</strong> ${d.recommendedLevel}</p>\n                <p><strong>Connections:</strong> ${this.getConnectionCount(d)}</p>\n                <p><strong>Inputs:</strong> ${d.inputs?.length || 0}</p>\n                <p><strong>Outputs:</strong> ${d.outputs?.length || 0}</p>\n            </div>\n        `;\n\n    this.tooltip\n      .html(tooltipContent)\n      .style('left', `${event.pageX + 10 }px`)\n      .style('top', `${event.pageY - 28 }px`)\n      .style('opacity', 1)\n      .style('max-width', '300px');\n  }\n\n  getConnectionCount(node) {\n    return this.links.filter(link =>\n      link.source.id === node.id || link.target.id === node.id,\n    ).length;\n  }\n\n  addZoomControls() {\n    const controls = d3.select('#visualization-controls')\n      .append('div')\n      .attr('class', 'zoom-controls')\n      .style('position', 'absolute')\n      .style('top', '10px')\n      .style('right', '10px')\n      .style('z-index', '1000');\n\n    controls.append('button')\n      .attr('class', 'btn btn-sm btn-outline-primary me-2')\n      .html('<i class=\"fas fa-plus\"></i>')\n      .on('click', () => {\n        this.svg.transition().duration(300).call(\n          this.zoom.scaleBy, 1.5,\n        );\n      });\n\n    controls.append('button')\n      .attr('class', 'btn btn-sm btn-outline-primary me-2')\n      .html('<i class=\"fas fa-minus\"></i>')\n      .on('click', () => {\n        this.svg.transition().duration(300).call(\n          this.zoom.scaleBy, 0.75,\n        );\n      });\n\n    controls.append('button')\n      .attr('class', 'btn btn-sm btn-outline-secondary')\n      .html('<i class=\"fas fa-sync-alt\"></i>')\n      .on('click', () => {\n        this.svg.transition().duration(300).call(\n          this.zoom.transform, d3.zoomIdentity,\n        );\n      });\n  }\n\n  nodeClicked(event, d) {\n    event.stopPropagation();\n    // Use the main app's showProcessDetails method instead of local implementation\n    if (window.seApp && typeof window.seApp.showProcessDetails === 'function') {\n      window.seApp.showProcessDetails(d.id);\n    }\n  }\n\n  showTooltip(event, d) {\n    const tooltip = this.tooltip;\n\n    tooltip.style('opacity', 1)\n      .html(`\n                <strong>${d.name}</strong><br/>\n                Level: <span class=\"level-badge level-${d.recommendedLevel}\">${d.recommendedLevel}</span><br/>\n                Connections: ${this.getConnectionCount(d)}<br/>\n                Confidence: ${Math.round(d.confidence * 100)}%\n            `)\n      .style('left', `${event.pageX + 10 }px`)\n      .style('top', `${event.pageY - 10 }px`);\n  }\n\n  hideTooltip() {\n    this.tooltip.style('opacity', 0);\n  }\n\n  toggleLabels(show) {\n    if (this.labelElements) {\n      this.labelElements.style('opacity', show ? 1 : 0);\n    }\n  }\n\n  changeLayout(layout) {\n    if (!this.simulation) return;\n\n    switch (layout) {\n      case 'circular':\n        this.applyCircularLayout();\n        break;\n      case 'hierarchical':\n        this.applyHierarchicalLayout();\n        break;\n      default:\n        this.applyForceLayout();\n    }\n  }\n\n  applyCircularLayout() {\n    const centerX = this.width / 2;\n    const centerY = this.height / 2;\n    const radius = Math.min(this.width, this.height) / 3;\n\n    this.nodes.forEach((node, i) => {\n      const angle = (2 * Math.PI * i) / this.nodes.length;\n      node.fx = centerX + radius * Math.cos(angle);\n      node.fy = centerY + radius * Math.sin(angle);\n    });\n\n    this.simulation.alpha(0.3).restart();\n  }\n\n  applyHierarchicalLayout() {\n    const categories = ['technical_management', 'technical'];\n    const categoryHeight = this.height / categories.length;\n\n    categories.forEach((category, catIndex) => {\n      const categoryNodes = this.nodes.filter(n => n.category === category);\n      const nodeWidth = this.width / (categoryNodes.length + 1);\n\n      categoryNodes.forEach((node, nodeIndex) => {\n        node.fx = (nodeIndex + 1) * nodeWidth;\n        node.fy = (catIndex + 0.5) * categoryHeight;\n      });\n    });\n\n    this.simulation.alpha(0.3).restart();\n  }\n\n  applyForceLayout() {\n    this.nodes.forEach(node => {\n      node.fx = null;\n      node.fy = null;\n    });\n\n    this.simulation\n      .force('center', d3.forceCenter(this.width / 2, this.height / 2))\n      .alpha(0.3)\n      .restart();\n  }\n\n  resetFilters() {\n    this.currentFilters = {\n      categories: new Set(['technical_management', 'technical']),\n      levels: new Set(['basic', 'standard', 'comprehensive']),\n      showDependencies: true,\n      searchTerm: '',\n    };\n\n    // Reset UI controls\n    document.getElementById('process-search').value = '';\n    document.getElementById('filter-technical-mgmt').checked = true;\n    document.getElementById('filter-technical').checked = true;\n    document.getElementById('filter-basic').checked = true;\n    document.getElementById('filter-standard').checked = true;\n    document.getElementById('filter-comprehensive').checked = true;\n    document.getElementById('show-dependencies').checked = true;\n\n    this.updateVisualization();\n  }\n\n  zoomIn() {\n    this.svg.transition().call(this.zoom.scaleBy, 1.5);\n  }\n\n  zoomOut() {\n    this.svg.transition().call(this.zoom.scaleBy, 1 / 1.5);\n  }\n\n  resetView() {\n    this.svg.transition().call(this.zoom.transform, d3.zoomIdentity);\n  }\n\n  // Public methods\n  highlightProcess(processId) {\n    if (this.nodeElements) {\n      this.nodeElements\n        .style('stroke', d => d.id === processId ? '#ff6b6b' : '#fff')\n        .style('stroke-width', d => d.id === processId ? 4 : 2);\n    }\n  }\n\n  clearHighlights() {\n    if (this.nodeElements) {\n      this.nodeElements\n        .style('stroke', '#fff')\n        .style('stroke-width', 2);\n    }\n  }\n\n  setupEventListeners() {\n    // Setup zoom control event listeners\n    const zoomInBtn = document.getElementById('zoom-in-btn');\n    const zoomOutBtn = document.getElementById('zoom-out-btn');\n    const resetViewBtn = document.getElementById('reset-view-btn');\n\n    if (zoomInBtn) {\n      zoomInBtn.addEventListener('click', () => this.zoomIn());\n    }\n    if (zoomOutBtn) {\n      zoomOutBtn.addEventListener('click', () => this.zoomOut());\n    }\n    if (resetViewBtn) {\n      resetViewBtn.addEventListener('click', () => this.resetView());\n    }\n  }\n}\n\n// Export for global access\nwindow.ProcessNetworkVisualizer = ProcessNetworkVisualizer;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };\n\t__webpack_require__.i.forEach(function(handler) { handler(execOptions); });\n\tmodule = execOptions.module;\n\texecOptions.factory.call(module.exports, module, module.exports, execOptions.require);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n// expose the module execution interceptor\n__webpack_require__.i = [];\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference all chunks\n__webpack_require__.hu = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + __webpack_require__.h() + \".hot-update.js\";\n};","__webpack_require__.hmrF = () => (\"main.\" + __webpack_require__.h() + \".hot-update.json\");","__webpack_require__.h = () => (\"b61ff77d87ce9d4fd1a4\")","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"se-tailoring-framework:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var currentModuleData = {};\nvar installedModules = __webpack_require__.c;\n\n// module and require creation\nvar currentChildModule;\nvar currentParents = [];\n\n// status\nvar registeredStatusHandlers = [];\nvar currentStatus = \"idle\";\n\n// while downloading\nvar blockingPromises = 0;\nvar blockingPromisesWaiting = [];\n\n// The update info\nvar currentUpdateApplyHandlers;\nvar queuedInvalidatedModules;\n\n__webpack_require__.hmrD = currentModuleData;\n\n__webpack_require__.i.push(function (options) {\n\tvar module = options.module;\n\tvar require = createRequire(options.require, options.id);\n\tmodule.hot = createModuleHotObject(options.id, module);\n\tmodule.parents = currentParents;\n\tmodule.children = [];\n\tcurrentParents = [];\n\toptions.require = require;\n});\n\n__webpack_require__.hmrC = {};\n__webpack_require__.hmrI = {};\n\nfunction createRequire(require, moduleId) {\n\tvar me = installedModules[moduleId];\n\tif (!me) return require;\n\tvar fn = function (request) {\n\t\tif (me.hot.active) {\n\t\t\tif (installedModules[request]) {\n\t\t\t\tvar parents = installedModules[request].parents;\n\t\t\t\tif (parents.indexOf(moduleId) === -1) {\n\t\t\t\t\tparents.push(moduleId);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrentParents = [moduleId];\n\t\t\t\tcurrentChildModule = request;\n\t\t\t}\n\t\t\tif (me.children.indexOf(request) === -1) {\n\t\t\t\tme.children.push(request);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn(\n\t\t\t\t\"[HMR] unexpected require(\" +\n\t\t\t\t\trequest +\n\t\t\t\t\t\") from disposed module \" +\n\t\t\t\t\tmoduleId\n\t\t\t);\n\t\t\tcurrentParents = [];\n\t\t}\n\t\treturn require(request);\n\t};\n\tvar createPropertyDescriptor = function (name) {\n\t\treturn {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn require[name];\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\trequire[name] = value;\n\t\t\t}\n\t\t};\n\t};\n\tfor (var name in require) {\n\t\tif (Object.prototype.hasOwnProperty.call(require, name) && name !== \"e\") {\n\t\t\tObject.defineProperty(fn, name, createPropertyDescriptor(name));\n\t\t}\n\t}\n\tfn.e = function (chunkId, fetchPriority) {\n\t\treturn trackBlockingPromise(require.e(chunkId, fetchPriority));\n\t};\n\treturn fn;\n}\n\nfunction createModuleHotObject(moduleId, me) {\n\tvar _main = currentChildModule !== moduleId;\n\tvar hot = {\n\t\t// private stuff\n\t\t_acceptedDependencies: {},\n\t\t_acceptedErrorHandlers: {},\n\t\t_declinedDependencies: {},\n\t\t_selfAccepted: false,\n\t\t_selfDeclined: false,\n\t\t_selfInvalidated: false,\n\t\t_disposeHandlers: [],\n\t\t_main: _main,\n\t\t_requireSelf: function () {\n\t\t\tcurrentParents = me.parents.slice();\n\t\t\tcurrentChildModule = _main ? undefined : moduleId;\n\t\t\t__webpack_require__(moduleId);\n\t\t},\n\n\t\t// Module API\n\t\tactive: true,\n\t\taccept: function (dep, callback, errorHandler) {\n\t\t\tif (dep === undefined) hot._selfAccepted = true;\n\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n\t\t\telse if (typeof dep === \"object\" && dep !== null) {\n\t\t\t\tfor (var i = 0; i < dep.length; i++) {\n\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function () {};\n\t\t\t\t\thot._acceptedErrorHandlers[dep[i]] = errorHandler;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thot._acceptedDependencies[dep] = callback || function () {};\n\t\t\t\thot._acceptedErrorHandlers[dep] = errorHandler;\n\t\t\t}\n\t\t},\n\t\tdecline: function (dep) {\n\t\t\tif (dep === undefined) hot._selfDeclined = true;\n\t\t\telse if (typeof dep === \"object\" && dep !== null)\n\t\t\t\tfor (var i = 0; i < dep.length; i++)\n\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n\t\t\telse hot._declinedDependencies[dep] = true;\n\t\t},\n\t\tdispose: function (callback) {\n\t\t\thot._disposeHandlers.push(callback);\n\t\t},\n\t\taddDisposeHandler: function (callback) {\n\t\t\thot._disposeHandlers.push(callback);\n\t\t},\n\t\tremoveDisposeHandler: function (callback) {\n\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n\t\t},\n\t\tinvalidate: function () {\n\t\t\tthis._selfInvalidated = true;\n\t\t\tswitch (currentStatus) {\n\t\t\t\tcase \"idle\":\n\t\t\t\t\tcurrentUpdateApplyHandlers = [];\n\t\t\t\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\t\t\tmoduleId,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tsetStatus(\"ready\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ready\":\n\t\t\t\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\t\t\tmoduleId,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"prepare\":\n\t\t\t\tcase \"check\":\n\t\t\t\tcase \"dispose\":\n\t\t\t\tcase \"apply\":\n\t\t\t\t\t(queuedInvalidatedModules = queuedInvalidatedModules || []).push(\n\t\t\t\t\t\tmoduleId\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// ignore requests in error states\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\t// Management API\n\t\tcheck: hotCheck,\n\t\tapply: hotApply,\n\t\tstatus: function (l) {\n\t\t\tif (!l) return currentStatus;\n\t\t\tregisteredStatusHandlers.push(l);\n\t\t},\n\t\taddStatusHandler: function (l) {\n\t\t\tregisteredStatusHandlers.push(l);\n\t\t},\n\t\tremoveStatusHandler: function (l) {\n\t\t\tvar idx = registeredStatusHandlers.indexOf(l);\n\t\t\tif (idx >= 0) registeredStatusHandlers.splice(idx, 1);\n\t\t},\n\n\t\t// inherit from previous dispose call\n\t\tdata: currentModuleData[moduleId]\n\t};\n\tcurrentChildModule = undefined;\n\treturn hot;\n}\n\nfunction setStatus(newStatus) {\n\tcurrentStatus = newStatus;\n\tvar results = [];\n\n\tfor (var i = 0; i < registeredStatusHandlers.length; i++)\n\t\tresults[i] = registeredStatusHandlers[i].call(null, newStatus);\n\n\treturn Promise.all(results).then(function () {});\n}\n\nfunction unblock() {\n\tif (--blockingPromises === 0) {\n\t\tsetStatus(\"ready\").then(function () {\n\t\t\tif (blockingPromises === 0) {\n\t\t\t\tvar list = blockingPromisesWaiting;\n\t\t\t\tblockingPromisesWaiting = [];\n\t\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\t\tlist[i]();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction trackBlockingPromise(promise) {\n\tswitch (currentStatus) {\n\t\tcase \"ready\":\n\t\t\tsetStatus(\"prepare\");\n\t\t/* fallthrough */\n\t\tcase \"prepare\":\n\t\t\tblockingPromises++;\n\t\t\tpromise.then(unblock, unblock);\n\t\t\treturn promise;\n\t\tdefault:\n\t\t\treturn promise;\n\t}\n}\n\nfunction waitForBlockingPromises(fn) {\n\tif (blockingPromises === 0) return fn();\n\treturn new Promise(function (resolve) {\n\t\tblockingPromisesWaiting.push(function () {\n\t\t\tresolve(fn());\n\t\t});\n\t});\n}\n\nfunction hotCheck(applyOnUpdate) {\n\tif (currentStatus !== \"idle\") {\n\t\tthrow new Error(\"check() is only allowed in idle status\");\n\t}\n\treturn setStatus(\"check\")\n\t\t.then(__webpack_require__.hmrM)\n\t\t.then(function (update) {\n\t\t\tif (!update) {\n\t\t\t\treturn setStatus(applyInvalidatedModules() ? \"ready\" : \"idle\").then(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn setStatus(\"prepare\").then(function () {\n\t\t\t\tvar updatedModules = [];\n\t\t\t\tcurrentUpdateApplyHandlers = [];\n\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tObject.keys(__webpack_require__.hmrC).reduce(function (\n\t\t\t\t\t\tpromises,\n\t\t\t\t\t\tkey\n\t\t\t\t\t) {\n\t\t\t\t\t\t__webpack_require__.hmrC[key](\n\t\t\t\t\t\t\tupdate.c,\n\t\t\t\t\t\t\tupdate.r,\n\t\t\t\t\t\t\tupdate.m,\n\t\t\t\t\t\t\tpromises,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers,\n\t\t\t\t\t\t\tupdatedModules\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn promises;\n\t\t\t\t\t}, [])\n\t\t\t\t).then(function () {\n\t\t\t\t\treturn waitForBlockingPromises(function () {\n\t\t\t\t\t\tif (applyOnUpdate) {\n\t\t\t\t\t\t\treturn internalApply(applyOnUpdate);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn setStatus(\"ready\").then(function () {\n\t\t\t\t\t\t\treturn updatedModules;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n}\n\nfunction hotApply(options) {\n\tif (currentStatus !== \"ready\") {\n\t\treturn Promise.resolve().then(function () {\n\t\t\tthrow new Error(\n\t\t\t\t\"apply() is only allowed in ready status (state: \" +\n\t\t\t\t\tcurrentStatus +\n\t\t\t\t\t\")\"\n\t\t\t);\n\t\t});\n\t}\n\treturn internalApply(options);\n}\n\nfunction internalApply(options) {\n\toptions = options || {};\n\n\tapplyInvalidatedModules();\n\n\tvar results = currentUpdateApplyHandlers.map(function (handler) {\n\t\treturn handler(options);\n\t});\n\tcurrentUpdateApplyHandlers = undefined;\n\n\tvar errors = results\n\t\t.map(function (r) {\n\t\t\treturn r.error;\n\t\t})\n\t\t.filter(Boolean);\n\n\tif (errors.length > 0) {\n\t\treturn setStatus(\"abort\").then(function () {\n\t\t\tthrow errors[0];\n\t\t});\n\t}\n\n\t// Now in \"dispose\" phase\n\tvar disposePromise = setStatus(\"dispose\");\n\n\tresults.forEach(function (result) {\n\t\tif (result.dispose) result.dispose();\n\t});\n\n\t// Now in \"apply\" phase\n\tvar applyPromise = setStatus(\"apply\");\n\n\tvar error;\n\tvar reportError = function (err) {\n\t\tif (!error) error = err;\n\t};\n\n\tvar outdatedModules = [];\n\n\tvar onAccepted = function () {\n\t\treturn Promise.all([disposePromise, applyPromise]).then(function () {\n\t\t\t// handle errors in accept handlers and self accepted module load\n\t\t\tif (error) {\n\t\t\t\treturn setStatus(\"fail\").then(function () {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (queuedInvalidatedModules) {\n\t\t\t\treturn internalApply(options).then(function (list) {\n\t\t\t\t\toutdatedModules.forEach(function (moduleId) {\n\t\t\t\t\t\tif (list.indexOf(moduleId) < 0) list.push(moduleId);\n\t\t\t\t\t});\n\t\t\t\t\treturn list;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn setStatus(\"idle\").then(function () {\n\t\t\t\treturn outdatedModules;\n\t\t\t});\n\t\t});\n\t};\n\n\treturn Promise.all(\n\t\tresults\n\t\t\t.filter(function (result) {\n\t\t\t\treturn result.apply;\n\t\t\t})\n\t\t\t.map(function (result) {\n\t\t\t\treturn result.apply(reportError);\n\t\t\t})\n\t)\n\t\t.then(function (applyResults) {\n\t\t\tapplyResults.forEach(function (modules) {\n\t\t\t\tif (modules) {\n\t\t\t\t\tfor (var i = 0; i < modules.length; i++) {\n\t\t\t\t\t\toutdatedModules.push(modules[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t\t.then(onAccepted);\n}\n\nfunction applyInvalidatedModules() {\n\tif (queuedInvalidatedModules) {\n\t\tif (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];\n\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\tqueuedInvalidatedModules.forEach(function (moduleId) {\n\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\tmoduleId,\n\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t\tqueuedInvalidatedModules = undefined;\n\t\treturn true;\n\t}\n}","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = __webpack_require__.hmrS_jsonp = __webpack_require__.hmrS_jsonp || {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\nvar currentUpdatedModulesList;\nvar waitingUpdateResolves = {};\nfunction loadUpdateChunk(chunkId, updatedModulesList) {\n\tcurrentUpdatedModulesList = updatedModulesList;\n\treturn new Promise((resolve, reject) => {\n\t\twaitingUpdateResolves[chunkId] = resolve;\n\t\t// start update chunk loading\n\t\tvar url = __webpack_require__.p + __webpack_require__.hu(chunkId);\n\t\t// create error before stack unwound to get useful stacktrace later\n\t\tvar error = new Error();\n\t\tvar loadingEnded = (event) => {\n\t\t\tif(waitingUpdateResolves[chunkId]) {\n\t\t\t\twaitingUpdateResolves[chunkId] = undefined\n\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\terror.message = 'Loading hot update chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\terror.type = errorType;\n\t\t\t\terror.request = realSrc;\n\t\t\t\treject(error);\n\t\t\t}\n\t\t};\n\t\t__webpack_require__.l(url, loadingEnded);\n\t});\n}\n\nself[\"webpackHotUpdatese_tailoring_framework\"] = (chunkId, moreModules, runtime) => {\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\tcurrentUpdate[moduleId] = moreModules[moduleId];\n\t\t\tif(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);\n\t\t}\n\t}\n\tif(runtime) currentUpdateRuntime.push(runtime);\n\tif(waitingUpdateResolves[chunkId]) {\n\t\twaitingUpdateResolves[chunkId]();\n\t\twaitingUpdateResolves[chunkId] = undefined;\n\t}\n};\n\nvar currentUpdateChunks;\nvar currentUpdate;\nvar currentUpdateRemovedChunks;\nvar currentUpdateRuntime;\nfunction applyHandler(options) {\n\tif (__webpack_require__.f) delete __webpack_require__.f.jsonpHmr;\n\tcurrentUpdateChunks = undefined;\n\tfunction getAffectedModuleEffects(updateModuleId) {\n\t\tvar outdatedModules = [updateModuleId];\n\t\tvar outdatedDependencies = {};\n\n\t\tvar queue = outdatedModules.map(function (id) {\n\t\t\treturn {\n\t\t\t\tchain: [id],\n\t\t\t\tid: id\n\t\t\t};\n\t\t});\n\t\twhile (queue.length > 0) {\n\t\t\tvar queueItem = queue.pop();\n\t\t\tvar moduleId = queueItem.id;\n\t\t\tvar chain = queueItem.chain;\n\t\t\tvar module = __webpack_require__.c[moduleId];\n\t\t\tif (\n\t\t\t\t!module ||\n\t\t\t\t(module.hot._selfAccepted && !module.hot._selfInvalidated)\n\t\t\t)\n\t\t\t\tcontinue;\n\t\t\tif (module.hot._selfDeclined) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"self-declined\",\n\t\t\t\t\tchain: chain,\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (module.hot._main) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"unaccepted\",\n\t\t\t\t\tchain: chain,\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n\t\t\t\tvar parentId = module.parents[i];\n\t\t\t\tvar parent = __webpack_require__.c[parentId];\n\t\t\t\tif (!parent) continue;\n\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"declined\",\n\t\t\t\t\t\tchain: chain.concat([parentId]),\n\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\tparentId: parentId\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n\t\t\t\t\tif (!outdatedDependencies[parentId])\n\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tdelete outdatedDependencies[parentId];\n\t\t\t\toutdatedModules.push(parentId);\n\t\t\t\tqueue.push({\n\t\t\t\t\tchain: chain.concat([parentId]),\n\t\t\t\t\tid: parentId\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttype: \"accepted\",\n\t\t\tmoduleId: updateModuleId,\n\t\t\toutdatedModules: outdatedModules,\n\t\t\toutdatedDependencies: outdatedDependencies\n\t\t};\n\t}\n\n\tfunction addAllToSet(a, b) {\n\t\tfor (var i = 0; i < b.length; i++) {\n\t\t\tvar item = b[i];\n\t\t\tif (a.indexOf(item) === -1) a.push(item);\n\t\t}\n\t}\n\n\t// at begin all updates modules are outdated\n\t// the \"outdated\" status can propagate to parents if they don't accept the children\n\tvar outdatedDependencies = {};\n\tvar outdatedModules = [];\n\tvar appliedUpdate = {};\n\n\tvar warnUnexpectedRequire = function warnUnexpectedRequire(module) {\n\t\tconsole.warn(\n\t\t\t\"[HMR] unexpected require(\" + module.id + \") to disposed module\"\n\t\t);\n\t};\n\n\tfor (var moduleId in currentUpdate) {\n\t\tif (__webpack_require__.o(currentUpdate, moduleId)) {\n\t\t\tvar newModuleFactory = currentUpdate[moduleId];\n\t\t\tvar result = newModuleFactory\n\t\t\t\t? getAffectedModuleEffects(moduleId)\n\t\t\t\t: {\n\t\t\t\t\t\ttype: \"disposed\",\n\t\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t\t};\n\t\t\t/** @type {Error|false} */\n\t\t\tvar abortError = false;\n\t\t\tvar doApply = false;\n\t\t\tvar doDispose = false;\n\t\t\tvar chainInfo = \"\";\n\t\t\tif (result.chain) {\n\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n\t\t\t}\n\t\t\tswitch (result.type) {\n\t\t\t\tcase \"self-declined\":\n\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n\t\t\t\t\tif (!options.ignoreDeclined)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n\t\t\t\t\t\t\t\tresult.moduleId +\n\t\t\t\t\t\t\t\tchainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"declined\":\n\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n\t\t\t\t\tif (!options.ignoreDeclined)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n\t\t\t\t\t\t\t\tresult.moduleId +\n\t\t\t\t\t\t\t\t\" in \" +\n\t\t\t\t\t\t\t\tresult.parentId +\n\t\t\t\t\t\t\t\tchainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"unaccepted\":\n\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n\t\t\t\t\tif (!options.ignoreUnaccepted)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"accepted\":\n\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n\t\t\t\t\tdoApply = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"disposed\":\n\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n\t\t\t\t\tdoDispose = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n\t\t\t}\n\t\t\tif (abortError) {\n\t\t\t\treturn {\n\t\t\t\t\terror: abortError\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (doApply) {\n\t\t\t\tappliedUpdate[moduleId] = newModuleFactory;\n\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n\t\t\t\t\tif (__webpack_require__.o(result.outdatedDependencies, moduleId)) {\n\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n\t\t\t\t\t\taddAllToSet(\n\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (doDispose) {\n\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n\t\t\t}\n\t\t}\n\t}\n\tcurrentUpdate = undefined;\n\n\t// Store self accepted outdated modules to require them later by the module system\n\tvar outdatedSelfAcceptedModules = [];\n\tfor (var j = 0; j < outdatedModules.length; j++) {\n\t\tvar outdatedModuleId = outdatedModules[j];\n\t\tvar module = __webpack_require__.c[outdatedModuleId];\n\t\tif (\n\t\t\tmodule &&\n\t\t\t(module.hot._selfAccepted || module.hot._main) &&\n\t\t\t// removed self-accepted modules should not be required\n\t\t\tappliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&\n\t\t\t// when called invalidate self-accepting is not possible\n\t\t\t!module.hot._selfInvalidated\n\t\t) {\n\t\t\toutdatedSelfAcceptedModules.push({\n\t\t\t\tmodule: outdatedModuleId,\n\t\t\t\trequire: module.hot._requireSelf,\n\t\t\t\terrorHandler: module.hot._selfAccepted\n\t\t\t});\n\t\t}\n\t}\n\n\tvar moduleOutdatedDependencies;\n\n\treturn {\n\t\tdispose: function () {\n\t\t\tcurrentUpdateRemovedChunks.forEach(function (chunkId) {\n\t\t\t\tdelete installedChunks[chunkId];\n\t\t\t});\n\t\t\tcurrentUpdateRemovedChunks = undefined;\n\n\t\t\tvar idx;\n\t\t\tvar queue = outdatedModules.slice();\n\t\t\twhile (queue.length > 0) {\n\t\t\t\tvar moduleId = queue.pop();\n\t\t\t\tvar module = __webpack_require__.c[moduleId];\n\t\t\t\tif (!module) continue;\n\n\t\t\t\tvar data = {};\n\n\t\t\t\t// Call dispose handlers\n\t\t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n\t\t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n\t\t\t\t\tdisposeHandlers[j].call(null, data);\n\t\t\t\t}\n\t\t\t\t__webpack_require__.hmrD[moduleId] = data;\n\n\t\t\t\t// disable module (this disables requires from this module)\n\t\t\t\tmodule.hot.active = false;\n\n\t\t\t\t// remove module from cache\n\t\t\t\tdelete __webpack_require__.c[moduleId];\n\n\t\t\t\t// when disposing there is no need to call dispose handler\n\t\t\t\tdelete outdatedDependencies[moduleId];\n\n\t\t\t\t// remove \"parents\" references from all children\n\t\t\t\tfor (j = 0; j < module.children.length; j++) {\n\t\t\t\t\tvar child = __webpack_require__.c[module.children[j]];\n\t\t\t\t\tif (!child) continue;\n\t\t\t\t\tidx = child.parents.indexOf(moduleId);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tchild.parents.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// remove outdated dependency from module children\n\t\t\tvar dependency;\n\t\t\tfor (var outdatedModuleId in outdatedDependencies) {\n\t\t\t\tif (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {\n\t\t\t\t\tmodule = __webpack_require__.c[outdatedModuleId];\n\t\t\t\t\tif (module) {\n\t\t\t\t\t\tmoduleOutdatedDependencies =\n\t\t\t\t\t\t\toutdatedDependencies[outdatedModuleId];\n\t\t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n\t\t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n\t\t\t\t\t\t\tidx = module.children.indexOf(dependency);\n\t\t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tapply: function (reportError) {\n\t\t\tvar acceptPromises = [];\n\t\t\t// insert new code\n\t\t\tfor (var updateModuleId in appliedUpdate) {\n\t\t\t\tif (__webpack_require__.o(appliedUpdate, updateModuleId)) {\n\t\t\t\t\t__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// run new runtime modules\n\t\t\tfor (var i = 0; i < currentUpdateRuntime.length; i++) {\n\t\t\t\tcurrentUpdateRuntime[i](__webpack_require__);\n\t\t\t}\n\n\t\t\t// call accept handlers\n\t\t\tfor (var outdatedModuleId in outdatedDependencies) {\n\t\t\t\tif (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {\n\t\t\t\t\tvar module = __webpack_require__.c[outdatedModuleId];\n\t\t\t\t\tif (module) {\n\t\t\t\t\t\tmoduleOutdatedDependencies =\n\t\t\t\t\t\t\toutdatedDependencies[outdatedModuleId];\n\t\t\t\t\t\tvar callbacks = [];\n\t\t\t\t\t\tvar errorHandlers = [];\n\t\t\t\t\t\tvar dependenciesForCallbacks = [];\n\t\t\t\t\t\tfor (var j = 0; j < moduleOutdatedDependencies.length; j++) {\n\t\t\t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\n\t\t\t\t\t\t\tvar acceptCallback =\n\t\t\t\t\t\t\t\tmodule.hot._acceptedDependencies[dependency];\n\t\t\t\t\t\t\tvar errorHandler =\n\t\t\t\t\t\t\t\tmodule.hot._acceptedErrorHandlers[dependency];\n\t\t\t\t\t\t\tif (acceptCallback) {\n\t\t\t\t\t\t\t\tif (callbacks.indexOf(acceptCallback) !== -1) continue;\n\t\t\t\t\t\t\t\tcallbacks.push(acceptCallback);\n\t\t\t\t\t\t\t\terrorHandlers.push(errorHandler);\n\t\t\t\t\t\t\t\tdependenciesForCallbacks.push(dependency);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (var k = 0; k < callbacks.length; k++) {\n\t\t\t\t\t\t\tvar result;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tresult = callbacks[k].call(null, moduleOutdatedDependencies);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tif (typeof errorHandlers[k] === \"function\") {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\terrorHandlers[k](err, {\n\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k]\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} catch (err2) {\n\t\t\t\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"accept-error-handler-errored\",\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k],\n\t\t\t\t\t\t\t\t\t\t\t\terror: err2,\n\t\t\t\t\t\t\t\t\t\t\t\toriginalError: err\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\t\t\t\treportError(err2);\n\t\t\t\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k],\n\t\t\t\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (result && typeof result.then === \"function\") {\n\t\t\t\t\t\t\t\tacceptPromises.push(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar onAccepted = function () {\n\t\t\t\t// Load self accepted modules\n\t\t\t\tfor (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {\n\t\t\t\t\tvar item = outdatedSelfAcceptedModules[o];\n\t\t\t\t\tvar moduleId = item.module;\n\t\t\t\t\ttry {\n\t\t\t\t\t\titem.require(moduleId);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tif (typeof item.errorHandler === \"function\") {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\titem.errorHandler(err, {\n\t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\t\tmodule: __webpack_require__.c[moduleId]\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} catch (err1) {\n\t\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n\t\t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\t\t\terror: err1,\n\t\t\t\t\t\t\t\t\t\toriginalError: err\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\t\treportError(err1);\n\t\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\ttype: \"self-accept-errored\",\n\t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn Promise.all(acceptPromises)\n\t\t\t\t.then(onAccepted)\n\t\t\t\t.then(function () {\n\t\t\t\t\treturn outdatedModules;\n\t\t\t\t});\n\t\t}\n\t};\n}\n__webpack_require__.hmrI.jsonp = function (moduleId, applyHandlers) {\n\tif (!currentUpdate) {\n\t\tcurrentUpdate = {};\n\t\tcurrentUpdateRuntime = [];\n\t\tcurrentUpdateRemovedChunks = [];\n\t\tapplyHandlers.push(applyHandler);\n\t}\n\tif (!__webpack_require__.o(currentUpdate, moduleId)) {\n\t\tcurrentUpdate[moduleId] = __webpack_require__.m[moduleId];\n\t}\n};\n__webpack_require__.hmrC.jsonp = function (\n\tchunkIds,\n\tremovedChunks,\n\tremovedModules,\n\tpromises,\n\tapplyHandlers,\n\tupdatedModulesList\n) {\n\tapplyHandlers.push(applyHandler);\n\tcurrentUpdateChunks = {};\n\tcurrentUpdateRemovedChunks = removedChunks;\n\tcurrentUpdate = removedModules.reduce(function (obj, key) {\n\t\tobj[key] = false;\n\t\treturn obj;\n\t}, {});\n\tcurrentUpdateRuntime = [];\n\tchunkIds.forEach(function (chunkId) {\n\t\tif (\n\t\t\t__webpack_require__.o(installedChunks, chunkId) &&\n\t\t\tinstalledChunks[chunkId] !== undefined\n\t\t) {\n\t\t\tpromises.push(loadUpdateChunk(chunkId, updatedModulesList));\n\t\t\tcurrentUpdateChunks[chunkId] = true;\n\t\t} else {\n\t\t\tcurrentUpdateChunks[chunkId] = false;\n\t\t}\n\t});\n\tif (__webpack_require__.f) {\n\t\t__webpack_require__.f.jsonpHmr = function (chunkId, promises) {\n\t\t\tif (\n\t\t\t\tcurrentUpdateChunks &&\n\t\t\t\t__webpack_require__.o(currentUpdateChunks, chunkId) &&\n\t\t\t\t!currentUpdateChunks[chunkId]\n\t\t\t) {\n\t\t\t\tpromises.push(loadUpdateChunk(chunkId));\n\t\t\t\tcurrentUpdateChunks[chunkId] = true;\n\t\t\t}\n\t\t};\n\t}\n};\n\n__webpack_require__.hmrM = () => {\n\tif (typeof fetch === \"undefined\") throw new Error(\"No browser support: need fetch API\");\n\treturn fetch(__webpack_require__.p + __webpack_require__.hmrF()).then((response) => {\n\t\tif(response.status === 404) return; // no update available\n\t\tif(!response.ok) throw new Error(\"Failed to fetch update manifest \" + response.statusText);\n\t\treturn response.json();\n\t});\n};\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkse_tailoring_framework\"] = self[\"webpackChunkse_tailoring_framework\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\n__webpack_require__.O(undefined, [\"vendors\"], () => (__webpack_require__(\"./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=3000&pathname=%2Fws&logging=info&overlay=true&reconnect=10&hot=true&live-reload=true\")))\n__webpack_require__.O(undefined, [\"vendors\"], () => (__webpack_require__(\"./node_modules/webpack/hot/dev-server.js\")))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors\"], () => (__webpack_require__(\"./js/app.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}