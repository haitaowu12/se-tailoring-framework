/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/app.js":
/*!*******************!*\
  !*** ./js/app.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_assessment_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/assessment.js */ \"./js/components/assessment.js\");\n/* harmony import */ var _components_assessment_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_components_assessment_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_visualization_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/visualization.js */ \"./js/components/visualization.js\");\n/* harmony import */ var _components_visualization_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_components_visualization_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_recommendations_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/recommendations.js */ \"./js/components/recommendations.js\");\n/* harmony import */ var _components_recommendations_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_components_recommendations_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_export_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/export.js */ \"./js/components/export.js\");\n/* harmony import */ var _components_export_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_components_export_js__WEBPACK_IMPORTED_MODULE_3__);\n/**\n * Main Application Controller for SE Process Tailoring Framework\n * Handles navigation, data loading, and view management\n */\n\n// Import component modules\n\n\n\n\n\nclass SEFrameworkApp {\n  constructor() {\n    this.currentView = \"welcome\";\n    this.assessmentData = {};\n    this.processData = {};\n    this.questionData = {};\n    this.dependencyData = {};\n    this.recommendations = {};\n    this.assessmentEngine = null;\n    this.visualizer = null;\n    this.recommendationEngine = null;\n    this.exportManager = null;\n\n    // Assessment state\n    this.assessmentResponses = {};\n    this.assessmentScores = {\n      complexity: 0,\n      safety: 0,\n      scale: 0,\n      maturity: 0,\n      overall: 0,\n    };\n\n    this.init();\n  }\n\n  async init() {\n    try {\n      console.log(\"=== SE Framework App Initialization Started ===\");\n      this.showLoading();\n\n      // Check if required components are loaded\n      console.log(\"Step 1: Checking component availability:\", {\n        AssessmentEngine: typeof AssessmentEngine,\n        ProcessNetworkVisualizer: typeof ProcessNetworkVisualizer,\n        RecommendationEngine: typeof RecommendationEngine,\n        ExportManager: typeof ExportManager,\n      });\n\n      console.log(\"Step 2: Loading data...\");\n      await this.loadData();\n      console.log(\"Step 3: Data loaded successfully\");\n\n      console.log(\"Step 4: Setting up event listeners...\");\n      this.setupEventListeners();\n      console.log(\"Step 5: Event listeners setup complete\");\n\n      console.log(\"Step 6: Rendering welcome view...\");\n      this.renderWelcomeView();\n      console.log(\"Step 7: Welcome view rendered\");\n\n      console.log(\"Step 8: About to hide loading overlay...\");\n      this.hideLoading();\n      console.log(\"Step 9: Loading overlay hidden\");\n\n      console.log(\"=== App Initialized Successfully ===\");\n    } catch (error) {\n      console.error(\"=== App Initialization Failed ===\", error);\n      console.error(\"Error details:\", error.stack);\n      this.showError(\n        `Failed to load application data: ${error.message}. Please refresh the page.`,\n      );\n      this.hideLoading();\n    }\n  }\n\n  async loadData() {\n    try {\n      console.log(\"Starting data loading...\");\n\n      // Load data files sequentially for better error handling\n      const processesResponse = await fetch(\"data/processes.json\");\n      console.log(\"Processes response status:\", processesResponse.status);\n      if (!processesResponse.ok) {\n        throw new Error(\"Failed to load processes data\");\n      }\n      const processes = await processesResponse.json();\n\n      const questionsResponse = await fetch(\"data/questions.json\");\n      console.log(\"Questions response status:\", questionsResponse.status);\n      if (!questionsResponse.ok) {\n        throw new Error(\"Failed to load questions data\");\n      }\n      const questions = await questionsResponse.json();\n\n      const dependenciesResponse = await fetch(\"data/dependencies.json\");\n      console.log(\"Dependencies response status:\", dependenciesResponse.status);\n      if (!dependenciesResponse.ok) {\n        throw new Error(\"Failed to load dependencies data\");\n      }\n      const dependencies = await dependenciesResponse.json();\n\n      console.log(\"Data loaded successfully:\", {\n        processes: processes.processes ? processes.processes.length : 0,\n        questions: questions.assessmentCategories\n          ? questions.assessmentCategories.length\n          : 0,\n        dependencies: dependencies.dependencies\n          ? dependencies.dependencies.length\n          : 0,\n      });\n\n      this.processData = processes;\n      this.questionData = questions;\n      this.dependencyData = dependencies;\n\n      console.log(\"Step 2.5: Checking component classes...\");\n      // Check if component classes are available\n      const componentCheck = {\n        AssessmentEngine: typeof AssessmentEngine,\n        ProcessNetworkVisualizer: typeof ProcessNetworkVisualizer,\n        RecommendationEngine: typeof RecommendationEngine,\n        ExportManager: typeof ExportManager,\n      };\n      console.log(\"Component availability:\", componentCheck);\n\n      if (typeof AssessmentEngine === \"undefined\") {\n        throw new Error(\"AssessmentEngine class not loaded\");\n      }\n      if (typeof ProcessNetworkVisualizer === \"undefined\") {\n        throw new Error(\"ProcessNetworkVisualizer class not loaded\");\n      }\n      if (typeof RecommendationEngine === \"undefined\") {\n        throw new Error(\"RecommendationEngine class not loaded\");\n      }\n      if (typeof ExportManager === \"undefined\") {\n        throw new Error(\"ExportManager class not loaded\");\n      }\n\n      console.log(\"Step 2.6: Initializing components...\");\n      // Initialize components\n      this.assessmentEngine = new AssessmentEngine(this.questionData, this);\n      console.log(\"AssessmentEngine created\");\n\n      this.visualizer = new ProcessNetworkVisualizer(\n        this.processData,\n        this.dependencyData,\n        this,\n      );\n      console.log(\"ProcessNetworkVisualizer created\");\n\n      this.recommendationEngine = new RecommendationEngine(\n        this.processData,\n        this.dependencyData,\n        this,\n      );\n      console.log(\"RecommendationEngine created\");\n\n      this.exportManager = new ExportManager(this);\n      console.log(\"ExportManager created\");\n\n      console.log(\"Step 2.7: All components initialized successfully\");\n    } catch (error) {\n      console.error(\"Error loading data:\", error);\n      throw error;\n    }\n  }\n\n  setupEventListeners() {\n    try {\n      // Navigation\n      const brandLink = document.getElementById(\"brand-link\");\n      if (brandLink) {\n        brandLink.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          this.showView(\"welcome\");\n        });\n      }\n\n      const navWelcome = document.getElementById(\"nav-welcome\");\n      if (navWelcome) {\n        navWelcome.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          this.showView(\"welcome\");\n        });\n      }\n\n      const navAssessment = document.getElementById(\"nav-assessment\");\n      if (navAssessment) {\n        navAssessment.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          this.showView(\"assessment\");\n        });\n      }\n\n      const navVisualization = document.getElementById(\"nav-visualization\");\n      if (navVisualization) {\n        navVisualization.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          this.showView(\"visualization\");\n        });\n      }\n\n      const navRecommendations = document.getElementById(\"nav-recommendations\");\n      if (navRecommendations) {\n        navRecommendations.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          this.showView(\"recommendations\");\n        });\n      }\n\n      const navExport = document.getElementById(\"nav-export\");\n      if (navExport) {\n        navExport.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          this.showView(\"export\");\n        });\n      }\n\n      // Start assessment button\n      const startAssessmentBtn = document.getElementById(\n        \"start-assessment-btn\",\n      );\n      if (startAssessmentBtn) {\n        startAssessmentBtn.addEventListener(\"click\", () => {\n          this.showView(\"assessment\");\n        });\n      }\n    } catch (error) {\n      console.error(\"Error setting up event listeners:\", error);\n    }\n\n    // Keyboard navigation\n    document.addEventListener(\"keydown\", (e) => {\n      if (e.ctrlKey || e.metaKey) {\n        switch (e.key) {\n          case \"1\":\n            e.preventDefault();\n            this.showView(\"welcome\");\n            break;\n          case \"2\":\n            e.preventDefault();\n            this.showView(\"assessment\");\n            break;\n          case \"3\":\n            e.preventDefault();\n            this.showView(\"visualization\");\n            break;\n          case \"4\":\n            e.preventDefault();\n            this.showView(\"recommendations\");\n            break;\n          case \"5\":\n            e.preventDefault();\n            this.showView(\"export\");\n            break;\n        }\n      }\n    });\n  }\n\n  showView(viewName) {\n    console.log(`=== showView called with: ${viewName} ===`);\n    try {\n      console.log(`Step 1: Hiding all views...`);\n      // Hide all views\n      const allViews = document.querySelectorAll(\".view-container\");\n      console.log(`Found ${allViews.length} view containers`);\n      allViews.forEach((view) => {\n        view.style.display = \"none\";\n      });\n\n      console.log(`Step 2: Updating navigation...`);\n      // Update navigation\n      const allNavLinks = document.querySelectorAll(\".nav-link\");\n      console.log(`Found ${allNavLinks.length} nav links`);\n      allNavLinks.forEach((link) => {\n        link.classList.remove(\"active\");\n      });\n\n      console.log(`Step 3: Showing target view: ${viewName}-view`);\n      // Show selected view\n      const targetView = document.getElementById(`${viewName}-view`);\n      console.log(`Target view element:`, targetView);\n\n      if (targetView) {\n        targetView.style.display = \"block\";\n        console.log(`Step 3a: Target view displayed`);\n\n        // Activate corresponding nav link\n        const navLink = document.getElementById(`nav-${viewName}`);\n        console.log(`Nav link element:`, navLink);\n        if (navLink) {\n          navLink.classList.add(\"active\");\n          console.log(`Step 3b: Nav link activated`);\n        }\n\n        this.currentView = viewName;\n        console.log(`Step 3c: Current view set to ${viewName}`);\n\n        console.log(`Step 4: Initializing view-specific content...`);\n        // Initialize view-specific content\n        switch (viewName) {\n          case \"assessment\":\n            this.renderAssessmentView();\n            break;\n          case \"visualization\":\n            this.renderVisualizationView();\n            break;\n          case \"recommendations\":\n            this.renderRecommendationsView();\n            break;\n          case \"export\":\n            this.renderExportView();\n            break;\n        }\n        console.log(`Step 4a: View-specific content initialized`);\n\n        console.log(`Step 5: Updating progress indicator...`);\n        // Update progress indicator\n        this.updateProgressIndicator();\n        console.log(`Step 5a: Progress indicator updated`);\n\n        // Scroll to top\n        window.scrollTo(0, 0);\n        console.log(`Step 6: Scrolled to top`);\n\n        console.log(`=== View ${viewName} shown successfully ===`);\n      } else {\n        console.error(`View ${viewName} not found`);\n        console.error(\n          `Available views:`,\n          Array.from(document.querySelectorAll('[id$=\"-view\"]')).map(\n            (el) => el.id,\n          ),\n        );\n      }\n    } catch (error) {\n      console.error(`Error showing view ${viewName}:`, error);\n      console.error(`Error stack:`, error.stack);\n    }\n  }\n\n  renderWelcomeView() {\n    console.log(\"Rendering welcome view...\");\n    try {\n      // Welcome view is static HTML, just ensure it's visible\n      this.showView(\"welcome\");\n      console.log(\"Welcome view rendered successfully\");\n    } catch (error) {\n      console.error(\"Error rendering welcome view:\", error);\n      // Fallback: manually show welcome view\n      const welcomeView = document.getElementById(\"welcome-view\");\n      if (welcomeView) {\n        welcomeView.style.display = \"block\";\n      }\n    }\n  }\n\n  renderAssessmentView() {\n    if (this.assessmentEngine) {\n      this.assessmentEngine.render();\n      this.showProgressIndicator();\n    }\n  }\n\n  renderVisualizationView() {\n    if (this.visualizer) {\n      // Small delay to ensure container is visible before rendering\n      setTimeout(() => {\n        this.visualizer.render();\n      }, 100);\n    }\n  }\n\n  renderRecommendationsView() {\n    if (this.recommendationEngine) {\n      this.recommendationEngine.render();\n    }\n  }\n\n  renderExportView() {\n    if (this.exportManager) {\n      this.exportManager.render();\n    }\n  }\n\n  updateProgressIndicator() {\n    const progressContainer = document.getElementById(\"progress-container\");\n    const progressBar = document.getElementById(\"overall-progress\");\n    const progressText = document.getElementById(\"progress-text\");\n\n    if (this.currentView === \"welcome\") {\n      progressContainer.style.display = \"none\";\n      return;\n    }\n\n    // Calculate overall progress\n    let progress = 0;\n    switch (this.currentView) {\n      case \"assessment\":\n        progress = this.getAssessmentProgress();\n        break;\n      case \"visualization\":\n        progress = this.hasCompletedAssessment() ? 75 : 25;\n        break;\n      case \"recommendations\":\n        progress = this.hasCompletedAssessment() ? 90 : 50;\n        break;\n      case \"export\":\n        progress = 100;\n        break;\n    }\n\n    progressContainer.style.display = \"block\";\n    progressBar.style.width = `${progress}%`;\n    progressText.textContent = `${Math.round(progress)}%`;\n  }\n\n  showProgressIndicator() {\n    document.getElementById(\"progress-container\").style.display = \"block\";\n  }\n\n  hideProgressIndicator() {\n    document.getElementById(\"progress-container\").style.display = \"none\";\n  }\n\n  getAssessmentProgress() {\n    if (!this.assessmentEngine) return 0;\n\n    const totalQuestions = this.getTotalQuestions();\n    const answeredQuestions = Object.keys(this.assessmentResponses).length;\n\n    return totalQuestions > 0\n      ? Math.min((answeredQuestions / totalQuestions) * 60, 60)\n      : 0;\n  }\n\n  getTotalQuestions() {\n    if (!this.questionData.assessmentCategories) return 0;\n\n    return this.questionData.assessmentCategories.reduce((total, category) => {\n      return total + (category.questions ? category.questions.length : 0);\n    }, 0);\n  }\n\n  hasCompletedAssessment() {\n    const totalQuestions = this.getTotalQuestions();\n    const answeredQuestions = Object.keys(this.assessmentResponses).length;\n    return answeredQuestions >= totalQuestions && totalQuestions > 0;\n  }\n\n  updateAssessmentResponse(questionId, response) {\n    this.assessmentResponses[questionId] = response;\n    this.calculateScores();\n    this.updateProgressIndicator();\n\n    // Auto-save to localStorage\n    this.saveAssessmentState();\n  }\n\n  calculateScores() {\n    if (!this.questionData.assessmentCategories) return;\n\n    const dimensionScores = {\n      complexity: [],\n      safety: [],\n      scale: [],\n      maturity: [],\n    };\n\n    // Calculate dimension scores based on responses\n    this.questionData.assessmentCategories.forEach((category) => {\n      category.questions.forEach((question) => {\n        const response = this.assessmentResponses[question.id];\n        if (response && response.score !== undefined) {\n          const dimension = question.dimension;\n          if (dimensionScores[dimension]) {\n            dimensionScores[dimension].push({\n              score: response.score,\n              weight: question.weight || 1,\n            });\n          }\n        }\n      });\n    });\n\n    // Calculate weighted averages for each dimension\n    Object.keys(dimensionScores).forEach((dimension) => {\n      const scores = dimensionScores[dimension];\n      if (scores.length > 0) {\n        const weightedSum = scores.reduce(\n          (sum, item) => sum + item.score * item.weight,\n          0,\n        );\n        const totalWeight = scores.reduce((sum, item) => sum + item.weight, 0);\n        this.assessmentScores[dimension] =\n          totalWeight > 0 ? weightedSum / totalWeight : 0;\n      }\n    });\n\n    // Calculate overall score (weighted average of dimensions)\n    const dimensionWeights = {\n      complexity: 0.3,\n      safety: 0.25,\n      scale: 0.25,\n      maturity: 0.2,\n    };\n\n    let overallScore = 0;\n    let totalWeight = 0;\n\n    Object.keys(dimensionWeights).forEach((dimension) => {\n      if (this.assessmentScores[dimension] > 0) {\n        overallScore +=\n          this.assessmentScores[dimension] * dimensionWeights[dimension];\n        totalWeight += dimensionWeights[dimension];\n      }\n    });\n\n    this.assessmentScores.overall =\n      totalWeight > 0 ? overallScore / totalWeight : 0;\n\n    // Generate recommendations if assessment is complete\n    if (this.hasCompletedAssessment() && this.recommendationEngine) {\n      this.recommendations = this.recommendationEngine.generateRecommendations(\n        this.assessmentScores,\n      );\n    }\n  }\n\n  saveAssessmentState() {\n    const state = {\n      responses: this.assessmentResponses,\n      scores: this.assessmentScores,\n      recommendations: this.recommendations,\n      timestamp: Date.now(),\n    };\n    localStorage.setItem(\"se-tailoring-assessment\", JSON.stringify(state));\n  }\n\n  loadAssessmentState() {\n    try {\n      const saved = localStorage.getItem(\"se-tailoring-assessment\");\n      if (saved) {\n        const state = JSON.parse(saved);\n\n        // Only load if saved within last 24 hours\n        const dayOld = 24 * 60 * 60 * 1000;\n        if (Date.now() - state.timestamp < dayOld) {\n          this.assessmentResponses = state.responses || {};\n          this.assessmentScores = state.scores || {};\n          this.recommendations = state.recommendations || {};\n          return true;\n        }\n      }\n    } catch (error) {\n      // Failed to load saved assessment state\n    }\n    return false;\n  }\n\n  clearAssessmentState() {\n    this.assessmentResponses = {};\n    this.assessmentScores = {\n      complexity: 0,\n      safety: 0,\n      scale: 0,\n      maturity: 0,\n      overall: 0,\n    };\n    this.recommendations = {};\n    localStorage.removeItem(\"se-tailoring-assessment\");\n    this.updateProgressIndicator();\n  }\n\n  showLoading() {\n    document.getElementById(\"loading-overlay\").style.display = \"flex\";\n  }\n\n  hideLoading() {\n    console.log(\"=== Hiding loading overlay ===\");\n    const loadingOverlay = document.getElementById(\"loading-overlay\");\n    console.log(\"Loading overlay element:\", loadingOverlay);\n\n    if (loadingOverlay) {\n      console.log(\"Current display style:\", loadingOverlay.style.display);\n      console.log(\n        \"Current computed style:\",\n        window.getComputedStyle(loadingOverlay).display,\n      );\n\n      // Try multiple approaches to hide it\n      loadingOverlay.style.display = \"none\";\n      loadingOverlay.style.visibility = \"hidden\";\n      loadingOverlay.style.opacity = \"0\";\n      loadingOverlay.style.pointerEvents = \"none\";\n\n      // Also add a class to ensure it stays hidden\n      loadingOverlay.classList.add(\"hidden\");\n\n      console.log(\"Loading overlay hidden with multiple methods\");\n      console.log(\"New display style:\", loadingOverlay.style.display);\n      console.log(\n        \"New computed style:\",\n        window.getComputedStyle(loadingOverlay).display,\n      );\n    } else {\n      console.warn(\"Loading overlay element not found\");\n      console.log(\n        \"Available elements with loading in ID:\",\n        Array.from(document.querySelectorAll('[id*=\"loading\"]')).map(\n          (el) => el.id,\n        ),\n      );\n    }\n    console.log(\"=== Loading overlay hide attempt complete ===\");\n  }\n\n  showError(message) {\n    console.error(\"Showing error:\", message);\n\n    // Create and show error alert\n    const alertHtml = `\n            <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n                <i class=\"bi bi-exclamation-triangle-fill me-2\"></i>\n                <strong>Error:</strong> ${message}\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n            </div>\n        `;\n\n    // Insert at top of main content\n    const mainContent = document.getElementById(\"main-content\");\n    if (mainContent) {\n      mainContent.insertAdjacentHTML(\"afterbegin\", alertHtml);\n\n      // Auto-remove after 10 seconds\n      setTimeout(() => {\n        const alert = mainContent.querySelector(\".alert-danger\");\n        if (alert) {\n          try {\n            const bsAlert = new bootstrap.Alert(alert);\n            bsAlert.close();\n          } catch (e) {\n            // Fallback: just remove the element\n            alert.remove();\n          }\n        }\n      }, 10000);\n    } else {\n      console.error(\"Main content element not found for error display\");\n    }\n  }\n\n  showSuccess(message) {\n    // Create and show success alert\n    const alertHtml = `\n            <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n                <i class=\"bi bi-check-circle-fill me-2\"></i>\n                ${message}\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\"></button>\n            </div>\n        `;\n\n    // Insert at top of main content\n    const mainContent = document.getElementById(\"main-content\");\n    mainContent.insertAdjacentHTML(\"afterbegin\", alertHtml);\n\n    // Auto-remove after 5 seconds\n    setTimeout(() => {\n      const alert = mainContent.querySelector(\".alert-success\");\n      if (alert) {\n        const bsAlert = new bootstrap.Alert(alert);\n        bsAlert.close();\n      }\n    }, 5000);\n  }\n\n  // Utility methods\n  getProcessById(processId) {\n    return this.processData.processes?.find((p) => p.id === processId);\n  }\n\n  getDependenciesForProcess(processId) {\n    return (\n      this.dependencyData.dependencies?.filter((d) => d.source === processId) ||\n      []\n    );\n  }\n\n  getProcessesDependingOn(processId) {\n    return (\n      this.dependencyData.dependencies?.filter((d) => d.target === processId) ||\n      []\n    );\n  }\n\n  showProcessDetails(processId) {\n    const modal = document.getElementById('process-detail-modal');\n    const title = document.getElementById('process-modal-title');\n    const body = document.getElementById('process-modal-body');\n\n    if (!modal || !title || !body) {\n      console.error('Modal elements not found - check HTML structure');\n      return;\n    }\n\n    // Ensure modal is properly initialized in the DOM\n    if (!modal.classList.contains('modal')) {\n      console.error('Modal element is not properly initialized');\n      return;\n    }\n\n    const process = this.getProcessById(processId);\n    const recommendation = this.recommendations[processId];\n\n    if (!process) {\n      return;\n    }\n\n    const recommendedLevel = recommendation?.recommendedLevel || 'basic';\n    \n    title.textContent = process.name;\n\n    body.innerHTML = `\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <h6>Current Recommendation</h6>\n                    <span class=\"level-badge level-${recommendedLevel}\">${recommendedLevel}</span>\n                    <p class=\"mt-2 text-muted\">${process.description || 'No description available'}</p>\n                </div>\n                <div class=\"col-md-6\">\n                    <h6>Process Metrics</h6>\n                    <ul class=\"list-unstyled\">\n                        <li><strong>Effort:</strong> ${recommendation?.effort || 1}/5</li>\n                        <li><strong>Complexity:</strong> ${recommendation?.complexity || 1}/5</li>\n                        <li><strong>Confidence:</strong> ${Math.round((recommendation?.confidence || 0.8) * 100)}%</li>\n                        <li><strong>Category:</strong> ${this.processData.processCategories?.[process.category] || process.category}</li>\n                    </ul>\n                </div>\n            </div>\n\n            ${recommendation?.rationale ? `\n                <div class=\"mt-3\">\n                    <h6>Rationale</h6>\n                    <ul class=\"list-unstyled\">\n                        ${recommendation.rationale.map(reason => `<li class=\"text-muted\">• ${reason}</li>`).join('')}\n                    </ul>\n                </div>\n            ` : ''}\n\n            ${process?.tailoringLevels ? `\n                <div class=\"mt-3\">\n                    <h6>Available Tailoring Levels</h6>\n                    <div class=\"accordion\" id=\"levels-accordion\">\n                        ${Object.keys(process.tailoringLevels).map((level, index) => `\n                            <div class=\"accordion-item\">\n                                <h2 class=\"accordion-header\">\n                                    <button class=\"accordion-button ${level !== recommendedLevel ? 'collapsed' : ''}\" \n                                            type=\"button\" data-bs-toggle=\"collapse\" \n                                            data-bs-target=\"#level-${level}\">\n                                        <span class=\"level-badge level-${level} me-2\">${level}</span>\n                                        ${process.tailoringLevels[level].description}\n                                    </button>\n                                </h2>\n                                <div id=\"level-${level}\" \n                                     class=\"accordion-collapse collapse ${level === recommendedLevel ? 'show' : ''}\"\n                                     data-bs-parent=\"#levels-accordion\">\n                                    <div class=\"accordion-body\">\n                                        <p><strong>Activities:</strong></p>\n                                        <ul>\n                                            ${process.tailoringLevels[level].activities?.map(activity => `<li>${activity}</li>`).join('') || '<li>No activities specified</li>'}\n                                        </ul>\n                                        <p><strong>Key Outputs:</strong></p>\n                                        <ul>\n                                            ${process.tailoringLevels[level].outputs?.map(output => `<li>${output}</li>`).join('') || '<li>No outputs specified</li>'}\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        `).join('')}\n                    </div>\n                </div>\n            ` : ''}\n        `;\n\n    // Ensure Bootstrap is available\n    if (typeof bootstrap === 'undefined') {\n      console.error('Bootstrap not available');\n      return;\n    }\n\n    try {\n      const bsModal = new bootstrap.Modal(modal);\n      bsModal.show();\n      console.log('Modal shown successfully for process:', processId);\n      \n      // Debug: Check modal state after showing\n      setTimeout(() => {\n        console.log('=== MODAL DEBUG INFO ===');\n        console.log('Modal display:', modal.style.display);\n        console.log('Modal classes:', modal.className);\n        console.log('Modal visibility:', modal.offsetParent !== null);\n        \n        // Check if backdrop exists\n        const backdrops = document.querySelectorAll('.modal-backdrop');\n        console.log('Backdrops found:', backdrops.length);\n        \n        // Check z-index issues\n        console.log('Modal z-index:', modal.style.zIndex);\n        console.log('Modal computed z-index:', window.getComputedStyle(modal).zIndex);\n        \n        // Check if modal is actually visible\n        const rect = modal.getBoundingClientRect();\n        console.log('Modal position:', rect.top, rect.left, rect.width, rect.height);\n        console.log('Modal in viewport:', rect.top >= 0 && rect.left >= 0 && \n          rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && \n          rect.right <= (window.innerWidth || document.documentElement.clientWidth));\n        \n        // Check if any parent elements are hidden\n        let current = modal;\n        const hiddenParents = [];\n        while (current.parentElement) {\n          current = current.parentElement;\n          const style = window.getComputedStyle(current);\n          if (style.display === 'none' || style.visibility === 'hidden' || style.opacity === '0') {\n            hiddenParents.push(current);\n          }\n        }\n        console.log('Hidden parents:', hiddenParents.length, hiddenParents);\n        \n        // Force modal to be visible if hidden - check all possible hiding conditions\n        const computedStyle = window.getComputedStyle(modal);\n        if (modal.offsetParent === null || \n            rect.width === 0 || \n            rect.height === 0 ||\n            computedStyle.display === 'none' ||\n            computedStyle.visibility === 'hidden' ||\n            computedStyle.opacity === '0') {\n          \n          console.log('Modal appears hidden - forcing visibility');\n          \n          // Remove from DOM and re-append to ensure proper positioning\n          const parent = modal.parentElement;\n          parent.removeChild(modal);\n          document.body.appendChild(modal);\n          \n          // Force visible styles\n          modal.style.display = 'block';\n          modal.style.visibility = 'visible';\n          modal.style.opacity = '1';\n          modal.style.zIndex = '1050';\n          modal.style.position = 'fixed';\n          modal.style.top = '50%';\n          modal.style.left = '50%';\n          modal.style.transform = 'translate(-50%, -50%)';\n          \n          // Ensure backdrop is properly positioned\n          const backdrops = document.querySelectorAll('.modal-backdrop');\n          backdrops.forEach(backdrop => {\n            backdrop.style.zIndex = '1040';\n          });\n        }\n        \n        console.log('=== END DEBUG ===');\n      }, 100);\n      \n    } catch (error) {\n      console.error('Failed to show modal:', error);\n      // Fallback: manually show the modal if Bootstrap fails\n      modal.style.display = 'block';\n      modal.classList.add('show');\n      document.body.classList.add('modal-open');\n      \n      // Create backdrop manually\n      const backdrop = document.createElement('div');\n      backdrop.className = 'modal-backdrop fade show';\n      backdrop.style.zIndex = '1040';\n      document.body.appendChild(backdrop);\n      \n      // Ensure modal has proper z-index\n      modal.style.zIndex = '1050';\n    }\n  }\n\n  // Public API for components\n  getAssessmentData() {\n    return {\n      responses: this.assessmentResponses,\n      scores: this.assessmentScores,\n      recommendations: this.recommendations,\n    };\n  }\n\n  getProcessData() {\n    return this.processData;\n  }\n\n  getDependencyData() {\n    return this.dependencyData;\n  }\n}\n\n// Initialize application when DOM is loaded\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.log(\"DOM loaded, initializing app...\");\n\n  // Failsafe: Hide loading screen after 10 seconds regardless of what happens\n  const failsafeTimeout = setTimeout(() => {\n    console.warn(\"Failsafe timeout reached - hiding loading screen\");\n    forceHideLoadingOverlay();\n  }, 10000);\n\n  // Wait a bit to ensure all scripts are loaded\n  setTimeout(() => {\n    try {\n      // Check if all required components are available\n      const requiredComponents = [\n        \"AssessmentEngine\",\n        \"ProcessNetworkVisualizer\",\n        \"RecommendationEngine\",\n        \"ExportManager\",\n      ];\n\n      const missingComponents = requiredComponents.filter(\n        (comp) => typeof window[comp] === \"undefined\",\n      );\n\n      if (missingComponents.length > 0) {\n        console.error(\"Missing components:\", missingComponents);\n        throw new Error(\n          `Required components not loaded: ${missingComponents.join(\", \")}`,\n        );\n      }\n\n      console.log(\"All components available, initializing app...\");\n      window.seApp = new SEFrameworkApp();\n\n      // Clear failsafe timeout if app initializes successfully\n      clearTimeout(failsafeTimeout);\n\n      // Additional failsafe: Force hide loading overlay after successful initialization\n      setTimeout(() => {\n        console.log(\"Additional failsafe: Forcing loading overlay to hide\");\n        forceHideLoadingOverlay();\n      }, 1000);\n    } catch (error) {\n      console.error(\"Failed to initialize app:\", error);\n\n      // Clear failsafe timeout since we're handling the error\n      clearTimeout(failsafeTimeout);\n\n      // Show error to user\n      const loadingOverlay = document.getElementById(\"loading-overlay\");\n      if (loadingOverlay) {\n        loadingOverlay.innerHTML = `\n                    <div class=\"text-center text-white\">\n                        <div class=\"spinner-border mb-3\" role=\"status\">\n                            <span class=\"visually-hidden\">Loading...</span>\n                        </div>\n                        <p class=\"text-danger\">Failed to initialize application</p>\n                        <p class=\"small\">${error.message}</p>\n                        <button class=\"btn btn-outline-light\" onclick=\"window.location.reload()\">Retry</button>\n                    </div>\n                `;\n      }\n    }\n  }, 100); // Small delay to ensure scripts are loaded\n});\n\n// Aggressive function to hide loading overlay\nfunction forceHideLoadingOverlay() {\n  console.log(\"=== Force hiding loading overlay ===\");\n\n  // Try multiple selectors\n  const selectors = [\n    \"#loading-overlay\",\n    \".loading-overlay\",\n    '[id*=\"loading\"]',\n    \".position-fixed.top-0.start-0.w-100.h-100\",\n  ];\n\n  selectors.forEach((selector) => {\n    try {\n      const elements = document.querySelectorAll(selector);\n      elements.forEach((element) => {\n        console.log(`Hiding element with selector: ${selector}`);\n        element.style.display = \"none\";\n        element.style.visibility = \"hidden\";\n        element.style.opacity = \"0\";\n        element.style.pointerEvents = \"none\";\n        element.classList.add(\"hidden\");\n        element.setAttribute(\"hidden\", \"\");\n      });\n    } catch (error) {\n      console.warn(`Error hiding elements with selector ${selector}:`, error);\n    }\n  });\n\n  // Also try to remove the loading overlay completely\n  try {\n    const loadingOverlay = document.getElementById(\"loading-overlay\");\n    if (loadingOverlay && loadingOverlay.parentNode) {\n      console.log(\"Removing loading overlay from DOM\");\n      loadingOverlay.parentNode.removeChild(loadingOverlay);\n    }\n  } catch (error) {\n    console.warn(\"Error removing loading overlay from DOM:\", error);\n  }\n\n  console.log(\"=== Force hide complete ===\");\n}\n\n// Handle browser back/forward buttons\nwindow.addEventListener(\"popstate\", (event) => {\n  if (window.seApp && event.state) {\n    window.seApp.showView(event.state.view);\n  }\n});\n\n// Export for global access\nwindow.SEFrameworkApp = SEFrameworkApp;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/app.js\n\n}");

/***/ }),

/***/ "./js/components/assessment.js":
/*!*************************************!*\
  !*** ./js/components/assessment.js ***!
  \*************************************/
/***/ (() => {

eval("{/**\n * Assessment Engine Component\n * Manages the assessment interface, question rendering, and response collection\n */\n\nclass AssessmentEngine {\n  constructor(questionData, app) {\n    this.questionData = questionData;\n    this.app = app;\n    this.currentCategoryIndex = 0;\n    this.currentQuestionIndex = 0;\n    this.assessmentContainer = null;\n  }\n\n  render() {\n    this.assessmentContainer = document.getElementById('assessment-content');\n    if (!this.assessmentContainer) return;\n\n    this.renderAssessmentInterface();\n  }\n\n  renderAssessmentInterface() {\n    if (!this.questionData.assessmentCategories || this.questionData.assessmentCategories.length === 0) {\n      this.renderNoQuestions();\n      return;\n    }\n\n    // Clear container once at the beginning to prevent duplicate elements\n    this.assessmentContainer.innerHTML = '';\n    \n    this.renderProgressBar();\n    this.renderCurrentQuestion();\n    this.renderNavigation();\n  }\n\n  renderProgressBar() {\n    const progressContainer = document.createElement('div');\n    progressContainer.className = 'assessment-progress mb-4';\n\n    const totalQuestions = this.getTotalQuestions();\n    const answeredQuestions = Object.keys(this.app.assessmentResponses).length;\n    const progressPercentage = totalQuestions > 0 ? (answeredQuestions / totalQuestions) * 100 : 0;\n\n    progressContainer.innerHTML = `\n            <div class=\"d-flex justify-content-between align-items-center mb-2\">\n                <h6 class=\"mb-0\">Assessment Progress</h6>\n                <small class=\"text-muted\">${answeredQuestions}/${totalQuestions} questions answered</small>\n            </div>\n            <div class=\"progress\" style=\"height: 8px;\">\n                <div class=\"progress-bar\" role=\"progressbar\" \n                     style=\"width: ${progressPercentage}%\" \n                     aria-valuenow=\"${progressPercentage}\" \n                     aria-valuemin=\"0\" \n                     aria-valuemax=\"100\">\n                </div>\n            </div>\n            <div class=\"mt-2\">\n                <small class=\"text-muted\">\n                    ${this.getCurrentCategory()?.name || 'No category'} \n                    (${this.currentQuestionIndex + 1}/${this.getCurrentCategory()?.questions?.length || 0})\n                </small>\n            </div>\n        `;\n\n    this.assessmentContainer.appendChild(progressContainer);\n  }\n\n  renderCurrentQuestion() {\n    const question = this.getCurrentQuestion();\n    if (!question) {\n      this.renderAssessmentComplete();\n      return;\n    }\n\n    const questionCard = document.createElement('div');\n    questionCard.className = 'card question-card';\n    questionCard.innerHTML = `\n            <div class=\"card-header\">\n                <h5 class=\"card-title mb-0\">\n                    <span class=\"badge bg-primary me-2\">Q${this.currentQuestionIndex + 1}</span>\n                    ${question.text}\n                </h5>\n                <small class=\"text-muted\">${this.getDimensionBadge(question.dimension)}</small>\n            </div>\n            <div class=\"card-body\">\n                ${this.renderResponseOptions(question)}\n                ${question.description ? `<p class=\"text-muted mt-3\">${question.description}</p>` : ''}\n            </div>\n        `;\n\n    this.assessmentContainer.appendChild(questionCard);\n  }\n\n  renderResponseOptions(question) {\n    const currentResponse = this.app.assessmentResponses[question.id];\n    const currentValue = currentResponse ? currentResponse.score : null;\n\n    return `\n            <div class=\"response-options\">\n                <div class=\"btn-group-vertical w-100\" role=\"group\">\n                    ${question.options.map(option => `\n                        <button type=\"button\" \n                                class=\"btn btn-outline-primary ${currentValue === option.value ? 'active' : ''}\"\n                                data-score=\"${option.value}\"\n                                onclick=\"window.seApp.assessmentEngine.selectResponse(${option.value}, '${option.label}')\">\n                            ${option.label}\n                        </button>\n                    `).join('')}\n                </div>\n            </div>\n        `;\n  }\n\n  renderNavigation() {\n    // Clear any existing navigation elements first to prevent duplicates\n    const existingNav = this.assessmentContainer.querySelector('.assessment-navigation');\n    if (existingNav) {\n      existingNav.remove();\n    }\n    \n    const navContainer = document.createElement('div');\n    navContainer.className = 'assessment-navigation mt-4';\n    \n    // Check if current question has been answered\n    const currentQuestion = this.getCurrentQuestion();\n    const hasAnswered = currentQuestion && this.app.assessmentResponses[currentQuestion.id];\n    \n    navContainer.innerHTML = `\n            <div class=\"d-flex justify-content-between\">\n                <button class=\"btn btn-outline-secondary\" \n                        onclick=\"window.seApp.assessmentEngine.previousQuestion()\"\n                        ${this.currentQuestionIndex === 0 && this.currentCategoryIndex === 0 ? 'disabled' : ''}>\n                    <i class=\"bi bi-arrow-left\"></i> Previous\n                </button>\n                <button class=\"btn btn-primary\" \n                        onclick=\"window.seApp.assessmentEngine.nextQuestion()\"\n                        ${!hasAnswered ? 'disabled' : ''}>\n                    ${this.isLastQuestion() ? 'Complete Assessment' : 'Next Question'} \n                    <i class=\"bi bi-arrow-right\"></i>\n                </button>\n            </div>\n        `;\n\n    this.assessmentContainer.appendChild(navContainer);\n  }\n\n  renderNoQuestions() {\n    this.assessmentContainer.innerHTML = `\n            <div class=\"text-center py-5\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <i class=\"bi bi-exclamation-triangle display-1 text-warning mb-3\"></i>\n                        <h3>No Assessment Questions</h3>\n                        <p class=\"text-muted\">\n                            The assessment questions could not be loaded. Please check the data files.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  renderAssessmentComplete() {\n    // Generate recommendations automatically when assessment is complete\n    this.app.calculateScores();\n    \n    this.assessmentContainer.innerHTML = `\n            <div class=\"text-center py-5\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <i class=\"bi bi-check-circle display-1 text-success mb-3\"></i>\n                        <h3>Assessment Complete!</h3>\n                        <p class=\"text-muted mb-4\">\n                            You have completed all assessment questions. Your process tailoring recommendations are ready.\n                        </p>\n                        <div class=\"mb-4\">\n                            <h5>Assessment Scores</h5>\n                            <div class=\"row\">\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Overall</h6>\n                                            <h3 class=\"text-primary\">${this.app.assessmentScores.overall?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Complexity</h6>\n                                            <h3 class=\"text-info\">${this.app.assessmentScores.complexity?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Safety</h6>\n                                            <h3 class=\"text-warning\">${this.app.assessmentScores.safety?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Scale</h6>\n                                            <h3 class=\"text-success\">${this.app.assessmentScores.scale?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <button class=\"btn btn-primary btn-lg\" onclick=\"window.seApp.showView('recommendations')\">\n                            <i class=\"bi bi-graph-up\"></i>\n                            View Recommendations\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  selectResponse(score, label) {\n    const question = this.getCurrentQuestion();\n    if (!question) return;\n\n    this.app.updateAssessmentResponse(question.id, {\n      score: score,\n      label: label,\n      dimension: question.dimension,\n    });\n\n    // Update UI to show selected response\n    this.updateResponseButtons(score);\n  }\n\n  updateResponseButtons(selectedScore) {\n    const buttons = this.assessmentContainer.querySelectorAll('.response-options button');\n    buttons.forEach(button => {\n      const score = parseInt(button.getAttribute('data-score'));\n      if (score === selectedScore) {\n        button.classList.add('active');\n      } else {\n        button.classList.remove('active');\n      }\n    });\n    \n    // Re-render navigation to enable Next button after response selection\n    this.renderNavigation();\n  }\n\n  nextQuestion() {\n    const currentCategory = this.getCurrentCategory();\n    if (!currentCategory) return;\n\n    // Move to next question in current category\n    this.currentQuestionIndex++;\n\n    // If we've reached the end of current category, move to next category\n    if (this.currentQuestionIndex >= currentCategory.questions.length) {\n      this.currentCategoryIndex++;\n      this.currentQuestionIndex = 0;\n\n      // If we've reached the end of all categories, show completion\n      if (this.currentCategoryIndex >= this.questionData.assessmentCategories.length) {\n        this.renderAssessmentComplete();\n        return;\n      }\n    }\n\n    this.renderAssessmentInterface();\n  }\n\n  previousQuestion() {\n    // Move to previous question\n    this.currentQuestionIndex--;\n\n    // If we've gone before the first question in current category\n    if (this.currentQuestionIndex < 0) {\n      this.currentCategoryIndex--;\n\n      // If we've gone before the first category, stay at first question\n      if (this.currentCategoryIndex < 0) {\n        this.currentCategoryIndex = 0;\n        this.currentQuestionIndex = 0;\n      } else {\n        // Move to last question of previous category\n        const prevCategory = this.questionData.assessmentCategories[this.currentCategoryIndex];\n        this.currentQuestionIndex = prevCategory.questions.length - 1;\n      }\n    }\n\n    this.renderAssessmentInterface();\n  }\n\n  getCurrentCategory() {\n    return this.questionData.assessmentCategories[this.currentCategoryIndex];\n  }\n\n  getCurrentQuestion() {\n    const category = this.getCurrentCategory();\n    return category?.questions?.[this.currentQuestionIndex];\n  }\n\n  getTotalQuestions() {\n    if (!this.questionData.assessmentCategories) return 0;\n    return this.questionData.assessmentCategories.reduce((total, category) => {\n      return total + (category.questions ? category.questions.length : 0);\n    }, 0);\n  }\n\n  isLastQuestion() {\n    const lastCategoryIndex = this.questionData.assessmentCategories.length - 1;\n    const lastCategory = this.questionData.assessmentCategories[lastCategoryIndex];\n    return this.currentCategoryIndex === lastCategoryIndex &&\n               this.currentQuestionIndex === lastCategory.questions.length - 1;\n  }\n\n  getDimensionBadge(dimension) {\n    const badgeClasses = {\n      complexity: 'bg-info',\n      safety: 'bg-warning',\n      scale: 'bg-success',\n      maturity: 'bg-secondary',\n    };\n\n    const dimensionLabels = {\n      complexity: 'Technical Complexity',\n      safety: 'Safety Criticality',\n      scale: 'Project Scale',\n      maturity: 'Organizational Maturity',\n    };\n\n    return `<span class=\"badge ${badgeClasses[dimension] || 'bg-secondary'}\">${dimensionLabels[dimension] || dimension}</span>`;\n  }\n\n  resetAssessment() {\n    this.currentCategoryIndex = 0;\n    this.currentQuestionIndex = 0;\n    this.renderAssessmentInterface();\n  }\n}\n\n// Export for global access\nwindow.AssessmentEngine = AssessmentEngine;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/components/assessment.js\n\n}");

/***/ }),

/***/ "./js/components/export.js":
/*!*********************************!*\
  !*** ./js/components/export.js ***!
  \*********************************/
/***/ (() => {

eval("{/**\n * Export Manager Component\n * Handles PDF reports, JSON configuration, and Excel analytics export\n */\n\nclass ExportManager {\n  constructor(app) {\n    this.app = app;\n  }\n\n  render() {\n    const container = document.getElementById('export-content');\n    if (!container) return;\n\n    const assessmentData = this.app.getAssessmentData();\n    const hasData = assessmentData.recommendations && Object.keys(assessmentData.recommendations).length > 0;\n\n    if (!hasData) {\n      this.renderNoData(container);\n      return;\n    }\n\n    this.renderExportOptions(container, assessmentData);\n  }\n\n  renderNoData(container) {\n    container.innerHTML = `\n            <div class=\"text-center py-5\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <i class=\"bi bi-exclamation-circle display-1 text-warning mb-3\"></i>\n                        <h3>No Data to Export</h3>\n                        <p class=\"text-muted mb-4\">\n                            Complete the assessment first to generate exportable recommendations and reports.\n                        </p>\n                        <button class=\"btn btn-primary\" onclick=\"window.seApp.showView('assessment')\">\n                            <i class=\"bi bi-clipboard-check\"></i>\n                            Start Assessment\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  renderExportOptions(container, assessmentData) {\n    const stats = this.calculateExportStats(assessmentData);\n\n    container.innerHTML = `\n            <div class=\"card shadow-sm mb-4\">\n                <div class=\"card-header bg-gradient-primary text-white\">\n                    <h4 class=\"card-title mb-0\">\n                        <i class=\"bi bi-download\"></i>\n                        Export Reports & Data\n                    </h4>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"alert alert-info\">\n                        <i class=\"bi bi-info-circle me-2\"></i>\n                        <strong>Ready to Export:</strong> Your assessment contains ${stats.totalProcesses} process recommendations \n                        with ${stats.totalQuestions} assessment responses across ${stats.categories} categories.\n                    </div>\n                    \n                    <div class=\"row mb-4\">\n                        <div class=\"col-md-3 text-center\">\n                            <div class=\"stat-card\">\n                                <span class=\"stat-number text-primary\">${stats.totalProcesses}</span>\n                                <span class=\"stat-label\">Process Recommendations</span>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3 text-center\">\n                            <div class=\"stat-card\">\n                                <span class=\"stat-number text-success\">${stats.averageConfidence}%</span>\n                                <span class=\"stat-label\">Average Confidence</span>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3 text-center\">\n                            <div class=\"stat-card\">\n                                <span class=\"stat-number text-warning\">${stats.totalEffort}</span>\n                                <span class=\"stat-label\">Total Effort Score</span>\n                            </div>\n                        </div>\n                        <div class=\"col-md-3 text-center\">\n                            <div class=\"stat-card\">\n                                <span class=\"stat-number text-info\">${stats.dependencies}</span>\n                                <span class=\"stat-label\">Dependencies</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-lg-4 mb-4\">\n                    <div class=\"export-option\" data-export-type=\"pdf\">\n                        <div class=\"export-icon\">\n                            <i class=\"bi bi-file-earmark-pdf-fill\"></i>\n                        </div>\n                        <h5 class=\"export-title\">Professional PDF Report</h5>\n                        <p class=\"export-description\">\n                            Comprehensive report with executive summary, detailed recommendations, \n                            process network visualization, and implementation roadmap.\n                        </p>\n                        <button class=\"btn btn-primary\" id=\"export-pdf-btn\">\n                            <i class=\"bi bi-download\"></i>\n                            Download PDF\n                        </button>\n                    </div>\n                </div>\n                \n                <div class=\"col-lg-4 mb-4\">\n                    <div class=\"export-option\" data-export-type=\"json\">\n                        <div class=\"export-icon\">\n                            <i class=\"bi bi-file-earmark-code-fill\"></i>\n                        </div>\n                        <h5 class=\"export-title\">JSON Configuration</h5>\n                        <p class=\"export-description\">\n                            Machine-readable format containing assessment data, scores, and recommendations \n                            for integration with other tools and systems.\n                        </p>\n                        <button class=\"btn btn-outline-primary\" id=\"export-json-btn\">\n                            <i class=\"bi bi-download\"></i>\n                            Download JSON\n                        </button>\n                    </div>\n                </div>\n                \n                <div class=\"col-lg-4 mb-4\">\n                    <div class=\"export-option\" data-export-type=\"excel\">\n                        <div class=\"export-icon\">\n                            <i class=\"bi bi-file-earmark-spreadsheet-fill\"></i>\n                        </div>\n                        <h5 class=\"export-title\">Excel Analytics</h5>\n                        <p class=\"export-description\">\n                            Spreadsheet format with assessment responses, process recommendations, \n                            effort calculations, and pivot tables for further analysis.\n                        </p>\n                        <button class=\"btn btn-outline-success\" id=\"export-excel-btn\">\n                            <i class=\"bi bi-download\"></i>\n                            Download Excel\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <h6 class=\"card-title mb-0\">\n                        <i class=\"bi bi-gear\"></i>\n                        Export Options\n                    </h6>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"include-assessment-details\" checked>\n                                <label class=\"form-check-label\" for=\"include-assessment-details\">\n                                    Include detailed assessment responses\n                                </label>\n                            </div>\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"include-rationale\" checked>\n                                <label class=\"form-check-label\" for=\"include-rationale\">\n                                    Include recommendation rationale\n                                </label>\n                            </div>\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"include-dependencies\" checked>\n                                <label class=\"form-check-label\" for=\"include-dependencies\">\n                                    Include process dependencies\n                                </label>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"include-visualization\" checked>\n                                <label class=\"form-check-label\" for=\"include-visualization\">\n                                    Include process network visualization\n                                </label>\n                            </div>\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"include-metadata\" checked>\n                                <label class=\"form-check-label\" for=\"include-metadata\">\n                                    Include metadata and timestamps\n                                </label>\n                            </div>\n                            <div class=\"form-check\">\n                                <input class=\"form-check-input\" type=\"checkbox\" id=\"include-implementation-guide\">\n                                <label class=\"form-check-label\" for=\"include-implementation-guide\">\n                                    Include implementation guidance\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"mt-4 text-center\">\n                <small class=\"text-muted\">\n                    <i class=\"bi bi-shield-check\"></i>\n                    All exports are generated locally in your browser. No data is sent to external servers.\n                </small>\n            </div>\n        `;\n\n    this.attachExportEventListeners();\n  }\n\n  calculateExportStats(assessmentData) {\n    const recommendations = assessmentData.recommendations || {};\n    const responses = assessmentData.responses || {};\n\n    const totalProcesses = Object.keys(recommendations).length;\n    const totalQuestions = Object.keys(responses).length;\n    const categories = new Set(Object.values(responses).map(r => r.dimension)).size;\n\n    const confidenceValues = Object.values(recommendations).map(r => r.confidence || 0);\n    const averageConfidence = confidenceValues.length > 0\n      ? Math.round(confidenceValues.reduce((sum, c) => sum + c, 0) / confidenceValues.length * 100)\n      : 0;\n\n    const totalEffort = Object.values(recommendations).reduce((sum, r) => sum + (r.effort || 0), 0);\n\n    const dependencies = Object.values(recommendations).reduce((sum, r) => sum + (r.dependencies?.length || 0), 0);\n\n    return {\n      totalProcesses,\n      totalQuestions,\n      categories,\n      averageConfidence,\n      totalEffort,\n      dependencies,\n    };\n  }\n\n  attachExportEventListeners() {\n    document.getElementById('export-pdf-btn')?.addEventListener('click', () => {\n      this.exportPDF();\n    });\n\n    document.getElementById('export-json-btn')?.addEventListener('click', () => {\n      this.exportJSON();\n    });\n\n    document.getElementById('export-excel-btn')?.addEventListener('click', () => {\n      this.exportExcel();\n    });\n\n    // Export option hover effects\n    document.querySelectorAll('.export-option').forEach(option => {\n      option.addEventListener('click', (e) => {\n        if (!e.target.closest('button')) {\n          const button = option.querySelector('button');\n          if (button) button.click();\n        }\n      });\n    });\n  }\n\n  getExportOptions() {\n    return {\n      includeAssessmentDetails: document.getElementById('include-assessment-details')?.checked ?? true,\n      includeRationale: document.getElementById('include-rationale')?.checked ?? true,\n      includeDependencies: document.getElementById('include-dependencies')?.checked ?? true,\n      includeVisualization: document.getElementById('include-visualization')?.checked ?? true,\n      includeMetadata: document.getElementById('include-metadata')?.checked ?? true,\n      includeImplementationGuide: document.getElementById('include-implementation-guide')?.checked ?? false,\n    };\n  }\n\n  async exportPDF() {\n    try {\n      this.showExportProgress('Generating PDF report...');\n\n      const assessmentData = this.app.getAssessmentData();\n      const options = this.getExportOptions();\n\n      // Initialize jsPDF\n      const { jsPDF } = window.jspdf;\n      const doc = new jsPDF();\n\n      let yPosition = 20;\n      const pageHeight = doc.internal.pageSize.height;\n      const marginBottom = 20;\n\n      // Helper function to add new page if needed\n      const checkNewPage = (neededSpace = 20) => {\n        if (yPosition + neededSpace > pageHeight - marginBottom) {\n          doc.addPage();\n          yPosition = 20;\n        }\n      };\n\n      // Title Page\n      doc.setFontSize(24);\n      doc.setTextColor(13, 110, 253);\n      doc.text('Systems Engineering Process', 20, yPosition);\n      yPosition += 10;\n      doc.text('Tailoring Report', 20, yPosition);\n      yPosition += 20;\n\n      doc.setFontSize(12);\n      doc.setTextColor(0, 0, 0);\n      doc.text(`Generated: ${new Date().toLocaleDateString()}`, 20, yPosition);\n      yPosition += 10;\n      doc.text('Based on ISO/IEC/IEEE 15288:2023', 20, yPosition);\n      yPosition += 30;\n\n      // Executive Summary\n      checkNewPage(40);\n      doc.setFontSize(16);\n      doc.setTextColor(13, 110, 253);\n      doc.text('Executive Summary', 20, yPosition);\n      yPosition += 15;\n\n      doc.setFontSize(10);\n      doc.setTextColor(0, 0, 0);\n\n      const scores = assessmentData.scores;\n      const summary = [\n        `Overall Assessment Score: ${scores.overall?.toFixed(1) || 'N/A'}/5.0`,\n        `Technical Complexity: ${scores.complexity?.toFixed(1) || 'N/A'}/5.0`,\n        `Safety Criticality: ${scores.safety?.toFixed(1) || 'N/A'}/5.0`,\n        `Project Scale: ${scores.scale?.toFixed(1) || 'N/A'}/5.0`,\n        `Organizational Maturity: ${scores.maturity?.toFixed(1) || 'N/A'}/5.0`,\n      ];\n\n      summary.forEach(line => {\n        checkNewPage();\n        doc.text(line, 20, yPosition);\n        yPosition += 6;\n      });\n\n      yPosition += 10;\n\n      // Process Recommendations\n      const recommendations = assessmentData.recommendations || {};\n      const levelCounts = this.getLevelCounts(recommendations);\n\n      const recSummary = [\n        `Total Processes Analyzed: ${Object.keys(recommendations).length}`,\n        `Basic Level Processes: ${levelCounts.basic}`,\n        `Standard Level Processes: ${levelCounts.standard}`,\n        `Comprehensive Level Processes: ${levelCounts.comprehensive}`,\n      ];\n\n      recSummary.forEach(line => {\n        checkNewPage();\n        doc.text(line, 20, yPosition);\n        yPosition += 6;\n      });\n\n      // Process Recommendations Section\n      checkNewPage(30);\n      yPosition += 10;\n      doc.setFontSize(16);\n      doc.setTextColor(13, 110, 253);\n      doc.text('Process Recommendations', 20, yPosition);\n      yPosition += 15;\n\n      // Group by category\n      const grouped = this.groupRecommendationsByCategory(recommendations);\n\n      Object.keys(grouped).forEach(category => {\n        checkNewPage(20);\n        doc.setFontSize(14);\n        doc.setTextColor(0, 0, 0);\n        const categoryName = this.app.processData.processCategories?.[category] || category;\n        doc.text(categoryName, 20, yPosition);\n        yPosition += 10;\n\n        grouped[category].forEach(process => {\n          checkNewPage(15);\n          doc.setFontSize(10);\n          doc.setTextColor(0, 0, 0);\n\n          const processLine = `${process.processName}: ${process.recommendedLevel.toUpperCase()}`;\n          doc.text(processLine, 25, yPosition);\n          yPosition += 5;\n\n          if (options.includeRationale && process.rationale) {\n            process.rationale.slice(0, 2).forEach(reason => {\n              checkNewPage();\n              const reasonText = `  • ${reason}`;\n              const splitText = doc.splitTextToSize(reasonText, 160);\n              splitText.forEach(line => {\n                doc.text(line, 30, yPosition);\n                yPosition += 4;\n              });\n            });\n          }\n          yPosition += 3;\n        });\n        yPosition += 5;\n      });\n\n      // Implementation Guidance\n      if (options.includeImplementationGuide) {\n        checkNewPage(30);\n        doc.setFontSize(16);\n        doc.setTextColor(13, 110, 253);\n        doc.text('Implementation Guidance', 20, yPosition);\n        yPosition += 15;\n\n        doc.setFontSize(10);\n        doc.setTextColor(0, 0, 0);\n\n        const guidance = [\n          '1. Begin with high-priority Technical Management processes',\n          '2. Implement processes in dependency order',\n          '3. Start with Basic level and mature gradually',\n          '4. Monitor effectiveness and adjust as needed',\n          '5. Regular reviews ensure continued alignment',\n        ];\n\n        guidance.forEach(item => {\n          checkNewPage();\n          doc.text(item, 20, yPosition);\n          yPosition += 6;\n        });\n      }\n\n      // Assessment Details\n      if (options.includeAssessmentDetails) {\n        checkNewPage(30);\n        doc.setFontSize(16);\n        doc.setTextColor(13, 110, 253);\n        doc.text('Assessment Details', 20, yPosition);\n        yPosition += 15;\n\n        const responses = assessmentData.responses || {};\n        const categories = this.app.questionData.assessmentCategories || [];\n\n        categories.forEach(category => {\n          checkNewPage(15);\n          doc.setFontSize(12);\n          doc.setTextColor(0, 0, 0);\n          doc.text(category.name, 20, yPosition);\n          yPosition += 8;\n\n          category.questions.forEach(question => {\n            const response = responses[question.id];\n            if (response) {\n              checkNewPage(12);\n              doc.setFontSize(9);\n              doc.text(`Q: ${question.text}`, 25, yPosition);\n              yPosition += 5;\n              doc.text(`A: ${response.label} (Score: ${response.score})`, 25, yPosition);\n              yPosition += 7;\n            }\n          });\n          yPosition += 5;\n        });\n      }\n\n      // Metadata\n      if (options.includeMetadata) {\n        checkNewPage(20);\n        doc.setFontSize(12);\n        doc.setTextColor(100, 100, 100);\n        doc.text('Report Metadata', 20, yPosition);\n        yPosition += 10;\n\n        doc.setFontSize(8);\n        const metadata = [\n          `Generated: ${new Date().toISOString()}`,\n          'Framework Version: 1.0.0',\n          'Standard: ISO/IEC/IEEE 15288:2023',\n          `Processes Analyzed: ${Object.keys(recommendations).length}`,\n          `Assessment Questions: ${Object.keys(assessmentData.responses || {}).length}`,\n        ];\n\n        metadata.forEach(line => {\n          doc.text(line, 20, yPosition);\n          yPosition += 4;\n        });\n      }\n\n      // Save the PDF\n      const fileName = `SE_Process_Tailoring_Report_${new Date().toISOString().split('T')[0]}.pdf`;\n      doc.save(fileName);\n\n      this.hideExportProgress();\n      this.app.showSuccess('PDF report downloaded successfully!');\n\n    } catch (error) {\n      // PDF export error\n      this.hideExportProgress();\n      this.app.showError('Failed to generate PDF report. Please try again.');\n    }\n  }\n\n  exportJSON() {\n    try {\n      const assessmentData = this.app.getAssessmentData();\n      const options = this.getExportOptions();\n\n      const exportData = {\n        metadata: {\n          generatedAt: new Date().toISOString(),\n          version: '1.0.0',\n          standard: 'ISO/IEC/IEEE 15288:2023',\n          frameworkVersion: '1.0.0',\n        },\n        assessmentScores: assessmentData.scores,\n        recommendations: assessmentData.recommendations,\n      };\n\n      if (options.includeAssessmentDetails) {\n        exportData.assessmentResponses = assessmentData.responses;\n      }\n\n      if (options.includeDependencies) {\n        exportData.dependencies = this.app.getDependencyData();\n      }\n\n      if (options.includeMetadata) {\n        exportData.processData = this.app.getProcessData();\n      }\n\n      const jsonString = JSON.stringify(exportData, null, 2);\n      const blob = new Blob([jsonString], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `SE_Process_Tailoring_Config_${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      this.app.showSuccess('JSON configuration downloaded successfully!');\n\n    } catch (error) {\n      // JSON export error\n      this.app.showError('Failed to export JSON configuration. Please try again.');\n    }\n  }\n\n  exportExcel() {\n    try {\n      const assessmentData = this.app.getAssessmentData();\n      const options = this.getExportOptions();\n\n      // Create CSV content (simplified Excel export)\n      let csvContent = 'Process Name,Category,Recommended Level,Effort,Complexity,Confidence,Rationale\\n';\n\n      const recommendations = assessmentData.recommendations || {};\n      Object.values(recommendations).forEach(rec => {\n        const rationale = options.includeRationale\n          ? rec.rationale?.join('; ') || ''\n          : '';\n\n        csvContent += `\"${rec.processName}\",\"${rec.category}\",\"${rec.recommendedLevel}\",${rec.effort},${rec.complexity},${Math.round(rec.confidence * 100)},\"${rationale}\"\\n`;\n      });\n\n      // Add assessment data if requested\n      if (options.includeAssessmentDetails) {\n        csvContent += '\\n\\nAssessment Responses\\n';\n        csvContent += 'Question,Response,Score,Dimension\\n';\n\n        Object.values(assessmentData.responses || {}).forEach(response => {\n          csvContent += `\"${response.questionId}\",\"${response.label}\",${response.score},\"${response.dimension}\"\\n`;\n        });\n      }\n\n      const blob = new Blob([csvContent], { type: 'text/csv' });\n      const url = URL.createObjectURL(blob);\n\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `SE_Process_Tailoring_Analysis_${new Date().toISOString().split('T')[0]}.csv`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      this.app.showSuccess('Excel/CSV file downloaded successfully!');\n\n    } catch (error) {\n      // Excel export error\n      this.app.showError('Failed to export Excel file. Please try again.');\n    }\n  }\n\n  showExportProgress(message) {\n    // Show loading state\n    const loadingHtml = `\n            <div class=\"text-center py-4\" id=\"export-progress\">\n                <div class=\"spinner-border text-primary mb-3\" role=\"status\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                </div>\n                <p class=\"text-muted\">${message}</p>\n            </div>\n        `;\n\n    document.body.insertAdjacentHTML('beforeend', `\n            <div class=\"position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center bg-dark bg-opacity-50\" style=\"z-index: 9999;\" id=\"export-overlay\">\n                ${loadingHtml}\n            </div>\n        `);\n  }\n\n  hideExportProgress() {\n    const overlay = document.getElementById('export-overlay');\n    if (overlay) {\n      overlay.remove();\n    }\n  }\n\n  // Helper methods\n  getLevelCounts(recommendations) {\n    const counts = { basic: 0, standard: 0, comprehensive: 0 };\n    Object.values(recommendations).forEach(rec => {\n      counts[rec.recommendedLevel] = (counts[rec.recommendedLevel] || 0) + 1;\n    });\n    return counts;\n  }\n\n  groupRecommendationsByCategory(recommendations) {\n    const grouped = {};\n    Object.values(recommendations).forEach(rec => {\n      const category = rec.category || 'other';\n      if (!grouped[category]) {\n        grouped[category] = [];\n      }\n      grouped[category].push(rec);\n    });\n\n    // Sort within categories\n    Object.keys(grouped).forEach(category => {\n      grouped[category].sort((a, b) => a.processName.localeCompare(b.processName));\n    });\n\n    return grouped;\n  }\n}\n\n// Export for global access\nwindow.ExportManager = ExportManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/components/export.js\n\n}");

/***/ }),

/***/ "./js/components/recommendations.js":
/*!******************************************!*\
  !*** ./js/components/recommendations.js ***!
  \******************************************/
/***/ (() => {

eval("{/**\n * Recommendation Engine Component\n * Generates process tailoring recommendations based on assessment scores\n */\n\nclass RecommendationEngine {\n  constructor(processData, dependencyData, app) {\n    this.processData = processData;\n    this.dependencyData = dependencyData;\n    this.app = app;\n    this.recommendations = {};\n  }\n\n  generateRecommendations(assessmentScores) {\n    const processes = this.processData.processes || [];\n    const recommendations = {};\n\n    // Generate base recommendations for each process\n    processes.forEach(process => {\n      recommendations[process.id] = this.calculateProcessLevel(process, assessmentScores);\n    });\n\n    // Apply dependency constraints\n    this.applyDependencyConstraints(recommendations);\n\n    // Apply safety and other constraints\n    this.applyProcessConstraints(recommendations, assessmentScores);\n\n    // Calculate confidence scores\n    this.calculateConfidenceScores(recommendations, assessmentScores);\n\n    this.recommendations = recommendations;\n    return recommendations;\n  }\n\n  calculateProcessLevel(process, scores) {\n    // Base level calculation using weighted assessment scores\n    const baseScore = this.calculateBaseScore(process, scores);\n\n    // Determine level based on score thresholds\n    let level = 'basic';\n    if (baseScore >= 3.6) {\n      level = 'comprehensive';\n    } else if (baseScore >= 2.1) {\n      level = 'standard';\n    }\n\n    return {\n      processId: process.id,\n      processName: process.name,\n      category: process.category,\n      recommendedLevel: level,\n      baseScore: baseScore,\n      rationale: this.generateRationale(process, scores, level),\n      effort: process.tailoringLevels[level]?.effort || 1,\n      complexity: process.tailoringLevels[level]?.complexity || 1,\n      activities: process.tailoringLevels[level]?.activities || [],\n      outputs: process.tailoringLevels[level]?.outputs || [],\n      dependencies: [],\n      constraints: [],\n      confidence: 0.8, // Will be calculated later\n    };\n  }\n\n  calculateBaseScore(process, scores) {\n    // Process-specific scoring weights based on category\n    const weights = this.getProcessWeights(process);\n\n    // Calculate weighted score\n    let weightedScore = 0;\n    let totalWeight = 0;\n\n    Object.keys(weights).forEach(dimension => {\n      if (scores[dimension] !== undefined) {\n        weightedScore += scores[dimension] * weights[dimension];\n        totalWeight += weights[dimension];\n      }\n    });\n\n    return totalWeight > 0 ? weightedScore / totalWeight : 0;\n  }\n\n  getProcessWeights(process) {\n    // Default weights - can be customized per process\n    const defaultWeights = {\n      complexity: 0.3,\n      safety: 0.25,\n      scale: 0.25,\n      maturity: 0.2,\n    };\n\n    // Process-specific weight adjustments\n    const adjustments = {\n      // Safety-critical processes weight safety more heavily\n      'risk_management': { safety: 0.4, complexity: 0.25, scale: 0.2, maturity: 0.15 },\n      'quality_assurance': { safety: 0.35, complexity: 0.25, scale: 0.2, maturity: 0.2 },\n      'verification': { safety: 0.35, complexity: 0.3, scale: 0.2, maturity: 0.15 },\n      'validation': { safety: 0.35, complexity: 0.25, scale: 0.2, maturity: 0.2 },\n\n      // Technical processes weight complexity more heavily\n      'system_analysis': { complexity: 0.4, safety: 0.2, scale: 0.25, maturity: 0.15 },\n      'architecture_definition': { complexity: 0.4, safety: 0.2, scale: 0.25, maturity: 0.15 },\n      'design_definition': { complexity: 0.4, safety: 0.2, scale: 0.25, maturity: 0.15 },\n\n      // Management processes weight scale and maturity more heavily\n      'project_planning': { scale: 0.35, maturity: 0.25, complexity: 0.2, safety: 0.2 },\n      'project_assessment_control': { scale: 0.35, maturity: 0.25, complexity: 0.2, safety: 0.2 },\n      'configuration_management': { scale: 0.3, maturity: 0.3, complexity: 0.2, safety: 0.2 },\n    };\n\n    return adjustments[process.id] || defaultWeights;\n  }\n\n  applyDependencyConstraints(recommendations) {\n    const dependencies = this.dependencyData.dependencies || [];\n    let changed = true;\n    let iterations = 0;\n    const maxIterations = 10; // Prevent infinite loops\n\n    // Iteratively apply constraints until no more changes\n    while (changed && iterations < maxIterations) {\n      changed = false;\n      iterations++;\n\n      dependencies.forEach(dep => {\n        const sourceRec = recommendations[dep.source];\n        const targetRec = recommendations[dep.target];\n\n        if (sourceRec && targetRec) {\n          const sourceLevel = this.getLevelValue(sourceRec.recommendedLevel);\n          const requiredTargetLevel = this.getLevelValue(dep.targetLevel);\n          const currentTargetLevel = this.getLevelValue(targetRec.recommendedLevel);\n\n          // If source is at the specified level and target is below required minimum\n          if (sourceLevel >= this.getLevelValue(dep.sourceLevel) &&\n                        currentTargetLevel < requiredTargetLevel) {\n\n            const newLevel = dep.targetLevel;\n            targetRec.recommendedLevel = newLevel;\n            targetRec.effort = this.processData.processes.find(p => p.id === dep.target)?.tailoringLevels[newLevel]?.effort || targetRec.effort;\n            targetRec.complexity = this.processData.processes.find(p => p.id === dep.target)?.tailoringLevels[newLevel]?.complexity || targetRec.complexity;\n\n            // Add dependency constraint to rationale\n            targetRec.constraints.push({\n              type: 'dependency',\n              source: dep.source,\n              sourceLevel: dep.sourceLevel,\n              reason: `Required by ${sourceRec.processName} at ${dep.sourceLevel} level`,\n            });\n\n            // Track the dependency\n            sourceRec.dependencies.push({\n              target: dep.target,\n              targetName: targetRec.processName,\n              requiredLevel: dep.targetLevel,\n              type: dep.type || 'horizontal',\n            });\n\n            changed = true;\n          }\n        }\n      });\n    }\n\n    if (iterations >= maxIterations) {\n      // Dependency constraint resolution reached maximum iterations\n    }\n  }\n\n  applyProcessConstraints(recommendations, scores) {\n    const processes = this.processData.processes || [];\n\n    processes.forEach(process => {\n      const rec = recommendations[process.id];\n      if (!rec || !process.constraints) return;\n\n      process.constraints.forEach(constraint => {\n        if (this.evaluateConstraintCondition(constraint.condition, scores)) {\n          const requiredLevel = constraint.requiredLevel;\n          const currentLevel = this.getLevelValue(rec.recommendedLevel);\n          const requiredLevelValue = this.getLevelValue(requiredLevel);\n\n          if (currentLevel < requiredLevelValue) {\n            rec.recommendedLevel = requiredLevel;\n            rec.effort = process.tailoringLevels[requiredLevel]?.effort || rec.effort;\n            rec.complexity = process.tailoringLevels[requiredLevel]?.complexity || rec.complexity;\n\n            rec.constraints.push({\n              type: 'process',\n              condition: constraint.condition,\n              reason: constraint.rationale || 'Process constraint applied',\n            });\n          }\n        }\n      });\n    });\n  }\n\n  evaluateConstraintCondition(condition, scores) {\n    try {\n      // Simple condition evaluation - extend as needed\n      // Example: \"safety_criticality > 3\"\n      const match = condition.match(/(\\w+)\\s*([><=]+)\\s*(\\d+\\.?\\d*)/);\n      if (match) {\n        const [, dimension, operator, threshold] = match;\n        const score = scores[dimension];\n        const thresholdValue = parseFloat(threshold);\n\n        switch (operator) {\n          case '>': return score > thresholdValue;\n          case '>=': return score >= thresholdValue;\n          case '<': return score < thresholdValue;\n          case '<=': return score <= thresholdValue;\n          case '=': case '==': return Math.abs(score - thresholdValue) < 0.1;\n          default: return false;\n        }\n      }\n    } catch (error) {\n      // Failed to evaluate constraint condition\n    }\n    return false;\n  }\n\n  calculateConfidenceScores(recommendations, scores) {\n    Object.values(recommendations).forEach(rec => {\n      let confidence = 0.8; // Base confidence\n\n      // Reduce confidence if score is near threshold boundaries\n      const baseScore = rec.baseScore;\n      if ((baseScore >= 2.0 && baseScore <= 2.2) || (baseScore >= 3.5 && baseScore <= 3.7)) {\n        confidence -= 0.2;\n      }\n\n      // Reduce confidence if conflicting constraints\n      if (rec.constraints.length > 2) {\n        confidence -= 0.1;\n      }\n\n      // Increase confidence if multiple factors align\n      const extremeScores = Object.values(scores).filter(s => s <= 1.5 || s >= 4.5).length;\n      if (extremeScores >= 2) {\n        confidence += 0.1;\n      }\n\n      rec.confidence = Math.max(0.4, Math.min(1.0, confidence));\n    });\n  }\n\n  getLevelValue(level) {\n    const values = { 'basic': 1, 'standard': 2, 'comprehensive': 3 };\n    return values[level] || 1;\n  }\n\n  generateRationale(process, scores, level) {\n    const rationale = [];\n    const weights = this.getProcessWeights(process);\n\n    // Primary drivers\n    const primaryFactors = Object.keys(weights)\n      .map(dim => ({ dimension: dim, weight: weights[dim], score: scores[dim] }))\n      .sort((a, b) => b.weight - a.weight)\n      .slice(0, 2);\n\n    primaryFactors.forEach(factor => {\n      const impact = this.getScoreImpact(factor.score);\n      rationale.push(`${this.getDimensionName(factor.dimension)} (${factor.score.toFixed(1)}/5.0) ${impact.description}`);\n    });\n\n    // Level justification\n    switch (level) {\n      case 'basic':\n        rationale.push('Basic level recommended for low complexity and risk profile');\n        break;\n      case 'standard':\n        rationale.push('Standard level provides balanced formality for moderate complexity');\n        break;\n      case 'comprehensive':\n        rationale.push('Comprehensive level required for high complexity and criticality');\n        break;\n    }\n\n    return rationale;\n  }\n\n  getDimensionName(dimension) {\n    const names = {\n      complexity: 'Technical Complexity',\n      safety: 'Safety Criticality',\n      scale: 'Project Scale',\n      maturity: 'Organizational Maturity',\n    };\n    return names[dimension] || dimension;\n  }\n\n  getScoreImpact(score) {\n    if (score <= 2.0) return { level: 'low', description: 'suggests minimal formality' };\n    if (score <= 3.5) return { level: 'medium', description: 'indicates moderate formality needed' };\n    return { level: 'high', description: 'requires high formality and rigor' };\n  }\n\n  render() {\n    const container = document.getElementById('recommendations-content');\n    if (!container) return;\n\n    const assessmentData = this.app.getAssessmentData();\n\n    if (!assessmentData.recommendations || Object.keys(assessmentData.recommendations).length === 0) {\n      this.renderNoRecommendations(container);\n      return;\n    }\n\n    this.renderRecommendations(container, assessmentData);\n  }\n\n  renderNoRecommendations(container) {\n    container.innerHTML = `\n            <div class=\"text-center py-5\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <i class=\"bi bi-exclamation-circle display-1 text-warning mb-3\"></i>\n                        <h3>No Recommendations Available</h3>\n                        <p class=\"text-muted mb-4\">\n                            Complete the assessment first to generate personalized process tailoring recommendations.\n                        </p>\n                        <button class=\"btn btn-primary\" onclick=\"window.seApp.showView('assessment')\">\n                            <i class=\"bi bi-clipboard-check\"></i>\n                            Start Assessment\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  renderRecommendations(container, assessmentData) {\n    const recommendations = assessmentData.recommendations;\n\n    // Group recommendations by category\n    const groupedRecs = this.groupRecommendationsByCategory(recommendations);\n\n    // Calculate summary statistics\n    const stats = this.calculateSummaryStats(recommendations);\n\n    const html = `\n            <div class=\"mb-4\">\n                <div class=\"card shadow-sm\">\n                    <div class=\"card-header bg-gradient-primary text-white\">\n                        <h4 class=\"card-title mb-0\">\n                            <i class=\"bi bi-lightbulb-fill\"></i>\n                            Process Tailoring Recommendations\n                        </h4>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row mb-4\">\n                            <div class=\"col-md-3\">\n                                <div class=\"stat-card border-start-primary\">\n                                    <span class=\"stat-number text-success\">${stats.basic}</span>\n                                    <span class=\"stat-label\">Basic Level</span>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"stat-card border-start-warning\">\n                                    <span class=\"stat-number text-warning\">${stats.standard}</span>\n                                    <span class=\"stat-label\">Standard Level</span>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"stat-card border-start-danger\">\n                                    <span class=\"stat-number text-danger\">${stats.comprehensive}</span>\n                                    <span class=\"stat-label\">Comprehensive Level</span>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <div class=\"stat-card\">\n                                    <span class=\"stat-number\">${stats.totalEffort}</span>\n                                    <span class=\"stat-label\">Total Effort Score</span>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class=\"alert alert-info\">\n                            <i class=\"bi bi-info-circle me-2\"></i>\n                            <strong>Implementation Guidance:</strong> Start with high-priority processes and gradually implement others. \n                            Pay special attention to dependency relationships shown in the visualization.\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            ${Object.keys(groupedRecs).map(category => this.renderCategorySection(category, groupedRecs[category])).join('')}\n        `;\n\n    container.innerHTML = html;\n    this.attachRecommendationEventListeners();\n  }\n\n  groupRecommendationsByCategory(recommendations) {\n    const grouped = {};\n\n    Object.values(recommendations).forEach(rec => {\n      const category = rec.category || 'other';\n      if (!grouped[category]) {\n        grouped[category] = [];\n      }\n      grouped[category].push(rec);\n    });\n\n    // Sort processes within each category by name\n    Object.keys(grouped).forEach(category => {\n      grouped[category].sort((a, b) => a.processName.localeCompare(b.processName));\n    });\n\n    return grouped;\n  }\n\n  renderCategorySection(category, processes) {\n    const categoryName = this.processData.processCategories?.[category] || category;\n\n    return `\n            <div class=\"mb-4\">\n                <h5 class=\"mb-3\">\n                    <i class=\"bi bi-${this.getCategoryIcon(category)}\"></i>\n                    ${categoryName}\n                </h5>\n                <div class=\"row\">\n                    ${processes.map(process => this.renderProcessCard(process)).join('')}\n                </div>\n            </div>\n        `;\n  }\n\n  renderProcessCard(process) {\n    const levelClass = process.recommendedLevel;\n    const confidencePercent = Math.round(process.confidence * 100);\n\n    return `\n            <div class=\"col-lg-6 mb-3\">\n                <div class=\"process-card card ${levelClass}\">\n                    <div class=\"card-body\">\n                        <div class=\"d-flex justify-content-between align-items-start mb-2\">\n                            <h6 class=\"process-title mb-1\">${process.processName}</h6>\n                            <span class=\"level-badge level-${levelClass}\">${process.recommendedLevel}</span>\n                        </div>\n                        \n                        <div class=\"mb-2\">\n                            <small class=\"text-muted\">\n                                Effort: <strong>${process.effort}</strong> | \n                                Complexity: <strong>${process.complexity}</strong> | \n                                Confidence: <strong>${confidencePercent}%</strong>\n                            </small>\n                        </div>\n\n                        <div class=\"mb-3\">\n                            <strong>Rationale:</strong>\n                            <ul class=\"list-unstyled mt-1 mb-0\">\n                                ${process.rationale.map(reason => `<li class=\"text-small text-muted\">• ${reason}</li>`).join('')}\n                            </ul>\n                        </div>\n\n                        ${process.constraints.length > 0 ? `\n                            <div class=\"mb-3\">\n                                <strong>Constraints Applied:</strong>\n                                <ul class=\"list-unstyled mt-1 mb-0\">\n                                    ${process.constraints.map(constraint => `\n                                        <li class=\"text-small text-warning\">• ${constraint.reason}</li>\n                                    `).join('')}\n                                </ul>\n                            </div>\n                        ` : ''}\n\n                        ${process.dependencies.length > 0 ? `\n                            <div class=\"mb-3\">\n                                <strong>Dependencies:</strong>\n                                <ul class=\"dependency-list\">\n                                    ${process.dependencies.map(dep => `\n                                        <li class=\"dependency-item ${dep.type === 'vertical' ? 'critical' : 'important'}\">\n                                            <small>\n                                                <strong>${dep.targetName}</strong> requires <em>${dep.requiredLevel}</em> level\n                                                <span class=\"badge badge-sm bg-secondary ms-1\">${dep.type}</span>\n                                            </small>\n                                        </li>\n                                    `).join('')}\n                                </ul>\n                            </div>\n                        ` : ''}\n\n                        <div class=\"text-end\">\n                            <button class=\"btn btn-outline-primary btn-sm\" onclick=\"window.seApp.showProcessDetails('${process.processId}')\">\n                                <i class=\"bi bi-info-circle\"></i>\n                                Details\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  calculateSummaryStats(recommendations) {\n    const stats = {\n      basic: 0,\n      standard: 0,\n      comprehensive: 0,\n      totalEffort: 0,\n      averageConfidence: 0,\n    };\n\n    const recs = Object.values(recommendations);\n\n    recs.forEach(rec => {\n      stats[rec.recommendedLevel]++;\n      stats.totalEffort += rec.effort || 0;\n    });\n\n    stats.averageConfidence = recs.length > 0\n      ? recs.reduce((sum, rec) => sum + rec.confidence, 0) / recs.length\n      : 0;\n\n    return stats;\n  }\n\n  getCategoryIcon(category) {\n    const icons = {\n      'technical_management': 'gear',\n      'technical': 'cpu',\n      'other': 'circle',\n    };\n    return icons[category] || 'circle';\n  }\n\n  attachRecommendationEventListeners() {\n    // Add any interactive event listeners here\n    // Currently handled through onclick attributes in the HTML\n  }\n\n  // Public methods for app integration\n  getRecommendations() {\n    return this.recommendations;\n  }\n\n  getProcessRecommendation(processId) {\n    return this.recommendations[processId];\n  }\n}\n\n// Export for global access\nwindow.RecommendationEngine = RecommendationEngine;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qcy9jb21wb25lbnRzL3JlY29tbWVuZGF0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDJEQUEyRDtBQUN0Riw2QkFBNkIsMkRBQTJEO0FBQ3hGLHdCQUF3QiwyREFBMkQ7QUFDbkYsc0JBQXNCLDJEQUEyRDs7QUFFakY7QUFDQSwyQkFBMkIsMkRBQTJEO0FBQ3RGLG1DQUFtQywyREFBMkQ7QUFDOUYsNkJBQTZCLDJEQUEyRDs7QUFFeEY7QUFDQSw0QkFBNEIsMkRBQTJEO0FBQ3ZGLHNDQUFzQywyREFBMkQ7QUFDakcsb0NBQW9DLHlEQUF5RDtBQUM3Rjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCOztBQUU5QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsdUJBQXVCLEtBQUssaUJBQWlCO0FBQ2xGLGFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0QkFBNEI7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUJBQXFCLDBEQUEwRDtBQUMvRTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx3QkFBd0IseUNBQXlDLEdBQUcsd0JBQXdCLFFBQVEsbUJBQW1CO0FBQ3ZILEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsK0JBQStCO0FBQy9CLCtCQUErQjtBQUMvQixhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsWUFBWTtBQUN6RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLGVBQWU7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxvQkFBb0I7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSxrQkFBa0I7QUFDbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYztBQUNkOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLCtCQUErQjtBQUNyRSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdEQUFnRCxXQUFXO0FBQzNEO0FBQ0E7QUFDQSw2REFBNkQsb0JBQW9CO0FBQ2pGLDZEQUE2RCxXQUFXLElBQUkseUJBQXlCO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELGVBQWU7QUFDakUsc0RBQXNELG1CQUFtQjtBQUN6RSxzREFBc0Qsa0JBQWtCO0FBQ3hFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHVFQUF1RSxPQUFPO0FBQ2hIO0FBQ0E7O0FBRUEsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QyxnRkFBZ0Ysa0JBQWtCO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEMscUVBQXFFLG1EQUFtRDtBQUN4SDtBQUNBLDBEQUEwRCxlQUFlLHlCQUF5QixrQkFBa0I7QUFDcEgsaUdBQWlHLFNBQVM7QUFDMUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsdUhBQXVILGtCQUFrQjtBQUN6STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NlLXRhaWxvcmluZy1mcmFtZXdvcmsvLi9qcy9jb21wb25lbnRzL3JlY29tbWVuZGF0aW9ucy5qcz9jYmUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVjb21tZW5kYXRpb24gRW5naW5lIENvbXBvbmVudFxuICogR2VuZXJhdGVzIHByb2Nlc3MgdGFpbG9yaW5nIHJlY29tbWVuZGF0aW9ucyBiYXNlZCBvbiBhc3Nlc3NtZW50IHNjb3Jlc1xuICovXG5cbmNsYXNzIFJlY29tbWVuZGF0aW9uRW5naW5lIHtcbiAgY29uc3RydWN0b3IocHJvY2Vzc0RhdGEsIGRlcGVuZGVuY3lEYXRhLCBhcHApIHtcbiAgICB0aGlzLnByb2Nlc3NEYXRhID0gcHJvY2Vzc0RhdGE7XG4gICAgdGhpcy5kZXBlbmRlbmN5RGF0YSA9IGRlcGVuZGVuY3lEYXRhO1xuICAgIHRoaXMuYXBwID0gYXBwO1xuICAgIHRoaXMucmVjb21tZW5kYXRpb25zID0ge307XG4gIH1cblxuICBnZW5lcmF0ZVJlY29tbWVuZGF0aW9ucyhhc3Nlc3NtZW50U2NvcmVzKSB7XG4gICAgY29uc3QgcHJvY2Vzc2VzID0gdGhpcy5wcm9jZXNzRGF0YS5wcm9jZXNzZXMgfHwgW107XG4gICAgY29uc3QgcmVjb21tZW5kYXRpb25zID0ge307XG5cbiAgICAvLyBHZW5lcmF0ZSBiYXNlIHJlY29tbWVuZGF0aW9ucyBmb3IgZWFjaCBwcm9jZXNzXG4gICAgcHJvY2Vzc2VzLmZvckVhY2gocHJvY2VzcyA9PiB7XG4gICAgICByZWNvbW1lbmRhdGlvbnNbcHJvY2Vzcy5pZF0gPSB0aGlzLmNhbGN1bGF0ZVByb2Nlc3NMZXZlbChwcm9jZXNzLCBhc3Nlc3NtZW50U2NvcmVzKTtcbiAgICB9KTtcblxuICAgIC8vIEFwcGx5IGRlcGVuZGVuY3kgY29uc3RyYWludHNcbiAgICB0aGlzLmFwcGx5RGVwZW5kZW5jeUNvbnN0cmFpbnRzKHJlY29tbWVuZGF0aW9ucyk7XG5cbiAgICAvLyBBcHBseSBzYWZldHkgYW5kIG90aGVyIGNvbnN0cmFpbnRzXG4gICAgdGhpcy5hcHBseVByb2Nlc3NDb25zdHJhaW50cyhyZWNvbW1lbmRhdGlvbnMsIGFzc2Vzc21lbnRTY29yZXMpO1xuXG4gICAgLy8gQ2FsY3VsYXRlIGNvbmZpZGVuY2Ugc2NvcmVzXG4gICAgdGhpcy5jYWxjdWxhdGVDb25maWRlbmNlU2NvcmVzKHJlY29tbWVuZGF0aW9ucywgYXNzZXNzbWVudFNjb3Jlcyk7XG5cbiAgICB0aGlzLnJlY29tbWVuZGF0aW9ucyA9IHJlY29tbWVuZGF0aW9ucztcbiAgICByZXR1cm4gcmVjb21tZW5kYXRpb25zO1xuICB9XG5cbiAgY2FsY3VsYXRlUHJvY2Vzc0xldmVsKHByb2Nlc3MsIHNjb3Jlcykge1xuICAgIC8vIEJhc2UgbGV2ZWwgY2FsY3VsYXRpb24gdXNpbmcgd2VpZ2h0ZWQgYXNzZXNzbWVudCBzY29yZXNcbiAgICBjb25zdCBiYXNlU2NvcmUgPSB0aGlzLmNhbGN1bGF0ZUJhc2VTY29yZShwcm9jZXNzLCBzY29yZXMpO1xuXG4gICAgLy8gRGV0ZXJtaW5lIGxldmVsIGJhc2VkIG9uIHNjb3JlIHRocmVzaG9sZHNcbiAgICBsZXQgbGV2ZWwgPSAnYmFzaWMnO1xuICAgIGlmIChiYXNlU2NvcmUgPj0gMy42KSB7XG4gICAgICBsZXZlbCA9ICdjb21wcmVoZW5zaXZlJztcbiAgICB9IGVsc2UgaWYgKGJhc2VTY29yZSA+PSAyLjEpIHtcbiAgICAgIGxldmVsID0gJ3N0YW5kYXJkJztcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgcHJvY2Vzc0lkOiBwcm9jZXNzLmlkLFxuICAgICAgcHJvY2Vzc05hbWU6IHByb2Nlc3MubmFtZSxcbiAgICAgIGNhdGVnb3J5OiBwcm9jZXNzLmNhdGVnb3J5LFxuICAgICAgcmVjb21tZW5kZWRMZXZlbDogbGV2ZWwsXG4gICAgICBiYXNlU2NvcmU6IGJhc2VTY29yZSxcbiAgICAgIHJhdGlvbmFsZTogdGhpcy5nZW5lcmF0ZVJhdGlvbmFsZShwcm9jZXNzLCBzY29yZXMsIGxldmVsKSxcbiAgICAgIGVmZm9ydDogcHJvY2Vzcy50YWlsb3JpbmdMZXZlbHNbbGV2ZWxdPy5lZmZvcnQgfHwgMSxcbiAgICAgIGNvbXBsZXhpdHk6IHByb2Nlc3MudGFpbG9yaW5nTGV2ZWxzW2xldmVsXT8uY29tcGxleGl0eSB8fCAxLFxuICAgICAgYWN0aXZpdGllczogcHJvY2Vzcy50YWlsb3JpbmdMZXZlbHNbbGV2ZWxdPy5hY3Rpdml0aWVzIHx8IFtdLFxuICAgICAgb3V0cHV0czogcHJvY2Vzcy50YWlsb3JpbmdMZXZlbHNbbGV2ZWxdPy5vdXRwdXRzIHx8IFtdLFxuICAgICAgZGVwZW5kZW5jaWVzOiBbXSxcbiAgICAgIGNvbnN0cmFpbnRzOiBbXSxcbiAgICAgIGNvbmZpZGVuY2U6IDAuOCwgLy8gV2lsbCBiZSBjYWxjdWxhdGVkIGxhdGVyXG4gICAgfTtcbiAgfVxuXG4gIGNhbGN1bGF0ZUJhc2VTY29yZShwcm9jZXNzLCBzY29yZXMpIHtcbiAgICAvLyBQcm9jZXNzLXNwZWNpZmljIHNjb3Jpbmcgd2VpZ2h0cyBiYXNlZCBvbiBjYXRlZ29yeVxuICAgIGNvbnN0IHdlaWdodHMgPSB0aGlzLmdldFByb2Nlc3NXZWlnaHRzKHByb2Nlc3MpO1xuXG4gICAgLy8gQ2FsY3VsYXRlIHdlaWdodGVkIHNjb3JlXG4gICAgbGV0IHdlaWdodGVkU2NvcmUgPSAwO1xuICAgIGxldCB0b3RhbFdlaWdodCA9IDA7XG5cbiAgICBPYmplY3Qua2V5cyh3ZWlnaHRzKS5mb3JFYWNoKGRpbWVuc2lvbiA9PiB7XG4gICAgICBpZiAoc2NvcmVzW2RpbWVuc2lvbl0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB3ZWlnaHRlZFNjb3JlICs9IHNjb3Jlc1tkaW1lbnNpb25dICogd2VpZ2h0c1tkaW1lbnNpb25dO1xuICAgICAgICB0b3RhbFdlaWdodCArPSB3ZWlnaHRzW2RpbWVuc2lvbl07XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdG90YWxXZWlnaHQgPiAwID8gd2VpZ2h0ZWRTY29yZSAvIHRvdGFsV2VpZ2h0IDogMDtcbiAgfVxuXG4gIGdldFByb2Nlc3NXZWlnaHRzKHByb2Nlc3MpIHtcbiAgICAvLyBEZWZhdWx0IHdlaWdodHMgLSBjYW4gYmUgY3VzdG9taXplZCBwZXIgcHJvY2Vzc1xuICAgIGNvbnN0IGRlZmF1bHRXZWlnaHRzID0ge1xuICAgICAgY29tcGxleGl0eTogMC4zLFxuICAgICAgc2FmZXR5OiAwLjI1LFxuICAgICAgc2NhbGU6IDAuMjUsXG4gICAgICBtYXR1cml0eTogMC4yLFxuICAgIH07XG5cbiAgICAvLyBQcm9jZXNzLXNwZWNpZmljIHdlaWdodCBhZGp1c3RtZW50c1xuICAgIGNvbnN0IGFkanVzdG1lbnRzID0ge1xuICAgICAgLy8gU2FmZXR5LWNyaXRpY2FsIHByb2Nlc3NlcyB3ZWlnaHQgc2FmZXR5IG1vcmUgaGVhdmlseVxuICAgICAgJ3Jpc2tfbWFuYWdlbWVudCc6IHsgc2FmZXR5OiAwLjQsIGNvbXBsZXhpdHk6IDAuMjUsIHNjYWxlOiAwLjIsIG1hdHVyaXR5OiAwLjE1IH0sXG4gICAgICAncXVhbGl0eV9hc3N1cmFuY2UnOiB7IHNhZmV0eTogMC4zNSwgY29tcGxleGl0eTogMC4yNSwgc2NhbGU6IDAuMiwgbWF0dXJpdHk6IDAuMiB9LFxuICAgICAgJ3ZlcmlmaWNhdGlvbic6IHsgc2FmZXR5OiAwLjM1LCBjb21wbGV4aXR5OiAwLjMsIHNjYWxlOiAwLjIsIG1hdHVyaXR5OiAwLjE1IH0sXG4gICAgICAndmFsaWRhdGlvbic6IHsgc2FmZXR5OiAwLjM1LCBjb21wbGV4aXR5OiAwLjI1LCBzY2FsZTogMC4yLCBtYXR1cml0eTogMC4yIH0sXG5cbiAgICAgIC8vIFRlY2huaWNhbCBwcm9jZXNzZXMgd2VpZ2h0IGNvbXBsZXhpdHkgbW9yZSBoZWF2aWx5XG4gICAgICAnc3lzdGVtX2FuYWx5c2lzJzogeyBjb21wbGV4aXR5OiAwLjQsIHNhZmV0eTogMC4yLCBzY2FsZTogMC4yNSwgbWF0dXJpdHk6IDAuMTUgfSxcbiAgICAgICdhcmNoaXRlY3R1cmVfZGVmaW5pdGlvbic6IHsgY29tcGxleGl0eTogMC40LCBzYWZldHk6IDAuMiwgc2NhbGU6IDAuMjUsIG1hdHVyaXR5OiAwLjE1IH0sXG4gICAgICAnZGVzaWduX2RlZmluaXRpb24nOiB7IGNvbXBsZXhpdHk6IDAuNCwgc2FmZXR5OiAwLjIsIHNjYWxlOiAwLjI1LCBtYXR1cml0eTogMC4xNSB9LFxuXG4gICAgICAvLyBNYW5hZ2VtZW50IHByb2Nlc3NlcyB3ZWlnaHQgc2NhbGUgYW5kIG1hdHVyaXR5IG1vcmUgaGVhdmlseVxuICAgICAgJ3Byb2plY3RfcGxhbm5pbmcnOiB7IHNjYWxlOiAwLjM1LCBtYXR1cml0eTogMC4yNSwgY29tcGxleGl0eTogMC4yLCBzYWZldHk6IDAuMiB9LFxuICAgICAgJ3Byb2plY3RfYXNzZXNzbWVudF9jb250cm9sJzogeyBzY2FsZTogMC4zNSwgbWF0dXJpdHk6IDAuMjUsIGNvbXBsZXhpdHk6IDAuMiwgc2FmZXR5OiAwLjIgfSxcbiAgICAgICdjb25maWd1cmF0aW9uX21hbmFnZW1lbnQnOiB7IHNjYWxlOiAwLjMsIG1hdHVyaXR5OiAwLjMsIGNvbXBsZXhpdHk6IDAuMiwgc2FmZXR5OiAwLjIgfSxcbiAgICB9O1xuXG4gICAgcmV0dXJuIGFkanVzdG1lbnRzW3Byb2Nlc3MuaWRdIHx8IGRlZmF1bHRXZWlnaHRzO1xuICB9XG5cbiAgYXBwbHlEZXBlbmRlbmN5Q29uc3RyYWludHMocmVjb21tZW5kYXRpb25zKSB7XG4gICAgY29uc3QgZGVwZW5kZW5jaWVzID0gdGhpcy5kZXBlbmRlbmN5RGF0YS5kZXBlbmRlbmNpZXMgfHwgW107XG4gICAgbGV0IGNoYW5nZWQgPSB0cnVlO1xuICAgIGxldCBpdGVyYXRpb25zID0gMDtcbiAgICBjb25zdCBtYXhJdGVyYXRpb25zID0gMTA7IC8vIFByZXZlbnQgaW5maW5pdGUgbG9vcHNcblxuICAgIC8vIEl0ZXJhdGl2ZWx5IGFwcGx5IGNvbnN0cmFpbnRzIHVudGlsIG5vIG1vcmUgY2hhbmdlc1xuICAgIHdoaWxlIChjaGFuZ2VkICYmIGl0ZXJhdGlvbnMgPCBtYXhJdGVyYXRpb25zKSB7XG4gICAgICBjaGFuZ2VkID0gZmFsc2U7XG4gICAgICBpdGVyYXRpb25zKys7XG5cbiAgICAgIGRlcGVuZGVuY2llcy5mb3JFYWNoKGRlcCA9PiB7XG4gICAgICAgIGNvbnN0IHNvdXJjZVJlYyA9IHJlY29tbWVuZGF0aW9uc1tkZXAuc291cmNlXTtcbiAgICAgICAgY29uc3QgdGFyZ2V0UmVjID0gcmVjb21tZW5kYXRpb25zW2RlcC50YXJnZXRdO1xuXG4gICAgICAgIGlmIChzb3VyY2VSZWMgJiYgdGFyZ2V0UmVjKSB7XG4gICAgICAgICAgY29uc3Qgc291cmNlTGV2ZWwgPSB0aGlzLmdldExldmVsVmFsdWUoc291cmNlUmVjLnJlY29tbWVuZGVkTGV2ZWwpO1xuICAgICAgICAgIGNvbnN0IHJlcXVpcmVkVGFyZ2V0TGV2ZWwgPSB0aGlzLmdldExldmVsVmFsdWUoZGVwLnRhcmdldExldmVsKTtcbiAgICAgICAgICBjb25zdCBjdXJyZW50VGFyZ2V0TGV2ZWwgPSB0aGlzLmdldExldmVsVmFsdWUodGFyZ2V0UmVjLnJlY29tbWVuZGVkTGV2ZWwpO1xuXG4gICAgICAgICAgLy8gSWYgc291cmNlIGlzIGF0IHRoZSBzcGVjaWZpZWQgbGV2ZWwgYW5kIHRhcmdldCBpcyBiZWxvdyByZXF1aXJlZCBtaW5pbXVtXG4gICAgICAgICAgaWYgKHNvdXJjZUxldmVsID49IHRoaXMuZ2V0TGV2ZWxWYWx1ZShkZXAuc291cmNlTGV2ZWwpICYmXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50VGFyZ2V0TGV2ZWwgPCByZXF1aXJlZFRhcmdldExldmVsKSB7XG5cbiAgICAgICAgICAgIGNvbnN0IG5ld0xldmVsID0gZGVwLnRhcmdldExldmVsO1xuICAgICAgICAgICAgdGFyZ2V0UmVjLnJlY29tbWVuZGVkTGV2ZWwgPSBuZXdMZXZlbDtcbiAgICAgICAgICAgIHRhcmdldFJlYy5lZmZvcnQgPSB0aGlzLnByb2Nlc3NEYXRhLnByb2Nlc3Nlcy5maW5kKHAgPT4gcC5pZCA9PT0gZGVwLnRhcmdldCk/LnRhaWxvcmluZ0xldmVsc1tuZXdMZXZlbF0/LmVmZm9ydCB8fCB0YXJnZXRSZWMuZWZmb3J0O1xuICAgICAgICAgICAgdGFyZ2V0UmVjLmNvbXBsZXhpdHkgPSB0aGlzLnByb2Nlc3NEYXRhLnByb2Nlc3Nlcy5maW5kKHAgPT4gcC5pZCA9PT0gZGVwLnRhcmdldCk/LnRhaWxvcmluZ0xldmVsc1tuZXdMZXZlbF0/LmNvbXBsZXhpdHkgfHwgdGFyZ2V0UmVjLmNvbXBsZXhpdHk7XG5cbiAgICAgICAgICAgIC8vIEFkZCBkZXBlbmRlbmN5IGNvbnN0cmFpbnQgdG8gcmF0aW9uYWxlXG4gICAgICAgICAgICB0YXJnZXRSZWMuY29uc3RyYWludHMucHVzaCh7XG4gICAgICAgICAgICAgIHR5cGU6ICdkZXBlbmRlbmN5JyxcbiAgICAgICAgICAgICAgc291cmNlOiBkZXAuc291cmNlLFxuICAgICAgICAgICAgICBzb3VyY2VMZXZlbDogZGVwLnNvdXJjZUxldmVsLFxuICAgICAgICAgICAgICByZWFzb246IGBSZXF1aXJlZCBieSAke3NvdXJjZVJlYy5wcm9jZXNzTmFtZX0gYXQgJHtkZXAuc291cmNlTGV2ZWx9IGxldmVsYCxcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyBUcmFjayB0aGUgZGVwZW5kZW5jeVxuICAgICAgICAgICAgc291cmNlUmVjLmRlcGVuZGVuY2llcy5wdXNoKHtcbiAgICAgICAgICAgICAgdGFyZ2V0OiBkZXAudGFyZ2V0LFxuICAgICAgICAgICAgICB0YXJnZXROYW1lOiB0YXJnZXRSZWMucHJvY2Vzc05hbWUsXG4gICAgICAgICAgICAgIHJlcXVpcmVkTGV2ZWw6IGRlcC50YXJnZXRMZXZlbCxcbiAgICAgICAgICAgICAgdHlwZTogZGVwLnR5cGUgfHwgJ2hvcml6b250YWwnLFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGNoYW5nZWQgPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKGl0ZXJhdGlvbnMgPj0gbWF4SXRlcmF0aW9ucykge1xuICAgICAgLy8gRGVwZW5kZW5jeSBjb25zdHJhaW50IHJlc29sdXRpb24gcmVhY2hlZCBtYXhpbXVtIGl0ZXJhdGlvbnNcbiAgICB9XG4gIH1cblxuICBhcHBseVByb2Nlc3NDb25zdHJhaW50cyhyZWNvbW1lbmRhdGlvbnMsIHNjb3Jlcykge1xuICAgIGNvbnN0IHByb2Nlc3NlcyA9IHRoaXMucHJvY2Vzc0RhdGEucHJvY2Vzc2VzIHx8IFtdO1xuXG4gICAgcHJvY2Vzc2VzLmZvckVhY2gocHJvY2VzcyA9PiB7XG4gICAgICBjb25zdCByZWMgPSByZWNvbW1lbmRhdGlvbnNbcHJvY2Vzcy5pZF07XG4gICAgICBpZiAoIXJlYyB8fCAhcHJvY2Vzcy5jb25zdHJhaW50cykgcmV0dXJuO1xuXG4gICAgICBwcm9jZXNzLmNvbnN0cmFpbnRzLmZvckVhY2goY29uc3RyYWludCA9PiB7XG4gICAgICAgIGlmICh0aGlzLmV2YWx1YXRlQ29uc3RyYWludENvbmRpdGlvbihjb25zdHJhaW50LmNvbmRpdGlvbiwgc2NvcmVzKSkge1xuICAgICAgICAgIGNvbnN0IHJlcXVpcmVkTGV2ZWwgPSBjb25zdHJhaW50LnJlcXVpcmVkTGV2ZWw7XG4gICAgICAgICAgY29uc3QgY3VycmVudExldmVsID0gdGhpcy5nZXRMZXZlbFZhbHVlKHJlYy5yZWNvbW1lbmRlZExldmVsKTtcbiAgICAgICAgICBjb25zdCByZXF1aXJlZExldmVsVmFsdWUgPSB0aGlzLmdldExldmVsVmFsdWUocmVxdWlyZWRMZXZlbCk7XG5cbiAgICAgICAgICBpZiAoY3VycmVudExldmVsIDwgcmVxdWlyZWRMZXZlbFZhbHVlKSB7XG4gICAgICAgICAgICByZWMucmVjb21tZW5kZWRMZXZlbCA9IHJlcXVpcmVkTGV2ZWw7XG4gICAgICAgICAgICByZWMuZWZmb3J0ID0gcHJvY2Vzcy50YWlsb3JpbmdMZXZlbHNbcmVxdWlyZWRMZXZlbF0/LmVmZm9ydCB8fCByZWMuZWZmb3J0O1xuICAgICAgICAgICAgcmVjLmNvbXBsZXhpdHkgPSBwcm9jZXNzLnRhaWxvcmluZ0xldmVsc1tyZXF1aXJlZExldmVsXT8uY29tcGxleGl0eSB8fCByZWMuY29tcGxleGl0eTtcblxuICAgICAgICAgICAgcmVjLmNvbnN0cmFpbnRzLnB1c2goe1xuICAgICAgICAgICAgICB0eXBlOiAncHJvY2VzcycsXG4gICAgICAgICAgICAgIGNvbmRpdGlvbjogY29uc3RyYWludC5jb25kaXRpb24sXG4gICAgICAgICAgICAgIHJlYXNvbjogY29uc3RyYWludC5yYXRpb25hbGUgfHwgJ1Byb2Nlc3MgY29uc3RyYWludCBhcHBsaWVkJyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBldmFsdWF0ZUNvbnN0cmFpbnRDb25kaXRpb24oY29uZGl0aW9uLCBzY29yZXMpIHtcbiAgICB0cnkge1xuICAgICAgLy8gU2ltcGxlIGNvbmRpdGlvbiBldmFsdWF0aW9uIC0gZXh0ZW5kIGFzIG5lZWRlZFxuICAgICAgLy8gRXhhbXBsZTogXCJzYWZldHlfY3JpdGljYWxpdHkgPiAzXCJcbiAgICAgIGNvbnN0IG1hdGNoID0gY29uZGl0aW9uLm1hdGNoKC8oXFx3KylcXHMqKFs+PD1dKylcXHMqKFxcZCtcXC4/XFxkKikvKTtcbiAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICBjb25zdCBbLCBkaW1lbnNpb24sIG9wZXJhdG9yLCB0aHJlc2hvbGRdID0gbWF0Y2g7XG4gICAgICAgIGNvbnN0IHNjb3JlID0gc2NvcmVzW2RpbWVuc2lvbl07XG4gICAgICAgIGNvbnN0IHRocmVzaG9sZFZhbHVlID0gcGFyc2VGbG9hdCh0aHJlc2hvbGQpO1xuXG4gICAgICAgIHN3aXRjaCAob3BlcmF0b3IpIHtcbiAgICAgICAgICBjYXNlICc+JzogcmV0dXJuIHNjb3JlID4gdGhyZXNob2xkVmFsdWU7XG4gICAgICAgICAgY2FzZSAnPj0nOiByZXR1cm4gc2NvcmUgPj0gdGhyZXNob2xkVmFsdWU7XG4gICAgICAgICAgY2FzZSAnPCc6IHJldHVybiBzY29yZSA8IHRocmVzaG9sZFZhbHVlO1xuICAgICAgICAgIGNhc2UgJzw9JzogcmV0dXJuIHNjb3JlIDw9IHRocmVzaG9sZFZhbHVlO1xuICAgICAgICAgIGNhc2UgJz0nOiBjYXNlICc9PSc6IHJldHVybiBNYXRoLmFicyhzY29yZSAtIHRocmVzaG9sZFZhbHVlKSA8IDAuMTtcbiAgICAgICAgICBkZWZhdWx0OiByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgLy8gRmFpbGVkIHRvIGV2YWx1YXRlIGNvbnN0cmFpbnQgY29uZGl0aW9uXG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGNhbGN1bGF0ZUNvbmZpZGVuY2VTY29yZXMocmVjb21tZW5kYXRpb25zLCBzY29yZXMpIHtcbiAgICBPYmplY3QudmFsdWVzKHJlY29tbWVuZGF0aW9ucykuZm9yRWFjaChyZWMgPT4ge1xuICAgICAgbGV0IGNvbmZpZGVuY2UgPSAwLjg7IC8vIEJhc2UgY29uZmlkZW5jZVxuXG4gICAgICAvLyBSZWR1Y2UgY29uZmlkZW5jZSBpZiBzY29yZSBpcyBuZWFyIHRocmVzaG9sZCBib3VuZGFyaWVzXG4gICAgICBjb25zdCBiYXNlU2NvcmUgPSByZWMuYmFzZVNjb3JlO1xuICAgICAgaWYgKChiYXNlU2NvcmUgPj0gMi4wICYmIGJhc2VTY29yZSA8PSAyLjIpIHx8IChiYXNlU2NvcmUgPj0gMy41ICYmIGJhc2VTY29yZSA8PSAzLjcpKSB7XG4gICAgICAgIGNvbmZpZGVuY2UgLT0gMC4yO1xuICAgICAgfVxuXG4gICAgICAvLyBSZWR1Y2UgY29uZmlkZW5jZSBpZiBjb25mbGljdGluZyBjb25zdHJhaW50c1xuICAgICAgaWYgKHJlYy5jb25zdHJhaW50cy5sZW5ndGggPiAyKSB7XG4gICAgICAgIGNvbmZpZGVuY2UgLT0gMC4xO1xuICAgICAgfVxuXG4gICAgICAvLyBJbmNyZWFzZSBjb25maWRlbmNlIGlmIG11bHRpcGxlIGZhY3RvcnMgYWxpZ25cbiAgICAgIGNvbnN0IGV4dHJlbWVTY29yZXMgPSBPYmplY3QudmFsdWVzKHNjb3JlcykuZmlsdGVyKHMgPT4gcyA8PSAxLjUgfHwgcyA+PSA0LjUpLmxlbmd0aDtcbiAgICAgIGlmIChleHRyZW1lU2NvcmVzID49IDIpIHtcbiAgICAgICAgY29uZmlkZW5jZSArPSAwLjE7XG4gICAgICB9XG5cbiAgICAgIHJlYy5jb25maWRlbmNlID0gTWF0aC5tYXgoMC40LCBNYXRoLm1pbigxLjAsIGNvbmZpZGVuY2UpKTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldExldmVsVmFsdWUobGV2ZWwpIHtcbiAgICBjb25zdCB2YWx1ZXMgPSB7ICdiYXNpYyc6IDEsICdzdGFuZGFyZCc6IDIsICdjb21wcmVoZW5zaXZlJzogMyB9O1xuICAgIHJldHVybiB2YWx1ZXNbbGV2ZWxdIHx8IDE7XG4gIH1cblxuICBnZW5lcmF0ZVJhdGlvbmFsZShwcm9jZXNzLCBzY29yZXMsIGxldmVsKSB7XG4gICAgY29uc3QgcmF0aW9uYWxlID0gW107XG4gICAgY29uc3Qgd2VpZ2h0cyA9IHRoaXMuZ2V0UHJvY2Vzc1dlaWdodHMocHJvY2Vzcyk7XG5cbiAgICAvLyBQcmltYXJ5IGRyaXZlcnNcbiAgICBjb25zdCBwcmltYXJ5RmFjdG9ycyA9IE9iamVjdC5rZXlzKHdlaWdodHMpXG4gICAgICAubWFwKGRpbSA9PiAoeyBkaW1lbnNpb246IGRpbSwgd2VpZ2h0OiB3ZWlnaHRzW2RpbV0sIHNjb3JlOiBzY29yZXNbZGltXSB9KSlcbiAgICAgIC5zb3J0KChhLCBiKSA9PiBiLndlaWdodCAtIGEud2VpZ2h0KVxuICAgICAgLnNsaWNlKDAsIDIpO1xuXG4gICAgcHJpbWFyeUZhY3RvcnMuZm9yRWFjaChmYWN0b3IgPT4ge1xuICAgICAgY29uc3QgaW1wYWN0ID0gdGhpcy5nZXRTY29yZUltcGFjdChmYWN0b3Iuc2NvcmUpO1xuICAgICAgcmF0aW9uYWxlLnB1c2goYCR7dGhpcy5nZXREaW1lbnNpb25OYW1lKGZhY3Rvci5kaW1lbnNpb24pfSAoJHtmYWN0b3Iuc2NvcmUudG9GaXhlZCgxKX0vNS4wKSAke2ltcGFjdC5kZXNjcmlwdGlvbn1gKTtcbiAgICB9KTtcblxuICAgIC8vIExldmVsIGp1c3RpZmljYXRpb25cbiAgICBzd2l0Y2ggKGxldmVsKSB7XG4gICAgICBjYXNlICdiYXNpYyc6XG4gICAgICAgIHJhdGlvbmFsZS5wdXNoKCdCYXNpYyBsZXZlbCByZWNvbW1lbmRlZCBmb3IgbG93IGNvbXBsZXhpdHkgYW5kIHJpc2sgcHJvZmlsZScpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3N0YW5kYXJkJzpcbiAgICAgICAgcmF0aW9uYWxlLnB1c2goJ1N0YW5kYXJkIGxldmVsIHByb3ZpZGVzIGJhbGFuY2VkIGZvcm1hbGl0eSBmb3IgbW9kZXJhdGUgY29tcGxleGl0eScpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2NvbXByZWhlbnNpdmUnOlxuICAgICAgICByYXRpb25hbGUucHVzaCgnQ29tcHJlaGVuc2l2ZSBsZXZlbCByZXF1aXJlZCBmb3IgaGlnaCBjb21wbGV4aXR5IGFuZCBjcml0aWNhbGl0eScpO1xuICAgICAgICBicmVhaztcbiAgICB9XG5cbiAgICByZXR1cm4gcmF0aW9uYWxlO1xuICB9XG5cbiAgZ2V0RGltZW5zaW9uTmFtZShkaW1lbnNpb24pIHtcbiAgICBjb25zdCBuYW1lcyA9IHtcbiAgICAgIGNvbXBsZXhpdHk6ICdUZWNobmljYWwgQ29tcGxleGl0eScsXG4gICAgICBzYWZldHk6ICdTYWZldHkgQ3JpdGljYWxpdHknLFxuICAgICAgc2NhbGU6ICdQcm9qZWN0IFNjYWxlJyxcbiAgICAgIG1hdHVyaXR5OiAnT3JnYW5pemF0aW9uYWwgTWF0dXJpdHknLFxuICAgIH07XG4gICAgcmV0dXJuIG5hbWVzW2RpbWVuc2lvbl0gfHwgZGltZW5zaW9uO1xuICB9XG5cbiAgZ2V0U2NvcmVJbXBhY3Qoc2NvcmUpIHtcbiAgICBpZiAoc2NvcmUgPD0gMi4wKSByZXR1cm4geyBsZXZlbDogJ2xvdycsIGRlc2NyaXB0aW9uOiAnc3VnZ2VzdHMgbWluaW1hbCBmb3JtYWxpdHknIH07XG4gICAgaWYgKHNjb3JlIDw9IDMuNSkgcmV0dXJuIHsgbGV2ZWw6ICdtZWRpdW0nLCBkZXNjcmlwdGlvbjogJ2luZGljYXRlcyBtb2RlcmF0ZSBmb3JtYWxpdHkgbmVlZGVkJyB9O1xuICAgIHJldHVybiB7IGxldmVsOiAnaGlnaCcsIGRlc2NyaXB0aW9uOiAncmVxdWlyZXMgaGlnaCBmb3JtYWxpdHkgYW5kIHJpZ29yJyB9O1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZWNvbW1lbmRhdGlvbnMtY29udGVudCcpO1xuICAgIGlmICghY29udGFpbmVyKSByZXR1cm47XG5cbiAgICBjb25zdCBhc3Nlc3NtZW50RGF0YSA9IHRoaXMuYXBwLmdldEFzc2Vzc21lbnREYXRhKCk7XG5cbiAgICBpZiAoIWFzc2Vzc21lbnREYXRhLnJlY29tbWVuZGF0aW9ucyB8fCBPYmplY3Qua2V5cyhhc3Nlc3NtZW50RGF0YS5yZWNvbW1lbmRhdGlvbnMpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhpcy5yZW5kZXJOb1JlY29tbWVuZGF0aW9ucyhjb250YWluZXIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMucmVuZGVyUmVjb21tZW5kYXRpb25zKGNvbnRhaW5lciwgYXNzZXNzbWVudERhdGEpO1xuICB9XG5cbiAgcmVuZGVyTm9SZWNvbW1lbmRhdGlvbnMoY29udGFpbmVyKSB7XG4gICAgY29udGFpbmVyLmlubmVySFRNTCA9IGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ0ZXh0LWNlbnRlciBweS01XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmRcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtYm9keVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJiaSBiaS1leGNsYW1hdGlvbi1jaXJjbGUgZGlzcGxheS0xIHRleHQtd2FybmluZyBtYi0zXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGgzPk5vIFJlY29tbWVuZGF0aW9ucyBBdmFpbGFibGU8L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9XCJ0ZXh0LW11dGVkIG1iLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb21wbGV0ZSB0aGUgYXNzZXNzbWVudCBmaXJzdCB0byBnZW5lcmF0ZSBwZXJzb25hbGl6ZWQgcHJvY2VzcyB0YWlsb3JpbmcgcmVjb21tZW5kYXRpb25zLlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiIG9uY2xpY2s9XCJ3aW5kb3cuc2VBcHAuc2hvd1ZpZXcoJ2Fzc2Vzc21lbnQnKVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYmkgYmktY2xpcGJvYXJkLWNoZWNrXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0YXJ0IEFzc2Vzc21lbnRcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuICB9XG5cbiAgcmVuZGVyUmVjb21tZW5kYXRpb25zKGNvbnRhaW5lciwgYXNzZXNzbWVudERhdGEpIHtcbiAgICBjb25zdCByZWNvbW1lbmRhdGlvbnMgPSBhc3Nlc3NtZW50RGF0YS5yZWNvbW1lbmRhdGlvbnM7XG5cbiAgICAvLyBHcm91cCByZWNvbW1lbmRhdGlvbnMgYnkgY2F0ZWdvcnlcbiAgICBjb25zdCBncm91cGVkUmVjcyA9IHRoaXMuZ3JvdXBSZWNvbW1lbmRhdGlvbnNCeUNhdGVnb3J5KHJlY29tbWVuZGF0aW9ucyk7XG5cbiAgICAvLyBDYWxjdWxhdGUgc3VtbWFyeSBzdGF0aXN0aWNzXG4gICAgY29uc3Qgc3RhdHMgPSB0aGlzLmNhbGN1bGF0ZVN1bW1hcnlTdGF0cyhyZWNvbW1lbmRhdGlvbnMpO1xuXG4gICAgY29uc3QgaHRtbCA9IGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtYi00XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQgc2hhZG93LXNtXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWhlYWRlciBiZy1ncmFkaWVudC1wcmltYXJ5IHRleHQtd2hpdGVcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz1cImNhcmQtdGl0bGUgbWItMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYmkgYmktbGlnaHRidWxiLWZpbGxcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUHJvY2VzcyBUYWlsb3JpbmcgUmVjb21tZW5kYXRpb25zXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2g0PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtYm9keVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInJvdyBtYi00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1tZC0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdGF0LWNhcmQgYm9yZGVyLXN0YXJ0LXByaW1hcnlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwic3RhdC1udW1iZXIgdGV4dC1zdWNjZXNzXCI+JHtzdGF0cy5iYXNpY308L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInN0YXQtbGFiZWxcIj5CYXNpYyBMZXZlbDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1tZC0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdGF0LWNhcmQgYm9yZGVyLXN0YXJ0LXdhcm5pbmdcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwic3RhdC1udW1iZXIgdGV4dC13YXJuaW5nXCI+JHtzdGF0cy5zdGFuZGFyZH08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInN0YXQtbGFiZWxcIj5TdGFuZGFyZCBMZXZlbDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1tZC0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdGF0LWNhcmQgYm9yZGVyLXN0YXJ0LWRhbmdlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJzdGF0LW51bWJlciB0ZXh0LWRhbmdlclwiPiR7c3RhdHMuY29tcHJlaGVuc2l2ZX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInN0YXQtbGFiZWxcIj5Db21wcmVoZW5zaXZlIExldmVsPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLTNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN0YXQtY2FyZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJzdGF0LW51bWJlclwiPiR7c3RhdHMudG90YWxFZmZvcnR9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJzdGF0LWxhYmVsXCI+VG90YWwgRWZmb3J0IFNjb3JlPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYWxlcnQgYWxlcnQtaW5mb1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYmkgYmktaW5mby1jaXJjbGUgbWUtMlwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPkltcGxlbWVudGF0aW9uIEd1aWRhbmNlOjwvc3Ryb25nPiBTdGFydCB3aXRoIGhpZ2gtcHJpb3JpdHkgcHJvY2Vzc2VzIGFuZCBncmFkdWFsbHkgaW1wbGVtZW50IG90aGVycy4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUGF5IHNwZWNpYWwgYXR0ZW50aW9uIHRvIGRlcGVuZGVuY3kgcmVsYXRpb25zaGlwcyBzaG93biBpbiB0aGUgdmlzdWFsaXphdGlvbi5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAke09iamVjdC5rZXlzKGdyb3VwZWRSZWNzKS5tYXAoY2F0ZWdvcnkgPT4gdGhpcy5yZW5kZXJDYXRlZ29yeVNlY3Rpb24oY2F0ZWdvcnksIGdyb3VwZWRSZWNzW2NhdGVnb3J5XSkpLmpvaW4oJycpfVxuICAgICAgICBgO1xuXG4gICAgY29udGFpbmVyLmlubmVySFRNTCA9IGh0bWw7XG4gICAgdGhpcy5hdHRhY2hSZWNvbW1lbmRhdGlvbkV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICBncm91cFJlY29tbWVuZGF0aW9uc0J5Q2F0ZWdvcnkocmVjb21tZW5kYXRpb25zKSB7XG4gICAgY29uc3QgZ3JvdXBlZCA9IHt9O1xuXG4gICAgT2JqZWN0LnZhbHVlcyhyZWNvbW1lbmRhdGlvbnMpLmZvckVhY2gocmVjID0+IHtcbiAgICAgIGNvbnN0IGNhdGVnb3J5ID0gcmVjLmNhdGVnb3J5IHx8ICdvdGhlcic7XG4gICAgICBpZiAoIWdyb3VwZWRbY2F0ZWdvcnldKSB7XG4gICAgICAgIGdyb3VwZWRbY2F0ZWdvcnldID0gW107XG4gICAgICB9XG4gICAgICBncm91cGVkW2NhdGVnb3J5XS5wdXNoKHJlYyk7XG4gICAgfSk7XG5cbiAgICAvLyBTb3J0IHByb2Nlc3NlcyB3aXRoaW4gZWFjaCBjYXRlZ29yeSBieSBuYW1lXG4gICAgT2JqZWN0LmtleXMoZ3JvdXBlZCkuZm9yRWFjaChjYXRlZ29yeSA9PiB7XG4gICAgICBncm91cGVkW2NhdGVnb3J5XS5zb3J0KChhLCBiKSA9PiBhLnByb2Nlc3NOYW1lLmxvY2FsZUNvbXBhcmUoYi5wcm9jZXNzTmFtZSkpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGdyb3VwZWQ7XG4gIH1cblxuICByZW5kZXJDYXRlZ29yeVNlY3Rpb24oY2F0ZWdvcnksIHByb2Nlc3Nlcykge1xuICAgIGNvbnN0IGNhdGVnb3J5TmFtZSA9IHRoaXMucHJvY2Vzc0RhdGEucHJvY2Vzc0NhdGVnb3JpZXM/LltjYXRlZ29yeV0gfHwgY2F0ZWdvcnk7XG5cbiAgICByZXR1cm4gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIm1iLTRcIj5cbiAgICAgICAgICAgICAgICA8aDUgY2xhc3M9XCJtYi0zXCI+XG4gICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYmkgYmktJHt0aGlzLmdldENhdGVnb3J5SWNvbihjYXRlZ29yeSl9XCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICAke2NhdGVnb3J5TmFtZX1cbiAgICAgICAgICAgICAgICA8L2g1PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgJHtwcm9jZXNzZXMubWFwKHByb2Nlc3MgPT4gdGhpcy5yZW5kZXJQcm9jZXNzQ2FyZChwcm9jZXNzKSkuam9pbignJyl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYDtcbiAgfVxuXG4gIHJlbmRlclByb2Nlc3NDYXJkKHByb2Nlc3MpIHtcbiAgICBjb25zdCBsZXZlbENsYXNzID0gcHJvY2Vzcy5yZWNvbW1lbmRlZExldmVsO1xuICAgIGNvbnN0IGNvbmZpZGVuY2VQZXJjZW50ID0gTWF0aC5yb3VuZChwcm9jZXNzLmNvbmZpZGVuY2UgKiAxMDApO1xuXG4gICAgcmV0dXJuIGBcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtbGctNiBtYi0zXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInByb2Nlc3MtY2FyZCBjYXJkICR7bGV2ZWxDbGFzc31cIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtYm9keVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBhbGlnbi1pdGVtcy1zdGFydCBtYi0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPVwicHJvY2Vzcy10aXRsZSBtYi0xXCI+JHtwcm9jZXNzLnByb2Nlc3NOYW1lfTwvaDY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJsZXZlbC1iYWRnZSBsZXZlbC0ke2xldmVsQ2xhc3N9XCI+JHtwcm9jZXNzLnJlY29tbWVuZGVkTGV2ZWx9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtYi0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNtYWxsIGNsYXNzPVwidGV4dC1tdXRlZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFZmZvcnQ6IDxzdHJvbmc+JHtwcm9jZXNzLmVmZm9ydH08L3N0cm9uZz4gfCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29tcGxleGl0eTogPHN0cm9uZz4ke3Byb2Nlc3MuY29tcGxleGl0eX08L3N0cm9uZz4gfCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29uZmlkZW5jZTogPHN0cm9uZz4ke2NvbmZpZGVuY2VQZXJjZW50fSU8L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NtYWxsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtYi0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz5SYXRpb25hbGU6PC9zdHJvbmc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPVwibGlzdC11bnN0eWxlZCBtdC0xIG1iLTBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHtwcm9jZXNzLnJhdGlvbmFsZS5tYXAocmVhc29uID0+IGA8bGkgY2xhc3M9XCJ0ZXh0LXNtYWxsIHRleHQtbXV0ZWRcIj7igKIgJHtyZWFzb259PC9saT5gKS5qb2luKCcnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICR7cHJvY2Vzcy5jb25zdHJhaW50cy5sZW5ndGggPiAwID8gYFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtYi0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+Q29uc3RyYWludHMgQXBwbGllZDo8L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPVwibGlzdC11bnN0eWxlZCBtdC0xIG1iLTBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7cHJvY2Vzcy5jb25zdHJhaW50cy5tYXAoY29uc3RyYWludCA9PiBgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPVwidGV4dC1zbWFsbCB0ZXh0LXdhcm5pbmdcIj7igKIgJHtjb25zdHJhaW50LnJlYXNvbn08L2xpPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYCkuam9pbignJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICBgIDogJyd9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICR7cHJvY2Vzcy5kZXBlbmRlbmNpZXMubGVuZ3RoID4gMCA/IGBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwibWItM1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPkRlcGVuZGVuY2llczo8L3N0cm9uZz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPVwiZGVwZW5kZW5jeS1saXN0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAke3Byb2Nlc3MuZGVwZW5kZW5jaWVzLm1hcChkZXAgPT4gYFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz1cImRlcGVuZGVuY3ktaXRlbSAke2RlcC50eXBlID09PSAndmVydGljYWwnID8gJ2NyaXRpY2FsJyA6ICdpbXBvcnRhbnQnfVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPiR7ZGVwLnRhcmdldE5hbWV9PC9zdHJvbmc+IHJlcXVpcmVzIDxlbT4ke2RlcC5yZXF1aXJlZExldmVsfTwvZW0+IGxldmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImJhZGdlIGJhZGdlLXNtIGJnLXNlY29uZGFyeSBtcy0xXCI+JHtkZXAudHlwZX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc21hbGw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGApLmpvaW4oJycpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgYCA6ICcnfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1lbmRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1vdXRsaW5lLXByaW1hcnkgYnRuLXNtXCIgb25jbGljaz1cIndpbmRvdy5zZUFwcC5zaG93UHJvY2Vzc0RldGFpbHMoJyR7cHJvY2Vzcy5wcm9jZXNzSWR9JylcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJiaSBiaS1pbmZvLWNpcmNsZVwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRGV0YWlsc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIGA7XG4gIH1cblxuICBjYWxjdWxhdGVTdW1tYXJ5U3RhdHMocmVjb21tZW5kYXRpb25zKSB7XG4gICAgY29uc3Qgc3RhdHMgPSB7XG4gICAgICBiYXNpYzogMCxcbiAgICAgIHN0YW5kYXJkOiAwLFxuICAgICAgY29tcHJlaGVuc2l2ZTogMCxcbiAgICAgIHRvdGFsRWZmb3J0OiAwLFxuICAgICAgYXZlcmFnZUNvbmZpZGVuY2U6IDAsXG4gICAgfTtcblxuICAgIGNvbnN0IHJlY3MgPSBPYmplY3QudmFsdWVzKHJlY29tbWVuZGF0aW9ucyk7XG5cbiAgICByZWNzLmZvckVhY2gocmVjID0+IHtcbiAgICAgIHN0YXRzW3JlYy5yZWNvbW1lbmRlZExldmVsXSsrO1xuICAgICAgc3RhdHMudG90YWxFZmZvcnQgKz0gcmVjLmVmZm9ydCB8fCAwO1xuICAgIH0pO1xuXG4gICAgc3RhdHMuYXZlcmFnZUNvbmZpZGVuY2UgPSByZWNzLmxlbmd0aCA+IDBcbiAgICAgID8gcmVjcy5yZWR1Y2UoKHN1bSwgcmVjKSA9PiBzdW0gKyByZWMuY29uZmlkZW5jZSwgMCkgLyByZWNzLmxlbmd0aFxuICAgICAgOiAwO1xuXG4gICAgcmV0dXJuIHN0YXRzO1xuICB9XG5cbiAgZ2V0Q2F0ZWdvcnlJY29uKGNhdGVnb3J5KSB7XG4gICAgY29uc3QgaWNvbnMgPSB7XG4gICAgICAndGVjaG5pY2FsX21hbmFnZW1lbnQnOiAnZ2VhcicsXG4gICAgICAndGVjaG5pY2FsJzogJ2NwdScsXG4gICAgICAnb3RoZXInOiAnY2lyY2xlJyxcbiAgICB9O1xuICAgIHJldHVybiBpY29uc1tjYXRlZ29yeV0gfHwgJ2NpcmNsZSc7XG4gIH1cblxuICBhdHRhY2hSZWNvbW1lbmRhdGlvbkV2ZW50TGlzdGVuZXJzKCkge1xuICAgIC8vIEFkZCBhbnkgaW50ZXJhY3RpdmUgZXZlbnQgbGlzdGVuZXJzIGhlcmVcbiAgICAvLyBDdXJyZW50bHkgaGFuZGxlZCB0aHJvdWdoIG9uY2xpY2sgYXR0cmlidXRlcyBpbiB0aGUgSFRNTFxuICB9XG5cbiAgLy8gUHVibGljIG1ldGhvZHMgZm9yIGFwcCBpbnRlZ3JhdGlvblxuICBnZXRSZWNvbW1lbmRhdGlvbnMoKSB7XG4gICAgcmV0dXJuIHRoaXMucmVjb21tZW5kYXRpb25zO1xuICB9XG5cbiAgZ2V0UHJvY2Vzc1JlY29tbWVuZGF0aW9uKHByb2Nlc3NJZCkge1xuICAgIHJldHVybiB0aGlzLnJlY29tbWVuZGF0aW9uc1twcm9jZXNzSWRdO1xuICB9XG59XG5cbi8vIEV4cG9ydCBmb3IgZ2xvYmFsIGFjY2Vzc1xud2luZG93LlJlY29tbWVuZGF0aW9uRW5naW5lID0gUmVjb21tZW5kYXRpb25FbmdpbmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./js/components/recommendations.js\n\n}");

/***/ }),

/***/ "./js/components/visualization.js":
/*!****************************************!*\
  !*** ./js/components/visualization.js ***!
  \****************************************/
/***/ (() => {

eval("{/**\n * Process Network Visualizer Component\n * Creates interactive D3.js network diagrams showing process relationships\n */\n\nclass ProcessNetworkVisualizer {\n  constructor(processData, dependencyData, app) {\n    this.processData = processData;\n    this.dependencyData = dependencyData;\n    this.app = app;\n    this.svg = null;\n    this.simulation = null;\n    this.nodes = [];\n    this.links = [];\n    this.width = 800;\n    this.height = 600;\n    this.zoom = null;\n    this.currentFilters = {\n      categories: new Set(['technical_management', 'technical']),\n      levels: new Set(['basic', 'standard', 'comprehensive']),\n      showDependencies: true,\n      showMetrics: true,\n      showRecommendations: true,\n      searchTerm: '',\n      layoutSettings: {\n        chargeStrength: -200,\n        linkStrength: 0.5,\n      },\n    };\n  }\n\n  render() {\n    this.setupContainer();\n    this.renderControls();\n    this.prepareData();\n    this.createVisualization();\n    this.setupEventListeners();\n  }\n\n  setupContainer() {\n    const container = document.getElementById('network-visualization');\n    if (!container) return;\n\n    // Clear existing content\n    container.innerHTML = '';\n\n    // Get container dimensions\n    const rect = container.getBoundingClientRect();\n    this.width = Math.max(800, rect.width - 20);\n    this.height = Math.max(600, rect.height - 20);\n  }\n\n  renderControls() {\n    const controlsContainer = document.getElementById('visualization-controls');\n    if (!controlsContainer) return;\n\n    const html = `\n            <div class=\"control-group\">\n                <label class=\"control-label\">Search Processes</label>\n                <div class=\"input-group input-group-sm\">\n                    <span class=\"input-group-text\">\n                        <i class=\"bi bi-search\"></i>\n                    </span>\n                    <input type=\"text\" class=\"form-control\" id=\"process-search\" \n                           placeholder=\"Type to search processes...\">\n                </div>\n            </div>\n\n            <div class=\"control-group\">\n                <label class=\"control-label\">Process Categories</label>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"filter-technical-mgmt\" checked>\n                    <label class=\"form-check-label\" for=\"filter-technical-mgmt\">\n                        Technical Management\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"filter-technical\" checked>\n                    <label class=\"form-check-label\" for=\"filter-technical\">\n                        Technical Processes\n                    </label>\n                </div>\n            </div>\n\n            <div class=\"control-group\">\n                <label class=\"control-label\">Tailoring Levels</label>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"filter-basic\" checked>\n                    <label class=\"form-check-label\" for=\"filter-basic\">\n                        <span class=\"level-badge level-basic\">Basic</span>\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"filter-standard\" checked>\n                    <label class=\"form-check-label\" for=\"filter-standard\">\n                        <span class=\"level-badge level-standard\">Standard</span>\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"filter-comprehensive\" checked>\n                    <label class=\"form-check-label\" for=\"filter-comprehensive\">\n                        <span class=\"level-badge level-comprehensive\">Comprehensive</span>\n                    </label>\n                </div>\n            </div>\n\n            <div class=\"control-group\">\n                <label class=\"control-label\">Display Options</label>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"show-dependencies\" checked>\n                    <label class=\"form-check-label\" for=\"show-dependencies\">\n                        Show Dependencies\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"show-labels\" checked>\n                    <label class=\"form-check-label\" for=\"show-labels\">\n                        Show Labels\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"show-metrics\" checked>\n                    <label class=\"form-check-label\" for=\"show-metrics\">\n                        Show Metrics\n                    </label>\n                </div>\n                <div class=\"form-check form-check-sm\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"show-recommendations\" checked>\n                    <label class=\"form-check-label\" for=\"show-recommendations\">\n                        Show Recommendations\n                    </label>\n                </div>\n            </div>\n\n            <div class=\"control-group\">\n                <label class=\"control-label\">Layout</label>\n                <select class=\"form-select form-select-sm\" id=\"layout-select\">\n                    <option value=\"force\">Force-Directed</option>\n                    <option value=\"circular\">Circular</option>\n                    <option value=\"hierarchical\">Hierarchical</option>\n                </select>\n            </div>\n\n            <div class=\"control-group\">\n                <label class=\"control-label\">Force Layout Settings</label>\n                <div class=\"input-group input-group-sm\">\n                    <span class=\"input-group-text\">Charge</span>\n                    <input type=\"range\" class=\"form-range\" id=\"charge-strength\" min=\"-1000\" max=\"-50\" value=\"-200\">\n                    <span class=\"input-group-text\" id=\"charge-value\">-200</span>\n                </div>\n                <div class=\"input-group input-group-sm\">\n                    <span class=\"input-group-text\">Link</span>\n                    <input type=\"range\" class=\"form-range\" id=\"link-strength\" min=\"0\" max=\"2\" step=\"0.1\" value=\"0.5\">\n                    <span class=\"input-group-text\" id=\"link-value\">0.5</span>\n                </div>\n            </div>\n\n            <div class=\"control-group\">\n                <button class=\"btn btn-outline-primary btn-sm w-100\" id=\"reset-filters-btn\">\n                    <i class=\"bi bi-arrow-clockwise\"></i>\n                    Reset Filters\n                </button>\n                <button class=\"btn btn-outline-secondary btn-sm w-100 mt-2\" id=\"export-network-btn\">\n                    <i class=\"bi bi-download\"></i>\n                    Export Network\n                </button>\n                <button class=\"btn btn-outline-info btn-sm w-100 mt-2\" id=\"help-network-btn\">\n                    <i class=\"bi bi-question-circle\"></i>\n                    Help & Tips\n                </button>\n            </div>\n        `;\n\n    controlsContainer.innerHTML = html;\n    this.attachControlEventListeners();\n  }\n\n  attachControlEventListeners() {\n    // Search functionality\n    const searchInput = document.getElementById('process-search');\n    if (searchInput) {\n      searchInput.addEventListener('input', (e) => {\n        this.currentFilters.searchTerm = e.target.value.toLowerCase();\n        this.updateVisualization();\n      });\n    }\n\n    // Category filters\n    ['technical-mgmt', 'technical'].forEach(category => {\n      const checkbox = document.getElementById(`filter-${category}`);\n      if (checkbox) {\n        checkbox.addEventListener('change', (e) => {\n          const categoryKey = category === 'technical-mgmt' ? 'technical_management' : 'technical';\n          if (e.target.checked) {\n            this.currentFilters.categories.add(categoryKey);\n          } else {\n            this.currentFilters.categories.delete(categoryKey);\n          }\n          this.updateVisualization();\n        });\n      }\n    });\n\n    // Level filters\n    ['basic', 'standard', 'comprehensive'].forEach(level => {\n      const checkbox = document.getElementById(`filter-${level}`);\n      if (checkbox) {\n        checkbox.addEventListener('change', (e) => {\n          if (e.target.checked) {\n            this.currentFilters.levels.add(level);\n          } else {\n            this.currentFilters.levels.delete(level);\n          }\n          this.updateVisualization();\n        });\n      }\n    });\n\n    // Display options\n    const showDepsCheckbox = document.getElementById('show-dependencies');\n    if (showDepsCheckbox) {\n      showDepsCheckbox.addEventListener('change', (e) => {\n        this.currentFilters.showDependencies = e.target.checked;\n        this.updateVisualization();\n      });\n    }\n\n    const showLabelsCheckbox = document.getElementById('show-labels');\n    if (showLabelsCheckbox) {\n      showLabelsCheckbox.addEventListener('change', (e) => {\n        this.toggleLabels(e.target.checked);\n      });\n    }\n\n    // Layout selection\n    const layoutSelect = document.getElementById('layout-select');\n    if (layoutSelect) {\n      layoutSelect.addEventListener('change', (e) => {\n        this.changeLayout(e.target.value);\n      });\n    }\n\n    // Force layout settings\n    const chargeSlider = document.getElementById('charge-strength');\n    const chargeValue = document.getElementById('charge-value');\n    if (chargeSlider && chargeValue) {\n      chargeSlider.addEventListener('input', (e) => {\n        const value = parseInt(e.target.value);\n        chargeValue.textContent = value;\n        this.currentFilters.layoutSettings.chargeStrength = value;\n        this.updateForceLayout();\n      });\n    }\n\n    const linkSlider = document.getElementById('link-strength');\n    const linkValue = document.getElementById('link-value');\n    if (linkSlider && linkValue) {\n      linkSlider.addEventListener('input', (e) => {\n        const value = parseFloat(e.target.value);\n        linkValue.textContent = value;\n        this.currentFilters.layoutSettings.linkStrength = value;\n        this.updateForceLayout();\n      });\n    }\n\n    // Display options\n    const showMetricsCheckbox = document.getElementById('show-metrics');\n    if (showMetricsCheckbox) {\n      showMetricsCheckbox.addEventListener('change', (e) => {\n        this.currentFilters.showMetrics = e.target.checked;\n        this.updateVisualization();\n      });\n    }\n\n    const showRecsCheckbox = document.getElementById('show-recommendations');\n    if (showRecsCheckbox) {\n      showRecsCheckbox.addEventListener('change', (e) => {\n        this.currentFilters.showRecommendations = e.target.checked;\n        this.updateVisualization();\n      });\n    }\n\n    // Export button\n    const exportBtn = document.getElementById('export-network-btn');\n    if (exportBtn) {\n      exportBtn.addEventListener('click', () => {\n        this.exportNetwork();\n      });\n    }\n\n    // Help button\n    const helpBtn = document.getElementById('help-network-btn');\n    if (helpBtn) {\n      helpBtn.addEventListener('click', () => {\n        this.showHelpModal();\n      });\n    }\n\n    // Reset filters\n    const resetBtn = document.getElementById('reset-filters-btn');\n    if (resetBtn) {\n      resetBtn.addEventListener('click', () => {\n        this.resetFilters();\n      });\n    }\n  }\n\n  updateForceLayout() {\n    if (this.simulation) {\n      this.simulation.force('charge', d3.forceManyBody().strength(this.currentFilters.layoutSettings.chargeStrength));\n      this.simulation.force('link', d3.forceLink(this.links).strength(this.currentFilters.layoutSettings.linkStrength));\n      this.simulation.alpha(0.3).restart();\n    }\n  }\n\n  exportNetwork() {\n    const svgElement = this.svg.node();\n    const serializer = new XMLSerializer();\n    const source = serializer.serializeToString(svgElement);\n\n    // Add namespace\n    const svgWithNamespace = source.replace('<svg', '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n\n    // Create download link\n    const blob = new Blob([svgWithNamespace], { type: 'image/svg+xml' });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'se-process-network.svg';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }\n\n  showHelpModal() {\n    const modalHtml = `\n            <div class=\"modal fade\" id=\"network-help-modal\" tabindex=\"-1\">\n                <div class=\"modal-dialog modal-lg\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\">Network Visualization Help</h5>\n                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <h6>Interactive Features</h6>\n                            <ul>\n                                <li><strong>Drag nodes</strong> to reposition them</li>\n                                <li><strong>Click nodes</strong> to view process details</li>\n                                <li><strong>Mouse wheel</strong> to zoom in/out</li>\n                                <li><strong>Drag background</strong> to pan the view</li>\n                            </ul>\n                            \n                            <h6>Filtering Options</h6>\n                            <ul>\n                                <li><strong>Search</strong>: Filter processes by name</li>\n                                <li><strong>Categories</strong>: Show/hide process categories</li>\n                                <li><strong>Levels</strong>: Filter by tailoring levels</li>\n                                <li><strong>Dependencies</strong>: Toggle dependency visibility</li>\n                            </ul>\n                            \n                            <h6>Layout Controls</h6>\n                            <ul>\n                                <li><strong>Force-Directed</strong>: Dynamic physics-based layout</li>\n                                <li><strong>Circular</strong>: Organized circular arrangement</li>\n                                <li><strong>Hierarchical</strong>: Tree-like structure</li>\n                                <li><strong>Charge/Link</strong>: Adjust node repulsion and link strength</li>\n                            </ul>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `;\n\n    // Remove existing modal if any\n    const existingModal = document.getElementById('network-help-modal');\n    if (existingModal) {\n      existingModal.remove();\n    }\n\n    // Add modal to DOM\n    document.body.insertAdjacentHTML('beforeend', modalHtml);\n\n    // Show modal\n    const modal = new bootstrap.Modal(document.getElementById('network-help-modal'));\n    modal.show();\n  }\n\n  prepareData() {\n    const processes = this.processData.processes || [];\n    const dependencies = this.dependencyData.dependencies || [];\n    const recommendations = this.app.getAssessmentData().recommendations;\n\n    // Create nodes\n    this.nodes = processes.map(process => {\n      const recommendation = recommendations?.[process.id];\n      const recommendedLevel = recommendation?.recommendedLevel || 'basic';\n\n      return {\n        id: process.id,\n        name: process.name,\n        category: process.category,\n        description: process.description,\n        recommendedLevel: recommendedLevel,\n        effort: recommendation?.effort || 1,\n        complexity: recommendation?.complexity || 1,\n        confidence: recommendation?.confidence || 0.8,\n        x: Math.random() * this.width,\n        y: Math.random() * this.height,\n      };\n    });\n\n    // Create links from dependencies\n    this.links = dependencies.map(dep => ({\n      source: dep.source,\n      target: dep.target,\n      type: dep.type || 'horizontal',\n      sourceLevel: dep.sourceLevel,\n      targetLevel: dep.targetLevel,\n      strength: dep.type === 'vertical' ? 0.8 : 0.4,\n    }));\n  }\n\n  createVisualization() {\n    const container = document.getElementById('network-visualization');\n    if (!container) return;\n\n    // Create SVG container with responsive design\n    this.svg = d3.select(container)\n      .append('svg')\n      .attr('width', '100%')\n      .attr('height', '100%')\n      .attr('viewBox', [0, 0, this.width, this.height])\n      .attr('preserveAspectRatio', 'xMidYMid meet')\n      .attr('class', 'network-svg')\n      .style('background', '#f8f9fa');\n\n    // Add zoom behavior with smooth transitions\n    this.zoom = d3.zoom()\n      .scaleExtent([0.1, 8])\n      .translateExtent([[0, 0], [this.width, this.height]])\n      .on('zoom', (event) => {\n        this.svg.select('.zoom-container').attr('transform', event.transform);\n      });\n\n    this.svg.call(this.zoom)\n      .call(this.zoom.transform, d3.zoomIdentity);\n\n    // Create container for zoomable content\n    const zoomContainer = this.svg.append('g').attr('class', 'zoom-container');\n\n    // Add sophisticated arrow markers for different link types\n    const defs = this.svg.append('defs');\n\n    const markerTypes = [\n      { id: 'dependency', color: '#dc3545', width: 4 },\n      { id: 'information', color: '#0d6efd', width: 3 },\n      { id: 'sequential', color: '#198754', width: 2 },\n    ];\n\n    markerTypes.forEach(type => {\n      defs.append('marker')\n        .attr('id', `arrow-${type.id}`)\n        .attr('viewBox', '0 -5 10 10')\n        .attr('refX', 18)\n        .attr('refY', 0)\n        .attr('markerWidth', 8)\n        .attr('markerHeight', 8)\n        .attr('orient', 'auto')\n        .append('path')\n        .attr('d', 'M0,-5L10,0L0,5')\n        .attr('fill', type.color)\n        .attr('stroke', type.color)\n        .attr('stroke-width', type.width);\n    });\n\n    // Create enhanced force simulation with custom parameters\n    this.simulation = d3.forceSimulation(this.nodes)\n      .force('link', d3.forceLink(this.links)\n        .id(d => d.id)\n        .strength(this.currentFilters.layoutSettings.linkStrength)\n        .distance(100))\n      .force('charge', d3.forceManyBody().strength(this.currentFilters.layoutSettings.chargeStrength))\n      .force('center', d3.forceCenter(this.width / 2, this.height / 2))\n      .force('collision', d3.forceCollide().radius(45))\n      .force('x', d3.forceX(this.width / 2).strength(0.05))\n      .force('y', d3.forceY(this.height / 2).strength(0.05));\n\n    // Draw links with enhanced styling\n    this.linkElements = zoomContainer.append('g')\n      .attr('class', 'links')\n      .selectAll('line')\n      .data(this.links)\n      .enter()\n      .append('line')\n      .attr('class', d => `network-link link-${d.type}`)\n      .attr('marker-end', d => `url(#arrow-${d.type})`)\n      .attr('stroke-width', d => {\n        const strengths = { dependency: 3, information: 2, sequential: 1.5 };\n        return strengths[d.type] || 1.5;\n      })\n      .attr('stroke-opacity', 0.8)\n      .attr('stroke-linecap', 'round');\n\n    // Draw nodes with enhanced styling and interactivity\n    this.nodeElements = zoomContainer.append('g')\n      .attr('class', 'nodes')\n      .selectAll('circle')\n      .data(this.nodes)\n      .enter()\n      .append('circle')\n      .attr('class', d => `network-node node-${d.category} level-${d.recommendedLevel}`)\n      .attr('r', d => {\n        // Scale node size based on importance/complexity\n        const baseSize = 20;\n        const complexityMultiplier = d.complexity ? d.complexity / 10 : 1;\n        return baseSize * complexityMultiplier;\n      })\n      .attr('fill', d => this.getNodeColor(d))\n      .attr('stroke', '#fff')\n      .attr('stroke-width', 2)\n      .attr('cursor', 'pointer')\n      .call(d3.drag()\n        .on('start', (event, d) => this.dragStarted(event, d))\n        .on('drag', (event, d) => this.dragged(event, d))\n        .on('end', (event, d) => this.dragEnded(event, d)),\n      )\n      .on('mouseover', (event, d) => this.showTooltip(event, d))\n      .on('mouseout', () => this.hideTooltip())\n      .on('click', (event, d) => this.nodeClicked(event, d));\n\n    // Add dynamic labels with conditional visibility\n    this.labelElements = zoomContainer.append('g')\n      .attr('class', 'labels')\n      .selectAll('text')\n      .data(this.nodes)\n      .enter()\n      .append('text')\n      .attr('class', 'network-text')\n      .attr('text-anchor', 'middle')\n      .attr('dy', d => {\n        const baseOffset = 35;\n        const sizeOffset = (d.complexity ? d.complexity / 10 : 1) * 5;\n        return baseOffset + sizeOffset;\n      })\n      .attr('font-size', '12px')\n      .attr('font-weight', '600')\n      .attr('fill', '#2c3e50')\n      .attr('pointer-events', 'none')\n      .attr('paint-order', 'stroke')\n      .attr('stroke', '#ffffff')\n      .attr('stroke-width', 3)\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-linejoin', 'round')\n      .text(d => this.getNodeLabel(d));\n\n    // Add metric badges if enabled\n    this.metricElements = zoomContainer.append('g')\n      .attr('class', 'metrics')\n      .selectAll('text')\n      .data(this.nodes)\n      .enter()\n      .append('text')\n      .attr('class', 'node-metric')\n      .attr('text-anchor', 'middle')\n      .attr('dy', d => {\n        const baseOffset = -25;\n        const sizeOffset = (d.complexity ? d.complexity / 10 : 1) * 5;\n        return baseOffset - sizeOffset;\n      })\n      .attr('font-size', '10px')\n      .attr('fill', '#6c757d')\n      .attr('pointer-events', 'none')\n      .text(d => {\n        if (!this.currentFilters.showMetrics) return '';\n        const metrics = [];\n        if (d.effort) metrics.push(`Effort: ${d.effort}`);\n        if (d.complexity) metrics.push(`Complexity: ${d.complexity}`);\n        return metrics.join(' | ');\n      });\n\n    // Create tooltip\n    this.tooltip = d3.select('body')\n      .append('div')\n      .attr('class', 'network-tooltip')\n      .style('opacity', 0);\n\n    // Update positions on simulation tick with smooth transitions\n    this.simulation.on('tick', () => this.ticked());\n\n    // Initial update\n    this.updateVisualization();\n  }\n\n  getNodeColor(node) {\n    const colors = {\n      basic: '#28a745',\n      standard: '#ffc107',\n      comprehensive: '#dc3545',\n    };\n    return colors[node.recommendedLevel] || '#6c757d';\n  }\n\n  getNodeLabel(node) {\n    // Truncate long names\n    const maxLength = 12;\n    if (node.name.length > maxLength) {\n      return `${node.name.substring(0, maxLength - 3) }...`;\n    }\n    return node.name;\n  }\n\n  updateVisualization() {\n    if (!this.nodeElements || !this.linkElements) return;\n\n    // Filter nodes\n    const visibleNodes = this.nodes.filter(node => this.isNodeVisible(node));\n    const visibleNodeIds = new Set(visibleNodes.map(n => n.id));\n\n    // Filter links\n    const visibleLinks = this.currentFilters.showDependencies\n      ? this.links.filter(link =>\n        visibleNodeIds.has(link.source.id || link.source) &&\n                visibleNodeIds.has(link.target.id || link.target),\n      )\n      : [];\n\n    // Update node visibility\n    this.nodeElements\n      .style('opacity', d => this.isNodeVisible(d) ? 1 : 0.1)\n      .style('pointer-events', d => this.isNodeVisible(d) ? 'all' : 'none');\n\n    // Update link visibility\n    this.linkElements\n      .style('opacity', d => {\n        const sourceVisible = visibleNodeIds.has(d.source.id || d.source);\n        const targetVisible = visibleNodeIds.has(d.target.id || d.target);\n        return (sourceVisible && targetVisible && this.currentFilters.showDependencies) ? 0.6 : 0;\n      });\n\n    // Update label visibility\n    this.labelElements\n      .style('opacity', d => this.isNodeVisible(d) ? 1 : 0.1);\n\n    // Update simulation\n    this.simulation.nodes(visibleNodes);\n    this.simulation.force('link').links(visibleLinks);\n    this.simulation.alpha(0.3).restart();\n  }\n\n  isNodeVisible(node) {\n    // Category filter\n    if (!this.currentFilters.categories.has(node.category)) {\n      return false;\n    }\n\n    // Level filter\n    if (!this.currentFilters.levels.has(node.recommendedLevel)) {\n      return false;\n    }\n\n    // Search filter\n    if (this.currentFilters.searchTerm &&\n            !node.name.toLowerCase().includes(this.currentFilters.searchTerm)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  ticked() {\n    if (this.linkElements) {\n      this.linkElements\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y);\n    }\n\n    if (this.nodeElements) {\n      this.nodeElements\n        .attr('cx', d => d.x)\n        .attr('cy', d => d.y);\n    }\n\n    if (this.labelElements) {\n      this.labelElements\n        .attr('x', d => d.x)\n        .attr('y', d => d.y);\n    }\n  }\n\n  dragStarted(event, d) {\n    if (!event.active) this.simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n  }\n\n  dragged(event, d) {\n    d.fx = event.x;\n    d.fy = event.y;\n  }\n\n  dragEnded(event, d) {\n    if (!event.active) this.simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n  }\n\n  handleMouseOver(event, d) {\n    // Highlight connected nodes and links\n    this.highlightConnectedElements(d);\n\n    // Show enhanced tooltip\n    this.showEnhancedTooltip(event, d);\n\n    // Add hover effect\n    d3.select(event.currentTarget)\n      .attr('stroke-width', 3)\n      .attr('stroke', '#ffc107')\n      .attr('filter', 'url(#glow)');\n  }\n\n  handleMouseOut(event, d) {\n    // Remove highlights\n    this.clearHighlights();\n\n    // Hide tooltip\n    this.hideTooltip();\n\n    // Remove hover effect\n    d3.select(event.currentTarget)\n      .attr('stroke-width', 2)\n      .attr('stroke', '#fff')\n      .attr('filter', null);\n  }\n\n  highlightConnectedElements(node) {\n    // Highlight connected links\n    this.linkElements\n      .style('stroke-width', link =>\n        (link.source.id === node.id || link.target.id === node.id) ? 4 : 1.5,\n      )\n      .style('stroke-opacity', link =>\n        (link.source.id === node.id || link.target.id === node.id) ? 1 : 0.3,\n      );\n\n    // Highlight connected nodes\n    this.nodeElements\n      .style('opacity', otherNode => {\n        const isConnected = this.links.some(link =>\n          (link.source.id === node.id && link.target.id === otherNode.id) ||\n                    (link.source.id === otherNode.id && link.target.id === node.id),\n        );\n        return isConnected ? 1 : 0.3;\n      });\n  }\n\n  showEnhancedTooltip(event, d) {\n    const tooltipContent = `\n            <div class=\"tooltip-content\">\n                <h4>${d.name}</h4>\n                <p><strong>Category:</strong> ${d.category}</p>\n                <p><strong>Recommended Level:</strong> ${d.recommendedLevel}</p>\n                ${d.effort ? `<p><strong>Effort:</strong> ${d.effort}/10</p>` : ''}\n                ${d.complexity ? `<p><strong>Complexity:</strong> ${d.complexity}/10</p>` : ''}\n                ${d.confidence ? `<p><strong>Confidence:</strong> ${d.confidence}%</p>` : ''}\n                <p><strong>Connections:</strong> ${this.getConnectionCount(d)}</p>\n            </div>\n        `;\n\n    this.tooltip\n      .html(tooltipContent)\n      .style('left', `${event.pageX + 10 }px`)\n      .style('top', `${event.pageY - 28 }px`)\n      .style('opacity', 1)\n      .style('max-width', '300px');\n  }\n\n  getConnectionCount(node) {\n    return this.links.filter(link =>\n      link.source.id === node.id || link.target.id === node.id,\n    ).length;\n  }\n\n  addZoomControls() {\n    const controls = d3.select('#visualization-controls')\n      .append('div')\n      .attr('class', 'zoom-controls')\n      .style('position', 'absolute')\n      .style('top', '10px')\n      .style('right', '10px')\n      .style('z-index', '1000');\n\n    controls.append('button')\n      .attr('class', 'btn btn-sm btn-outline-primary me-2')\n      .html('<i class=\"fas fa-plus\"></i>')\n      .on('click', () => {\n        this.svg.transition().duration(300).call(\n          this.zoom.scaleBy, 1.5,\n        );\n      });\n\n    controls.append('button')\n      .attr('class', 'btn btn-sm btn-outline-primary me-2')\n      .html('<i class=\"fas fa-minus\"></i>')\n      .on('click', () => {\n        this.svg.transition().duration(300).call(\n          this.zoom.scaleBy, 0.75,\n        );\n      });\n\n    controls.append('button')\n      .attr('class', 'btn btn-sm btn-outline-secondary')\n      .html('<i class=\"fas fa-sync-alt\"></i>')\n      .on('click', () => {\n        this.svg.transition().duration(300).call(\n          this.zoom.transform, d3.zoomIdentity,\n        );\n      });\n  }\n\n  nodeClicked(event, d) {\n    event.stopPropagation();\n    // Use the main app's showProcessDetails method instead of local implementation\n    if (window.seApp && typeof window.seApp.showProcessDetails === 'function') {\n      window.seApp.showProcessDetails(d.id);\n    }\n  }\n\n  showTooltip(event, d) {\n    const tooltip = this.tooltip;\n\n    tooltip.style('opacity', 1)\n      .html(`\n                <strong>${d.name}</strong><br/>\n                Level: <span class=\"level-badge level-${d.recommendedLevel}\">${d.recommendedLevel}</span><br/>\n                Effort: ${d.effort}/5<br/>\n                Confidence: ${Math.round(d.confidence * 100)}%\n            `)\n      .style('left', `${event.pageX + 10 }px`)\n      .style('top', `${event.pageY - 10 }px`);\n  }\n\n  hideTooltip() {\n    this.tooltip.style('opacity', 0);\n  }\n\n  toggleLabels(show) {\n    if (this.labelElements) {\n      this.labelElements.style('opacity', show ? 1 : 0);\n    }\n  }\n\n  changeLayout(layout) {\n    if (!this.simulation) return;\n\n    switch (layout) {\n      case 'circular':\n        this.applyCircularLayout();\n        break;\n      case 'hierarchical':\n        this.applyHierarchicalLayout();\n        break;\n      default:\n        this.applyForceLayout();\n    }\n  }\n\n  applyCircularLayout() {\n    const centerX = this.width / 2;\n    const centerY = this.height / 2;\n    const radius = Math.min(this.width, this.height) / 3;\n\n    this.nodes.forEach((node, i) => {\n      const angle = (2 * Math.PI * i) / this.nodes.length;\n      node.fx = centerX + radius * Math.cos(angle);\n      node.fy = centerY + radius * Math.sin(angle);\n    });\n\n    this.simulation.alpha(0.3).restart();\n  }\n\n  applyHierarchicalLayout() {\n    const categories = ['technical_management', 'technical'];\n    const categoryHeight = this.height / categories.length;\n\n    categories.forEach((category, catIndex) => {\n      const categoryNodes = this.nodes.filter(n => n.category === category);\n      const nodeWidth = this.width / (categoryNodes.length + 1);\n\n      categoryNodes.forEach((node, nodeIndex) => {\n        node.fx = (nodeIndex + 1) * nodeWidth;\n        node.fy = (catIndex + 0.5) * categoryHeight;\n      });\n    });\n\n    this.simulation.alpha(0.3).restart();\n  }\n\n  applyForceLayout() {\n    this.nodes.forEach(node => {\n      node.fx = null;\n      node.fy = null;\n    });\n\n    this.simulation\n      .force('center', d3.forceCenter(this.width / 2, this.height / 2))\n      .alpha(0.3)\n      .restart();\n  }\n\n  resetFilters() {\n    this.currentFilters = {\n      categories: new Set(['technical_management', 'technical']),\n      levels: new Set(['basic', 'standard', 'comprehensive']),\n      showDependencies: true,\n      searchTerm: '',\n    };\n\n    // Reset UI controls\n    document.getElementById('process-search').value = '';\n    document.getElementById('filter-technical-mgmt').checked = true;\n    document.getElementById('filter-technical').checked = true;\n    document.getElementById('filter-basic').checked = true;\n    document.getElementById('filter-standard').checked = true;\n    document.getElementById('filter-comprehensive').checked = true;\n    document.getElementById('show-dependencies').checked = true;\n\n    this.updateVisualization();\n  }\n\n  zoomIn() {\n    this.svg.transition().call(this.zoom.scaleBy, 1.5);\n  }\n\n  zoomOut() {\n    this.svg.transition().call(this.zoom.scaleBy, 1 / 1.5);\n  }\n\n  resetView() {\n    this.svg.transition().call(this.zoom.transform, d3.zoomIdentity);\n  }\n\n  // Public methods\n  highlightProcess(processId) {\n    if (this.nodeElements) {\n      this.nodeElements\n        .style('stroke', d => d.id === processId ? '#ff6b6b' : '#fff')\n        .style('stroke-width', d => d.id === processId ? 4 : 2);\n    }\n  }\n\n  clearHighlights() {\n    if (this.nodeElements) {\n      this.nodeElements\n        .style('stroke', '#fff')\n        .style('stroke-width', 2);\n    }\n  }\n\n  setupEventListeners() {\n    // Setup zoom control event listeners\n    const zoomInBtn = document.getElementById('zoom-in-btn');\n    const zoomOutBtn = document.getElementById('zoom-out-btn');\n    const resetViewBtn = document.getElementById('reset-view-btn');\n\n    if (zoomInBtn) {\n      zoomInBtn.addEventListener('click', () => this.zoomIn());\n    }\n    if (zoomOutBtn) {\n      zoomOutBtn.addEventListener('click', () => this.zoomOut());\n    }\n    if (resetViewBtn) {\n      resetViewBtn.addEventListener('click', () => this.resetView());\n    }\n  }\n}\n\n// Export for global access\nwindow.ProcessNetworkVisualizer = ProcessNetworkVisualizer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/components/visualization.js\n\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };
/******/ 		__webpack_require__.i.forEach(function(handler) { handler(execOptions); });
/******/ 		module = execOptions.module;
/******/ 		execOptions.factory.call(module.exports, module, module.exports, execOptions.require);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = __webpack_module_cache__;
/******/ 	
/******/ 	// expose the module execution interceptor
/******/ 	__webpack_require__.i = [];
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript update chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.hu = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + "." + __webpack_require__.h() + ".hot-update.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get update manifest filename */
/******/ 	(() => {
/******/ 		__webpack_require__.hmrF = () => ("main." + __webpack_require__.h() + ".hot-update.json");
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/getFullHash */
/******/ 	(() => {
/******/ 		__webpack_require__.h = () => ("214e852875ac4a9ef06a")
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "se-tailoring-framework:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hot module replacement */
/******/ 	(() => {
/******/ 		var currentModuleData = {};
/******/ 		var installedModules = __webpack_require__.c;
/******/ 		
/******/ 		// module and require creation
/******/ 		var currentChildModule;
/******/ 		var currentParents = [];
/******/ 		
/******/ 		// status
/******/ 		var registeredStatusHandlers = [];
/******/ 		var currentStatus = "idle";
/******/ 		
/******/ 		// while downloading
/******/ 		var blockingPromises = 0;
/******/ 		var blockingPromisesWaiting = [];
/******/ 		
/******/ 		// The update info
/******/ 		var currentUpdateApplyHandlers;
/******/ 		var queuedInvalidatedModules;
/******/ 		
/******/ 		__webpack_require__.hmrD = currentModuleData;
/******/ 		
/******/ 		__webpack_require__.i.push(function (options) {
/******/ 			var module = options.module;
/******/ 			var require = createRequire(options.require, options.id);
/******/ 			module.hot = createModuleHotObject(options.id, module);
/******/ 			module.parents = currentParents;
/******/ 			module.children = [];
/******/ 			currentParents = [];
/******/ 			options.require = require;
/******/ 		});
/******/ 		
/******/ 		__webpack_require__.hmrC = {};
/******/ 		__webpack_require__.hmrI = {};
/******/ 		
/******/ 		function createRequire(require, moduleId) {
/******/ 			var me = installedModules[moduleId];
/******/ 			if (!me) return require;
/******/ 			var fn = function (request) {
/******/ 				if (me.hot.active) {
/******/ 					if (installedModules[request]) {
/******/ 						var parents = installedModules[request].parents;
/******/ 						if (parents.indexOf(moduleId) === -1) {
/******/ 							parents.push(moduleId);
/******/ 						}
/******/ 					} else {
/******/ 						currentParents = [moduleId];
/******/ 						currentChildModule = request;
/******/ 					}
/******/ 					if (me.children.indexOf(request) === -1) {
/******/ 						me.children.push(request);
/******/ 					}
/******/ 				} else {
/******/ 					console.warn(
/******/ 						"[HMR] unexpected require(" +
/******/ 							request +
/******/ 							") from disposed module " +
/******/ 							moduleId
/******/ 					);
/******/ 					currentParents = [];
/******/ 				}
/******/ 				return require(request);
/******/ 			};
/******/ 			var createPropertyDescriptor = function (name) {
/******/ 				return {
/******/ 					configurable: true,
/******/ 					enumerable: true,
/******/ 					get: function () {
/******/ 						return require[name];
/******/ 					},
/******/ 					set: function (value) {
/******/ 						require[name] = value;
/******/ 					}
/******/ 				};
/******/ 			};
/******/ 			for (var name in require) {
/******/ 				if (Object.prototype.hasOwnProperty.call(require, name) && name !== "e") {
/******/ 					Object.defineProperty(fn, name, createPropertyDescriptor(name));
/******/ 				}
/******/ 			}
/******/ 			fn.e = function (chunkId, fetchPriority) {
/******/ 				return trackBlockingPromise(require.e(chunkId, fetchPriority));
/******/ 			};
/******/ 			return fn;
/******/ 		}
/******/ 		
/******/ 		function createModuleHotObject(moduleId, me) {
/******/ 			var _main = currentChildModule !== moduleId;
/******/ 			var hot = {
/******/ 				// private stuff
/******/ 				_acceptedDependencies: {},
/******/ 				_acceptedErrorHandlers: {},
/******/ 				_declinedDependencies: {},
/******/ 				_selfAccepted: false,
/******/ 				_selfDeclined: false,
/******/ 				_selfInvalidated: false,
/******/ 				_disposeHandlers: [],
/******/ 				_main: _main,
/******/ 				_requireSelf: function () {
/******/ 					currentParents = me.parents.slice();
/******/ 					currentChildModule = _main ? undefined : moduleId;
/******/ 					__webpack_require__(moduleId);
/******/ 				},
/******/ 		
/******/ 				// Module API
/******/ 				active: true,
/******/ 				accept: function (dep, callback, errorHandler) {
/******/ 					if (dep === undefined) hot._selfAccepted = true;
/******/ 					else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 					else if (typeof dep === "object" && dep !== null) {
/******/ 						for (var i = 0; i < dep.length; i++) {
/******/ 							hot._acceptedDependencies[dep[i]] = callback || function () {};
/******/ 							hot._acceptedErrorHandlers[dep[i]] = errorHandler;
/******/ 						}
/******/ 					} else {
/******/ 						hot._acceptedDependencies[dep] = callback || function () {};
/******/ 						hot._acceptedErrorHandlers[dep] = errorHandler;
/******/ 					}
/******/ 				},
/******/ 				decline: function (dep) {
/******/ 					if (dep === undefined) hot._selfDeclined = true;
/******/ 					else if (typeof dep === "object" && dep !== null)
/******/ 						for (var i = 0; i < dep.length; i++)
/******/ 							hot._declinedDependencies[dep[i]] = true;
/******/ 					else hot._declinedDependencies[dep] = true;
/******/ 				},
/******/ 				dispose: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				addDisposeHandler: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				removeDisposeHandler: function (callback) {
/******/ 					var idx = hot._disposeHandlers.indexOf(callback);
/******/ 					if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 				},
/******/ 				invalidate: function () {
/******/ 					this._selfInvalidated = true;
/******/ 					switch (currentStatus) {
/******/ 						case "idle":
/******/ 							currentUpdateApplyHandlers = [];
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							setStatus("ready");
/******/ 							break;
/******/ 						case "ready":
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							break;
/******/ 						case "prepare":
/******/ 						case "check":
/******/ 						case "dispose":
/******/ 						case "apply":
/******/ 							(queuedInvalidatedModules = queuedInvalidatedModules || []).push(
/******/ 								moduleId
/******/ 							);
/******/ 							break;
/******/ 						default:
/******/ 							// ignore requests in error states
/******/ 							break;
/******/ 					}
/******/ 				},
/******/ 		
/******/ 				// Management API
/******/ 				check: hotCheck,
/******/ 				apply: hotApply,
/******/ 				status: function (l) {
/******/ 					if (!l) return currentStatus;
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				addStatusHandler: function (l) {
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				removeStatusHandler: function (l) {
/******/ 					var idx = registeredStatusHandlers.indexOf(l);
/******/ 					if (idx >= 0) registeredStatusHandlers.splice(idx, 1);
/******/ 				},
/******/ 		
/******/ 				// inherit from previous dispose call
/******/ 				data: currentModuleData[moduleId]
/******/ 			};
/******/ 			currentChildModule = undefined;
/******/ 			return hot;
/******/ 		}
/******/ 		
/******/ 		function setStatus(newStatus) {
/******/ 			currentStatus = newStatus;
/******/ 			var results = [];
/******/ 		
/******/ 			for (var i = 0; i < registeredStatusHandlers.length; i++)
/******/ 				results[i] = registeredStatusHandlers[i].call(null, newStatus);
/******/ 		
/******/ 			return Promise.all(results).then(function () {});
/******/ 		}
/******/ 		
/******/ 		function unblock() {
/******/ 			if (--blockingPromises === 0) {
/******/ 				setStatus("ready").then(function () {
/******/ 					if (blockingPromises === 0) {
/******/ 						var list = blockingPromisesWaiting;
/******/ 						blockingPromisesWaiting = [];
/******/ 						for (var i = 0; i < list.length; i++) {
/******/ 							list[i]();
/******/ 						}
/******/ 					}
/******/ 				});
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function trackBlockingPromise(promise) {
/******/ 			switch (currentStatus) {
/******/ 				case "ready":
/******/ 					setStatus("prepare");
/******/ 				/* fallthrough */
/******/ 				case "prepare":
/******/ 					blockingPromises++;
/******/ 					promise.then(unblock, unblock);
/******/ 					return promise;
/******/ 				default:
/******/ 					return promise;
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function waitForBlockingPromises(fn) {
/******/ 			if (blockingPromises === 0) return fn();
/******/ 			return new Promise(function (resolve) {
/******/ 				blockingPromisesWaiting.push(function () {
/******/ 					resolve(fn());
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function hotCheck(applyOnUpdate) {
/******/ 			if (currentStatus !== "idle") {
/******/ 				throw new Error("check() is only allowed in idle status");
/******/ 			}
/******/ 			return setStatus("check")
/******/ 				.then(__webpack_require__.hmrM)
/******/ 				.then(function (update) {
/******/ 					if (!update) {
/******/ 						return setStatus(applyInvalidatedModules() ? "ready" : "idle").then(
/******/ 							function () {
/******/ 								return null;
/******/ 							}
/******/ 						);
/******/ 					}
/******/ 		
/******/ 					return setStatus("prepare").then(function () {
/******/ 						var updatedModules = [];
/******/ 						currentUpdateApplyHandlers = [];
/******/ 		
/******/ 						return Promise.all(
/******/ 							Object.keys(__webpack_require__.hmrC).reduce(function (
/******/ 								promises,
/******/ 								key
/******/ 							) {
/******/ 								__webpack_require__.hmrC[key](
/******/ 									update.c,
/******/ 									update.r,
/******/ 									update.m,
/******/ 									promises,
/******/ 									currentUpdateApplyHandlers,
/******/ 									updatedModules
/******/ 								);
/******/ 								return promises;
/******/ 							}, [])
/******/ 						).then(function () {
/******/ 							return waitForBlockingPromises(function () {
/******/ 								if (applyOnUpdate) {
/******/ 									return internalApply(applyOnUpdate);
/******/ 								}
/******/ 								return setStatus("ready").then(function () {
/******/ 									return updatedModules;
/******/ 								});
/******/ 							});
/******/ 						});
/******/ 					});
/******/ 				});
/******/ 		}
/******/ 		
/******/ 		function hotApply(options) {
/******/ 			if (currentStatus !== "ready") {
/******/ 				return Promise.resolve().then(function () {
/******/ 					throw new Error(
/******/ 						"apply() is only allowed in ready status (state: " +
/******/ 							currentStatus +
/******/ 							")"
/******/ 					);
/******/ 				});
/******/ 			}
/******/ 			return internalApply(options);
/******/ 		}
/******/ 		
/******/ 		function internalApply(options) {
/******/ 			options = options || {};
/******/ 		
/******/ 			applyInvalidatedModules();
/******/ 		
/******/ 			var results = currentUpdateApplyHandlers.map(function (handler) {
/******/ 				return handler(options);
/******/ 			});
/******/ 			currentUpdateApplyHandlers = undefined;
/******/ 		
/******/ 			var errors = results
/******/ 				.map(function (r) {
/******/ 					return r.error;
/******/ 				})
/******/ 				.filter(Boolean);
/******/ 		
/******/ 			if (errors.length > 0) {
/******/ 				return setStatus("abort").then(function () {
/******/ 					throw errors[0];
/******/ 				});
/******/ 			}
/******/ 		
/******/ 			// Now in "dispose" phase
/******/ 			var disposePromise = setStatus("dispose");
/******/ 		
/******/ 			results.forEach(function (result) {
/******/ 				if (result.dispose) result.dispose();
/******/ 			});
/******/ 		
/******/ 			// Now in "apply" phase
/******/ 			var applyPromise = setStatus("apply");
/******/ 		
/******/ 			var error;
/******/ 			var reportError = function (err) {
/******/ 				if (!error) error = err;
/******/ 			};
/******/ 		
/******/ 			var outdatedModules = [];
/******/ 		
/******/ 			var onAccepted = function () {
/******/ 				return Promise.all([disposePromise, applyPromise]).then(function () {
/******/ 					// handle errors in accept handlers and self accepted module load
/******/ 					if (error) {
/******/ 						return setStatus("fail").then(function () {
/******/ 							throw error;
/******/ 						});
/******/ 					}
/******/ 		
/******/ 					if (queuedInvalidatedModules) {
/******/ 						return internalApply(options).then(function (list) {
/******/ 							outdatedModules.forEach(function (moduleId) {
/******/ 								if (list.indexOf(moduleId) < 0) list.push(moduleId);
/******/ 							});
/******/ 							return list;
/******/ 						});
/******/ 					}
/******/ 		
/******/ 					return setStatus("idle").then(function () {
/******/ 						return outdatedModules;
/******/ 					});
/******/ 				});
/******/ 			};
/******/ 		
/******/ 			return Promise.all(
/******/ 				results
/******/ 					.filter(function (result) {
/******/ 						return result.apply;
/******/ 					})
/******/ 					.map(function (result) {
/******/ 						return result.apply(reportError);
/******/ 					})
/******/ 			)
/******/ 				.then(function (applyResults) {
/******/ 					applyResults.forEach(function (modules) {
/******/ 						if (modules) {
/******/ 							for (var i = 0; i < modules.length; i++) {
/******/ 								outdatedModules.push(modules[i]);
/******/ 							}
/******/ 						}
/******/ 					});
/******/ 				})
/******/ 				.then(onAccepted);
/******/ 		}
/******/ 		
/******/ 		function applyInvalidatedModules() {
/******/ 			if (queuedInvalidatedModules) {
/******/ 				if (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];
/******/ 				Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 					queuedInvalidatedModules.forEach(function (moduleId) {
/******/ 						__webpack_require__.hmrI[key](
/******/ 							moduleId,
/******/ 							currentUpdateApplyHandlers
/******/ 						);
/******/ 					});
/******/ 				});
/******/ 				queuedInvalidatedModules = undefined;
/******/ 				return true;
/******/ 			}
/******/ 		}
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/^blob:/, "").replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = __webpack_require__.hmrS_jsonp = __webpack_require__.hmrS_jsonp || {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		var currentUpdatedModulesList;
/******/ 		var waitingUpdateResolves = {};
/******/ 		function loadUpdateChunk(chunkId, updatedModulesList) {
/******/ 			currentUpdatedModulesList = updatedModulesList;
/******/ 			return new Promise((resolve, reject) => {
/******/ 				waitingUpdateResolves[chunkId] = resolve;
/******/ 				// start update chunk loading
/******/ 				var url = __webpack_require__.p + __webpack_require__.hu(chunkId);
/******/ 				// create error before stack unwound to get useful stacktrace later
/******/ 				var error = new Error();
/******/ 				var loadingEnded = (event) => {
/******/ 					if(waitingUpdateResolves[chunkId]) {
/******/ 						waitingUpdateResolves[chunkId] = undefined
/******/ 						var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 						var realSrc = event && event.target && event.target.src;
/******/ 						error.message = 'Loading hot update chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 						error.name = 'ChunkLoadError';
/******/ 						error.type = errorType;
/******/ 						error.request = realSrc;
/******/ 						reject(error);
/******/ 					}
/******/ 				};
/******/ 				__webpack_require__.l(url, loadingEnded);
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		self["webpackHotUpdatese_tailoring_framework"] = (chunkId, moreModules, runtime) => {
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					currentUpdate[moduleId] = moreModules[moduleId];
/******/ 					if(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);
/******/ 				}
/******/ 			}
/******/ 			if(runtime) currentUpdateRuntime.push(runtime);
/******/ 			if(waitingUpdateResolves[chunkId]) {
/******/ 				waitingUpdateResolves[chunkId]();
/******/ 				waitingUpdateResolves[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var currentUpdateChunks;
/******/ 		var currentUpdate;
/******/ 		var currentUpdateRemovedChunks;
/******/ 		var currentUpdateRuntime;
/******/ 		function applyHandler(options) {
/******/ 			if (__webpack_require__.f) delete __webpack_require__.f.jsonpHmr;
/******/ 			currentUpdateChunks = undefined;
/******/ 			function getAffectedModuleEffects(updateModuleId) {
/******/ 				var outdatedModules = [updateModuleId];
/******/ 				var outdatedDependencies = {};
/******/ 		
/******/ 				var queue = outdatedModules.map(function (id) {
/******/ 					return {
/******/ 						chain: [id],
/******/ 						id: id
/******/ 					};
/******/ 				});
/******/ 				while (queue.length > 0) {
/******/ 					var queueItem = queue.pop();
/******/ 					var moduleId = queueItem.id;
/******/ 					var chain = queueItem.chain;
/******/ 					var module = __webpack_require__.c[moduleId];
/******/ 					if (
/******/ 						!module ||
/******/ 						(module.hot._selfAccepted && !module.hot._selfInvalidated)
/******/ 					)
/******/ 						continue;
/******/ 					if (module.hot._selfDeclined) {
/******/ 						return {
/******/ 							type: "self-declined",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					if (module.hot._main) {
/******/ 						return {
/******/ 							type: "unaccepted",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					for (var i = 0; i < module.parents.length; i++) {
/******/ 						var parentId = module.parents[i];
/******/ 						var parent = __webpack_require__.c[parentId];
/******/ 						if (!parent) continue;
/******/ 						if (parent.hot._declinedDependencies[moduleId]) {
/******/ 							return {
/******/ 								type: "declined",
/******/ 								chain: chain.concat([parentId]),
/******/ 								moduleId: moduleId,
/******/ 								parentId: parentId
/******/ 							};
/******/ 						}
/******/ 						if (outdatedModules.indexOf(parentId) !== -1) continue;
/******/ 						if (parent.hot._acceptedDependencies[moduleId]) {
/******/ 							if (!outdatedDependencies[parentId])
/******/ 								outdatedDependencies[parentId] = [];
/******/ 							addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 							continue;
/******/ 						}
/******/ 						delete outdatedDependencies[parentId];
/******/ 						outdatedModules.push(parentId);
/******/ 						queue.push({
/******/ 							chain: chain.concat([parentId]),
/******/ 							id: parentId
/******/ 						});
/******/ 					}
/******/ 				}
/******/ 		
/******/ 				return {
/******/ 					type: "accepted",
/******/ 					moduleId: updateModuleId,
/******/ 					outdatedModules: outdatedModules,
/******/ 					outdatedDependencies: outdatedDependencies
/******/ 				};
/******/ 			}
/******/ 		
/******/ 			function addAllToSet(a, b) {
/******/ 				for (var i = 0; i < b.length; i++) {
/******/ 					var item = b[i];
/******/ 					if (a.indexOf(item) === -1) a.push(item);
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			// at begin all updates modules are outdated
/******/ 			// the "outdated" status can propagate to parents if they don't accept the children
/******/ 			var outdatedDependencies = {};
/******/ 			var outdatedModules = [];
/******/ 			var appliedUpdate = {};
/******/ 		
/******/ 			var warnUnexpectedRequire = function warnUnexpectedRequire(module) {
/******/ 				console.warn(
/******/ 					"[HMR] unexpected require(" + module.id + ") to disposed module"
/******/ 				);
/******/ 			};
/******/ 		
/******/ 			for (var moduleId in currentUpdate) {
/******/ 				if (__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 					var newModuleFactory = currentUpdate[moduleId];
/******/ 					var result = newModuleFactory
/******/ 						? getAffectedModuleEffects(moduleId)
/******/ 						: {
/******/ 								type: "disposed",
/******/ 								moduleId: moduleId
/******/ 							};
/******/ 					/** @type {Error|false} */
/******/ 					var abortError = false;
/******/ 					var doApply = false;
/******/ 					var doDispose = false;
/******/ 					var chainInfo = "";
/******/ 					if (result.chain) {
/******/ 						chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 					}
/******/ 					switch (result.type) {
/******/ 						case "self-declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of self decline: " +
/******/ 										result.moduleId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of declined dependency: " +
/******/ 										result.moduleId +
/******/ 										" in " +
/******/ 										result.parentId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "unaccepted":
/******/ 							if (options.onUnaccepted) options.onUnaccepted(result);
/******/ 							if (!options.ignoreUnaccepted)
/******/ 								abortError = new Error(
/******/ 									"Aborted because " + moduleId + " is not accepted" + chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "accepted":
/******/ 							if (options.onAccepted) options.onAccepted(result);
/******/ 							doApply = true;
/******/ 							break;
/******/ 						case "disposed":
/******/ 							if (options.onDisposed) options.onDisposed(result);
/******/ 							doDispose = true;
/******/ 							break;
/******/ 						default:
/******/ 							throw new Error("Unexception type " + result.type);
/******/ 					}
/******/ 					if (abortError) {
/******/ 						return {
/******/ 							error: abortError
/******/ 						};
/******/ 					}
/******/ 					if (doApply) {
/******/ 						appliedUpdate[moduleId] = newModuleFactory;
/******/ 						addAllToSet(outdatedModules, result.outdatedModules);
/******/ 						for (moduleId in result.outdatedDependencies) {
/******/ 							if (__webpack_require__.o(result.outdatedDependencies, moduleId)) {
/******/ 								if (!outdatedDependencies[moduleId])
/******/ 									outdatedDependencies[moduleId] = [];
/******/ 								addAllToSet(
/******/ 									outdatedDependencies[moduleId],
/******/ 									result.outdatedDependencies[moduleId]
/******/ 								);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 					if (doDispose) {
/******/ 						addAllToSet(outdatedModules, [result.moduleId]);
/******/ 						appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 			currentUpdate = undefined;
/******/ 		
/******/ 			// Store self accepted outdated modules to require them later by the module system
/******/ 			var outdatedSelfAcceptedModules = [];
/******/ 			for (var j = 0; j < outdatedModules.length; j++) {
/******/ 				var outdatedModuleId = outdatedModules[j];
/******/ 				var module = __webpack_require__.c[outdatedModuleId];
/******/ 				if (
/******/ 					module &&
/******/ 					(module.hot._selfAccepted || module.hot._main) &&
/******/ 					// removed self-accepted modules should not be required
/******/ 					appliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&
/******/ 					// when called invalidate self-accepting is not possible
/******/ 					!module.hot._selfInvalidated
/******/ 				) {
/******/ 					outdatedSelfAcceptedModules.push({
/******/ 						module: outdatedModuleId,
/******/ 						require: module.hot._requireSelf,
/******/ 						errorHandler: module.hot._selfAccepted
/******/ 					});
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			var moduleOutdatedDependencies;
/******/ 		
/******/ 			return {
/******/ 				dispose: function () {
/******/ 					currentUpdateRemovedChunks.forEach(function (chunkId) {
/******/ 						delete installedChunks[chunkId];
/******/ 					});
/******/ 					currentUpdateRemovedChunks = undefined;
/******/ 		
/******/ 					var idx;
/******/ 					var queue = outdatedModules.slice();
/******/ 					while (queue.length > 0) {
/******/ 						var moduleId = queue.pop();
/******/ 						var module = __webpack_require__.c[moduleId];
/******/ 						if (!module) continue;
/******/ 		
/******/ 						var data = {};
/******/ 		
/******/ 						// Call dispose handlers
/******/ 						var disposeHandlers = module.hot._disposeHandlers;
/******/ 						for (j = 0; j < disposeHandlers.length; j++) {
/******/ 							disposeHandlers[j].call(null, data);
/******/ 						}
/******/ 						__webpack_require__.hmrD[moduleId] = data;
/******/ 		
/******/ 						// disable module (this disables requires from this module)
/******/ 						module.hot.active = false;
/******/ 		
/******/ 						// remove module from cache
/******/ 						delete __webpack_require__.c[moduleId];
/******/ 		
/******/ 						// when disposing there is no need to call dispose handler
/******/ 						delete outdatedDependencies[moduleId];
/******/ 		
/******/ 						// remove "parents" references from all children
/******/ 						for (j = 0; j < module.children.length; j++) {
/******/ 							var child = __webpack_require__.c[module.children[j]];
/******/ 							if (!child) continue;
/******/ 							idx = child.parents.indexOf(moduleId);
/******/ 							if (idx >= 0) {
/******/ 								child.parents.splice(idx, 1);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// remove outdated dependency from module children
/******/ 					var dependency;
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								for (j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									dependency = moduleOutdatedDependencies[j];
/******/ 									idx = module.children.indexOf(dependency);
/******/ 									if (idx >= 0) module.children.splice(idx, 1);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				},
/******/ 				apply: function (reportError) {
/******/ 					var acceptPromises = [];
/******/ 					// insert new code
/******/ 					for (var updateModuleId in appliedUpdate) {
/******/ 						if (__webpack_require__.o(appliedUpdate, updateModuleId)) {
/******/ 							__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// run new runtime modules
/******/ 					for (var i = 0; i < currentUpdateRuntime.length; i++) {
/******/ 						currentUpdateRuntime[i](__webpack_require__);
/******/ 					}
/******/ 		
/******/ 					// call accept handlers
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							var module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								var callbacks = [];
/******/ 								var errorHandlers = [];
/******/ 								var dependenciesForCallbacks = [];
/******/ 								for (var j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									var dependency = moduleOutdatedDependencies[j];
/******/ 									var acceptCallback =
/******/ 										module.hot._acceptedDependencies[dependency];
/******/ 									var errorHandler =
/******/ 										module.hot._acceptedErrorHandlers[dependency];
/******/ 									if (acceptCallback) {
/******/ 										if (callbacks.indexOf(acceptCallback) !== -1) continue;
/******/ 										callbacks.push(acceptCallback);
/******/ 										errorHandlers.push(errorHandler);
/******/ 										dependenciesForCallbacks.push(dependency);
/******/ 									}
/******/ 								}
/******/ 								for (var k = 0; k < callbacks.length; k++) {
/******/ 									var result;
/******/ 									try {
/******/ 										result = callbacks[k].call(null, moduleOutdatedDependencies);
/******/ 									} catch (err) {
/******/ 										if (typeof errorHandlers[k] === "function") {
/******/ 											try {
/******/ 												errorHandlers[k](err, {
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k]
/******/ 												});
/******/ 											} catch (err2) {
/******/ 												if (options.onErrored) {
/******/ 													options.onErrored({
/******/ 														type: "accept-error-handler-errored",
/******/ 														moduleId: outdatedModuleId,
/******/ 														dependencyId: dependenciesForCallbacks[k],
/******/ 														error: err2,
/******/ 														originalError: err
/******/ 													});
/******/ 												}
/******/ 												if (!options.ignoreErrored) {
/******/ 													reportError(err2);
/******/ 													reportError(err);
/******/ 												}
/******/ 											}
/******/ 										} else {
/******/ 											if (options.onErrored) {
/******/ 												options.onErrored({
/******/ 													type: "accept-errored",
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k],
/******/ 													error: err
/******/ 												});
/******/ 											}
/******/ 											if (!options.ignoreErrored) {
/******/ 												reportError(err);
/******/ 											}
/******/ 										}
/******/ 									}
/******/ 									if (result && typeof result.then === "function") {
/******/ 										acceptPromises.push(result);
/******/ 									}
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					var onAccepted = function () {
/******/ 						// Load self accepted modules
/******/ 						for (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {
/******/ 							var item = outdatedSelfAcceptedModules[o];
/******/ 							var moduleId = item.module;
/******/ 							try {
/******/ 								item.require(moduleId);
/******/ 							} catch (err) {
/******/ 								if (typeof item.errorHandler === "function") {
/******/ 									try {
/******/ 										item.errorHandler(err, {
/******/ 											moduleId: moduleId,
/******/ 											module: __webpack_require__.c[moduleId]
/******/ 										});
/******/ 									} catch (err1) {
/******/ 										if (options.onErrored) {
/******/ 											options.onErrored({
/******/ 												type: "self-accept-error-handler-errored",
/******/ 												moduleId: moduleId,
/******/ 												error: err1,
/******/ 												originalError: err
/******/ 											});
/******/ 										}
/******/ 										if (!options.ignoreErrored) {
/******/ 											reportError(err1);
/******/ 											reportError(err);
/******/ 										}
/******/ 									}
/******/ 								} else {
/******/ 									if (options.onErrored) {
/******/ 										options.onErrored({
/******/ 											type: "self-accept-errored",
/******/ 											moduleId: moduleId,
/******/ 											error: err
/******/ 										});
/******/ 									}
/******/ 									if (!options.ignoreErrored) {
/******/ 										reportError(err);
/******/ 									}
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					};
/******/ 		
/******/ 					return Promise.all(acceptPromises)
/******/ 						.then(onAccepted)
/******/ 						.then(function () {
/******/ 							return outdatedModules;
/******/ 						});
/******/ 				}
/******/ 			};
/******/ 		}
/******/ 		__webpack_require__.hmrI.jsonp = function (moduleId, applyHandlers) {
/******/ 			if (!currentUpdate) {
/******/ 				currentUpdate = {};
/******/ 				currentUpdateRuntime = [];
/******/ 				currentUpdateRemovedChunks = [];
/******/ 				applyHandlers.push(applyHandler);
/******/ 			}
/******/ 			if (!__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 				currentUpdate[moduleId] = __webpack_require__.m[moduleId];
/******/ 			}
/******/ 		};
/******/ 		__webpack_require__.hmrC.jsonp = function (
/******/ 			chunkIds,
/******/ 			removedChunks,
/******/ 			removedModules,
/******/ 			promises,
/******/ 			applyHandlers,
/******/ 			updatedModulesList
/******/ 		) {
/******/ 			applyHandlers.push(applyHandler);
/******/ 			currentUpdateChunks = {};
/******/ 			currentUpdateRemovedChunks = removedChunks;
/******/ 			currentUpdate = removedModules.reduce(function (obj, key) {
/******/ 				obj[key] = false;
/******/ 				return obj;
/******/ 			}, {});
/******/ 			currentUpdateRuntime = [];
/******/ 			chunkIds.forEach(function (chunkId) {
/******/ 				if (
/******/ 					__webpack_require__.o(installedChunks, chunkId) &&
/******/ 					installedChunks[chunkId] !== undefined
/******/ 				) {
/******/ 					promises.push(loadUpdateChunk(chunkId, updatedModulesList));
/******/ 					currentUpdateChunks[chunkId] = true;
/******/ 				} else {
/******/ 					currentUpdateChunks[chunkId] = false;
/******/ 				}
/******/ 			});
/******/ 			if (__webpack_require__.f) {
/******/ 				__webpack_require__.f.jsonpHmr = function (chunkId, promises) {
/******/ 					if (
/******/ 						currentUpdateChunks &&
/******/ 						__webpack_require__.o(currentUpdateChunks, chunkId) &&
/******/ 						!currentUpdateChunks[chunkId]
/******/ 					) {
/******/ 						promises.push(loadUpdateChunk(chunkId));
/******/ 						currentUpdateChunks[chunkId] = true;
/******/ 					}
/******/ 				};
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.hmrM = () => {
/******/ 			if (typeof fetch === "undefined") throw new Error("No browser support: need fetch API");
/******/ 			return fetch(__webpack_require__.p + __webpack_require__.hmrF()).then((response) => {
/******/ 				if(response.status === 404) return; // no update available
/******/ 				if(!response.ok) throw new Error("Failed to fetch update manifest " + response.statusText);
/******/ 				return response.json();
/******/ 			});
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkse_tailoring_framework"] = self["webpackChunkse_tailoring_framework"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// module cache are used so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	__webpack_require__.O(undefined, ["vendors"], () => (__webpack_require__("./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=3000&pathname=%2Fws&logging=info&overlay=true&reconnect=10&hot=true&live-reload=true")))
/******/ 	__webpack_require__.O(undefined, ["vendors"], () => (__webpack_require__("./node_modules/webpack/hot/dev-server.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors"], () => (__webpack_require__("./js/app.js")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;