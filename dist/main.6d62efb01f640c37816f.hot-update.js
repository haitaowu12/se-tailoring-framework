/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatese_tailoring_framework"]("main",{

/***/ "./js/components/assessment.js":
/*!*************************************!*\
  !*** ./js/components/assessment.js ***!
  \*************************************/
/***/ (() => {

eval("{/**\n * Assessment Engine Component\n * Manages the assessment interface, question rendering, and response collection\n */\n\nclass AssessmentEngine {\n  constructor(questionData, app) {\n    this.questionData = questionData;\n    this.app = app;\n    this.currentCategoryIndex = 0;\n    this.currentQuestionIndex = 0;\n    this.assessmentContainer = null;\n  }\n\n  render() {\n    this.assessmentContainer = document.getElementById('assessment-content');\n    if (!this.assessmentContainer) return;\n\n    this.renderAssessmentInterface();\n  }\n\n  renderAssessmentInterface() {\n    if (!this.questionData.assessmentCategories || this.questionData.assessmentCategories.length === 0) {\n      this.renderNoQuestions();\n      return;\n    }\n\n    // Clear container once at the beginning to prevent duplicate elements\n    this.assessmentContainer.innerHTML = '';\n    \n    this.renderProgressBar();\n    this.renderCurrentQuestion();\n    this.renderNavigation();\n  }\n\n  renderProgressBar() {\n    const progressContainer = document.createElement('div');\n    progressContainer.className = 'assessment-progress mb-4';\n\n    const totalQuestions = this.getTotalQuestions();\n    const answeredQuestions = Object.keys(this.app.assessmentResponses).length;\n    const progressPercentage = totalQuestions > 0 ? (answeredQuestions / totalQuestions) * 100 : 0;\n\n    progressContainer.innerHTML = `\n            <div class=\"d-flex justify-content-between align-items-center mb-2\">\n                <h6 class=\"mb-0\">Assessment Progress</h6>\n                <small class=\"text-muted\">${answeredQuestions}/${totalQuestions} questions answered</small>\n            </div>\n            <div class=\"progress\" style=\"height: 8px;\">\n                <div class=\"progress-bar\" role=\"progressbar\" \n                     style=\"width: ${progressPercentage}%\" \n                     aria-valuenow=\"${progressPercentage}\" \n                     aria-valuemin=\"0\" \n                     aria-valuemax=\"100\">\n                </div>\n            </div>\n            <div class=\"mt-2\">\n                <small class=\"text-muted\">\n                    ${this.getCurrentCategory()?.name || 'No category'} \n                    (${this.currentQuestionIndex + 1}/${this.getCurrentCategory()?.questions?.length || 0})\n                </small>\n            </div>\n        `;\n\n    this.assessmentContainer.appendChild(progressContainer);\n  }\n\n  renderCurrentQuestion() {\n    const question = this.getCurrentQuestion();\n    if (!question) {\n      this.renderAssessmentComplete();\n      return;\n    }\n\n    const questionCard = document.createElement('div');\n    questionCard.className = 'card question-card';\n    questionCard.innerHTML = `\n            <div class=\"card-header\">\n                <h5 class=\"card-title mb-0\">\n                    <span class=\"badge bg-primary me-2\">Q${this.currentQuestionIndex + 1}</span>\n                    ${question.text}\n                </h5>\n                <small class=\"text-muted\">${this.getDimensionBadge(question.dimension)}</small>\n            </div>\n            <div class=\"card-body\">\n                ${this.renderResponseOptions(question)}\n                ${question.description ? `<p class=\"text-muted mt-3\">${question.description}</p>` : ''}\n            </div>\n        `;\n\n    this.assessmentContainer.appendChild(questionCard);\n  }\n\n  renderResponseOptions(question) {\n    const currentResponse = this.app.assessmentResponses[question.id];\n    const currentValue = currentResponse ? currentResponse.score : null;\n\n    return `\n            <div class=\"response-options\">\n                <div class=\"btn-group-vertical w-100\" role=\"group\">\n                    ${question.options.map(option => `\n                        <button type=\"button\" \n                                class=\"btn btn-outline-primary ${currentValue === option.value ? 'active' : ''}\"\n                                data-score=\"${option.value}\"\n                                onclick=\"window.seApp.assessmentEngine.selectResponse(${option.value}, '${option.label}')\">\n                            ${option.label}\n                        </button>\n                    `).join('')}\n                </div>\n            </div>\n        `;\n  }\n\n  renderNavigation() {\n    const navContainer = document.createElement('div');\n    navContainer.className = 'assessment-navigation mt-4';\n    \n    // Check if current question has been answered\n    const currentQuestion = this.getCurrentQuestion();\n    const hasAnswered = currentQuestion && this.app.assessmentResponses[currentQuestion.id];\n    \n    navContainer.innerHTML = `\n            <div class=\"d-flex justify-content-between\">\n                <button class=\"btn btn-outline-secondary\" \n                        onclick=\"window.seApp.assessmentEngine.previousQuestion()\"\n                        ${this.currentQuestionIndex === 0 && this.currentCategoryIndex === 0 ? 'disabled' : ''}>\n                    <i class=\"bi bi-arrow-left\"></i> Previous\n                </button>\n                <button class=\"btn btn-primary\" \n                        onclick=\"window.seApp.assessmentEngine.nextQuestion()\"\n                        ${!hasAnswered ? 'disabled' : ''}>\n                    ${this.isLastQuestion() ? 'Complete Assessment' : 'Next Question'} \n                    <i class=\"bi bi-arrow-right\"></i>\n                </button>\n            </div>\n        `;\n\n    this.assessmentContainer.appendChild(navContainer);\n  }\n\n  renderNoQuestions() {\n    this.assessmentContainer.innerHTML = `\n            <div class=\"text-center py-5\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <i class=\"bi bi-exclamation-triangle display-1 text-warning mb-3\"></i>\n                        <h3>No Assessment Questions</h3>\n                        <p class=\"text-muted\">\n                            The assessment questions could not be loaded. Please check the data files.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  renderAssessmentComplete() {\n    // Generate recommendations automatically when assessment is complete\n    this.app.calculateScores();\n    \n    this.assessmentContainer.innerHTML = `\n            <div class=\"text-center py-5\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <i class=\"bi bi-check-circle display-1 text-success mb-3\"></i>\n                        <h3>Assessment Complete!</h3>\n                        <p class=\"text-muted mb-4\">\n                            You have completed all assessment questions. Your process tailoring recommendations are ready.\n                        </p>\n                        <div class=\"mb-4\">\n                            <h5>Assessment Scores</h5>\n                            <div class=\"row\">\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Overall</h6>\n                                            <h3 class=\"text-primary\">${this.app.assessmentScores.overall?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Complexity</h6>\n                                            <h3 class=\"text-info\">${this.app.assessmentScores.complexity?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Safety</h6>\n                                            <h3 class=\"text-warning\">${this.app.assessmentScores.safety?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Scale</h6>\n                                            <h3 class=\"text-success\">${this.app.assessmentScores.scale?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <button class=\"btn btn-primary btn-lg\" onclick=\"window.seApp.showView('recommendations')\">\n                            <i class=\"bi bi-graph-up\"></i>\n                            View Recommendations\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  selectResponse(score, label) {\n    const question = this.getCurrentQuestion();\n    if (!question) return;\n\n    this.app.updateAssessmentResponse(question.id, {\n      score: score,\n      label: label,\n      dimension: question.dimension,\n    });\n\n    // Update UI to show selected response\n    this.updateResponseButtons(score);\n  }\n\n  updateResponseButtons(selectedScore) {\n    const buttons = this.assessmentContainer.querySelectorAll('.response-options button');\n    buttons.forEach(button => {\n      const score = parseInt(button.getAttribute('data-score'));\n      if (score === selectedScore) {\n        button.classList.add('active');\n      } else {\n        button.classList.remove('active');\n      }\n    });\n    \n    // Re-render navigation to enable Next button after response selection\n    this.renderNavigation();\n  }\n\n  nextQuestion() {\n    const currentCategory = this.getCurrentCategory();\n    if (!currentCategory) return;\n\n    // Move to next question in current category\n    this.currentQuestionIndex++;\n\n    // If we've reached the end of current category, move to next category\n    if (this.currentQuestionIndex >= currentCategory.questions.length) {\n      this.currentCategoryIndex++;\n      this.currentQuestionIndex = 0;\n\n      // If we've reached the end of all categories, show completion\n      if (this.currentCategoryIndex >= this.questionData.assessmentCategories.length) {\n        this.renderAssessmentComplete();\n        return;\n      }\n    }\n\n    this.renderAssessmentInterface();\n  }\n\n  previousQuestion() {\n    // Move to previous question\n    this.currentQuestionIndex--;\n\n    // If we've gone before the first question in current category\n    if (this.currentQuestionIndex < 0) {\n      this.currentCategoryIndex--;\n\n      // If we've gone before the first category, stay at first question\n      if (this.currentCategoryIndex < 0) {\n        this.currentCategoryIndex = 0;\n        this.currentQuestionIndex = 0;\n      } else {\n        // Move to last question of previous category\n        const prevCategory = this.questionData.assessmentCategories[this.currentCategoryIndex];\n        this.currentQuestionIndex = prevCategory.questions.length - 1;\n      }\n    }\n\n    this.renderAssessmentInterface();\n  }\n\n  getCurrentCategory() {\n    return this.questionData.assessmentCategories[this.currentCategoryIndex];\n  }\n\n  getCurrentQuestion() {\n    const category = this.getCurrentCategory();\n    return category?.questions?.[this.currentQuestionIndex];\n  }\n\n  getTotalQuestions() {\n    if (!this.questionData.assessmentCategories) return 0;\n    return this.questionData.assessmentCategories.reduce((total, category) => {\n      return total + (category.questions ? category.questions.length : 0);\n    }, 0);\n  }\n\n  isLastQuestion() {\n    const lastCategoryIndex = this.questionData.assessmentCategories.length - 1;\n    const lastCategory = this.questionData.assessmentCategories[lastCategoryIndex];\n    return this.currentCategoryIndex === lastCategoryIndex &&\n               this.currentQuestionIndex === lastCategory.questions.length - 1;\n  }\n\n  getDimensionBadge(dimension) {\n    const badgeClasses = {\n      complexity: 'bg-info',\n      safety: 'bg-warning',\n      scale: 'bg-success',\n      maturity: 'bg-secondary',\n    };\n\n    const dimensionLabels = {\n      complexity: 'Technical Complexity',\n      safety: 'Safety Criticality',\n      scale: 'Project Scale',\n      maturity: 'Organizational Maturity',\n    };\n\n    return `<span class=\"badge ${badgeClasses[dimension] || 'bg-secondary'}\">${dimensionLabels[dimension] || dimension}</span>`;\n  }\n\n  resetAssessment() {\n    this.currentCategoryIndex = 0;\n    this.currentQuestionIndex = 0;\n    this.renderAssessmentInterface();\n  }\n}\n\n// Export for global access\nwindow.AssessmentEngine = AssessmentEngine;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/components/assessment.js\n\n}");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("abc9b06f90d5d84a916a")
/******/ })();
/******/ 
/******/ }
);