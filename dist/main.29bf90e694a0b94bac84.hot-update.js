/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatese_tailoring_framework"]("main",{

/***/ "./js/components/assessment.js":
/*!*************************************!*\
  !*** ./js/components/assessment.js ***!
  \*************************************/
/***/ (() => {

eval("{/**\n * Assessment Engine Component\n * Manages the assessment interface, question rendering, and response collection\n */\n\nclass AssessmentEngine {\n  constructor(questionData, app) {\n    this.questionData = questionData;\n    this.app = app;\n    this.currentCategoryIndex = 0;\n    this.currentQuestionIndex = 0;\n    this.assessmentContainer = null;\n  }\n\n  render() {\n    this.assessmentContainer = document.getElementById('assessment-content');\n    if (!this.assessmentContainer) return;\n\n    this.renderAssessmentInterface();\n  }\n\n  renderAssessmentInterface() {\n    if (!this.questionData.assessmentCategories || this.questionData.assessmentCategories.length === 0) {\n      this.renderNoQuestions();\n      return;\n    }\n\n    this.renderProgressBar();\n    this.renderCurrentQuestion();\n    this.renderNavigation();\n  }\n\n  renderProgressBar() {\n    const progressContainer = document.createElement('div');\n    progressContainer.className = 'assessment-progress mb-4';\n\n    const totalQuestions = this.getTotalQuestions();\n    const answeredQuestions = Object.keys(this.app.assessmentResponses).length;\n    const progressPercentage = totalQuestions > 0 ? (answeredQuestions / totalQuestions) * 100 : 0;\n\n    progressContainer.innerHTML = `\n            <div class=\"d-flex justify-content-between align-items-center mb-2\">\n                <h6 class=\"mb-0\">Assessment Progress</h6>\n                <small class=\"text-muted\">${answeredQuestions}/${totalQuestions} questions answered</small>\n            </div>\n            <div class=\"progress\" style=\"height: 8px;\">\n                <div class=\"progress-bar\" role=\"progressbar\" \n                     style=\"width: ${progressPercentage}%\" \n                     aria-valuenow=\"${progressPercentage}\" \n                     aria-valuemin=\"0\" \n                     aria-valuemax=\"100\">\n                </div>\n            </div>\n            <div class=\"mt-2\">\n                <small class=\"text-muted\">\n                    ${this.getCurrentCategory()?.name || 'No category'} \n                    (${this.currentQuestionIndex + 1}/${this.getCurrentCategory()?.questions?.length || 0})\n                </small>\n            </div>\n        `;\n\n    this.assessmentContainer.innerHTML = '';\n    this.assessmentContainer.appendChild(progressContainer);\n  }\n\n  renderCurrentQuestion() {\n    const question = this.getCurrentQuestion();\n    if (!question) {\n      this.renderAssessmentComplete();\n      return;\n    }\n\n    const questionCard = document.createElement('div');\n    questionCard.className = 'card question-card';\n    questionCard.innerHTML = `\n            <div class=\"card-header\">\n                <h5 class=\"card-title mb-0\">\n                    <span class=\"badge bg-primary me-2\">Q${this.currentQuestionIndex + 1}</span>\n                    ${question.text}\n                </h5>\n                <small class=\"text-muted\">${this.getDimensionBadge(question.dimension)}</small>\n            </div>\n            <div class=\"card-body\">\n                ${this.renderResponseOptions(question)}\n                ${question.description ? `<p class=\"text-muted mt-3\">${question.description}</p>` : ''}\n            </div>\n        `;\n\n    this.assessmentContainer.appendChild(questionCard);\n  }\n\n  renderResponseOptions(question) {\n    const currentResponse = this.app.assessmentResponses[question.id];\n    const currentValue = currentResponse ? currentResponse.score : null;\n\n    return `\n            <div class=\"response-options\">\n                <div class=\"btn-group-vertical w-100\" role=\"group\">\n                    ${question.options.map(option => `\n                        <button type=\"button\" \n                                class=\"btn btn-outline-primary ${currentValue === option.value ? 'active' : ''}\"\n                                data-score=\"${option.value}\"\n                                onclick=\"window.seApp.assessmentEngine.selectResponse(${option.value}, '${option.label}')\">\n                            ${option.label}\n                        </button>\n                    `).join('')}\n                </div>\n            </div>\n        `;\n  }\n\n  renderNavigation() {\n    const navContainer = document.createElement('div');\n    navContainer.className = 'assessment-navigation mt-4';\n    \n    // Check if current question has been answered\n    const currentQuestion = this.getCurrentQuestion();\n    const hasAnswered = currentQuestion && this.app.assessmentResponses[currentQuestion.id];\n    \n    navContainer.innerHTML = `\n            <div class=\"d-flex justify-content-between\">\n                <button class=\"btn btn-outline-secondary\" \n                        onclick=\"window.seApp.assessmentEngine.previousQuestion()\"\n                        ${this.currentQuestionIndex === 0 && this.currentCategoryIndex === 0 ? 'disabled' : ''}>\n                    <i class=\"bi bi-arrow-left\"></i> Previous\n                </button>\n                <button class=\"btn btn-primary\" \n                        onclick=\"window.seApp.assessmentEngine.nextQuestion()\"\n                        ${!hasAnswered ? 'disabled' : ''}>\n                    ${this.isLastQuestion() ? 'Complete Assessment' : 'Next Question'} \n                    <i class=\"bi bi-arrow-right\"></i>\n                </button>\n            </div>\n        `;\n\n    this.assessmentContainer.appendChild(navContainer);\n  }\n\n  renderNoQuestions() {\n    this.assessmentContainer.innerHTML = `\n            <div class=\"text-center py-5\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <i class=\"bi bi-exclamation-triangle display-1 text-warning mb-3\"></i>\n                        <h3>No Assessment Questions</h3>\n                        <p class=\"text-muted\">\n                            The assessment questions could not be loaded. Please check the data files.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  renderAssessmentComplete() {\n    // Generate recommendations automatically when assessment is complete\n    this.app.calculateScores();\n    \n    this.assessmentContainer.innerHTML = `\n            <div class=\"text-center py-5\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <i class=\"bi bi-check-circle display-1 text-success mb-3\"></i>\n                        <h3>Assessment Complete!</h3>\n                        <p class=\"text-muted mb-4\">\n                            You have completed all assessment questions. Your process tailoring recommendations are ready.\n                        </p>\n                        <div class=\"mb-4\">\n                            <h5>Assessment Scores</h5>\n                            <div class=\"row\">\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Overall</h6>\n                                            <h3 class=\"text-primary\">${this.app.assessmentScores.overall?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Complexity</h6>\n                                            <h3 class=\"text-info\">${this.app.assessmentScores.complexity?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Safety</h6>\n                                            <h3 class=\"text-warning\">${this.app.assessmentScores.safety?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 col-md-3\">\n                                    <div class=\"card bg-light\">\n                                        <div class=\"card-body text-center\">\n                                            <h6 class=\"card-title\">Scale</h6>\n                                            <h3 class=\"text-success\">${this.app.assessmentScores.scale?.toFixed(1) || '0.0'}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <button class=\"btn btn-primary btn-lg\" onclick=\"window.seApp.showView('recommendations')\">\n                            <i class=\"bi bi-graph-up\"></i>\n                            View Recommendations\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `;\n  }\n\n  selectResponse(score, label) {\n    const question = this.getCurrentQuestion();\n    if (!question) return;\n\n    this.app.updateAssessmentResponse(question.id, {\n      score: score,\n      label: label,\n      dimension: question.dimension,\n    });\n\n    // Update UI to show selected response\n    this.updateResponseButtons(score);\n  }\n\n  updateResponseButtons(selectedScore) {\n    const buttons = this.assessmentContainer.querySelectorAll('.response-options button');\n    buttons.forEach(button => {\n      const score = parseInt(button.getAttribute('data-score'));\n      if (score === selectedScore) {\n        button.classList.add('active');\n      } else {\n        button.classList.remove('active');\n      }\n    });\n    \n    // Re-render navigation to enable Next button after response selection\n    this.renderNavigation();\n  }\n\n  nextQuestion() {\n    const currentCategory = this.getCurrentCategory();\n    if (!currentCategory) return;\n\n    // Move to next question in current category\n    this.currentQuestionIndex++;\n\n    // If we've reached the end of current category, move to next category\n    if (this.currentQuestionIndex >= currentCategory.questions.length) {\n      this.currentCategoryIndex++;\n      this.currentQuestionIndex = 0;\n\n      // If we've reached the end of all categories, show completion\n      if (this.currentCategoryIndex >= this.questionData.assessmentCategories.length) {\n        this.renderAssessmentComplete();\n        return;\n      }\n    }\n\n    this.renderAssessmentInterface();\n  }\n\n  previousQuestion() {\n    // Move to previous question\n    this.currentQuestionIndex--;\n\n    // If we've gone before the first question in current category\n    if (this.currentQuestionIndex < 0) {\n      this.currentCategoryIndex--;\n\n      // If we've gone before the first category, stay at first question\n      if (this.currentCategoryIndex < 0) {\n        this.currentCategoryIndex = 0;\n        this.currentQuestionIndex = 0;\n      } else {\n        // Move to last question of previous category\n        const prevCategory = this.questionData.assessmentCategories[this.currentCategoryIndex];\n        this.currentQuestionIndex = prevCategory.questions.length - 1;\n      }\n    }\n\n    this.renderAssessmentInterface();\n  }\n\n  getCurrentCategory() {\n    return this.questionData.assessmentCategories[this.currentCategoryIndex];\n  }\n\n  getCurrentQuestion() {\n    const category = this.getCurrentCategory();\n    return category?.questions?.[this.currentQuestionIndex];\n  }\n\n  getTotalQuestions() {\n    if (!this.questionData.assessmentCategories) return 0;\n    return this.questionData.assessmentCategories.reduce((total, category) => {\n      return total + (category.questions ? category.questions.length : 0);\n    }, 0);\n  }\n\n  isLastQuestion() {\n    const lastCategoryIndex = this.questionData.assessmentCategories.length - 1;\n    const lastCategory = this.questionData.assessmentCategories[lastCategoryIndex];\n    return this.currentCategoryIndex === lastCategoryIndex &&\n               this.currentQuestionIndex === lastCategory.questions.length - 1;\n  }\n\n  getDimensionBadge(dimension) {\n    const badgeClasses = {\n      complexity: 'bg-info',\n      safety: 'bg-warning',\n      scale: 'bg-success',\n      maturity: 'bg-secondary',\n    };\n\n    const dimensionLabels = {\n      complexity: 'Technical Complexity',\n      safety: 'Safety Criticality',\n      scale: 'Project Scale',\n      maturity: 'Organizational Maturity',\n    };\n\n    return `<span class=\"badge ${badgeClasses[dimension] || 'bg-secondary'}\">${dimensionLabels[dimension] || dimension}</span>`;\n  }\n\n  resetAssessment() {\n    this.currentCategoryIndex = 0;\n    this.currentQuestionIndex = 0;\n    this.renderAssessmentInterface();\n  }\n}\n\n// Export for global access\nwindow.AssessmentEngine = AssessmentEngine;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9qcy9jb21wb25lbnRzL2Fzc2Vzc21lbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLGtCQUFrQixHQUFHLGdCQUFnQjtBQUNqRjtBQUNBLHFEQUFxRDtBQUNyRDtBQUNBLHFDQUFxQyxtQkFBbUI7QUFDeEQsc0NBQXNDLG1CQUFtQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIsdUJBQXVCLDhCQUE4QixHQUFHLGtEQUFrRDtBQUMxRztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELDhCQUE4QjtBQUN6RixzQkFBc0I7QUFDdEI7QUFDQSw0Q0FBNEMsMkNBQTJDO0FBQ3ZGO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsa0JBQWtCLHFEQUFxRCxxQkFBcUI7QUFDNUY7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQSxpRUFBaUUsOENBQThDO0FBQy9HLDhDQUE4QyxhQUFhO0FBQzNELHdGQUF3RixhQUFhLEtBQUssYUFBYTtBQUN2SCw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixxRkFBcUY7QUFDL0c7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsK0JBQStCO0FBQ3pELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFLHVEQUF1RDtBQUM5SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRSwwREFBMEQ7QUFDOUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUsc0RBQXNEO0FBQzdIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFLHFEQUFxRDtBQUM1SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlDQUFpQywwQ0FBMEMsSUFBSSx3Q0FBd0M7QUFDdkg7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zZS10YWlsb3JpbmctZnJhbWV3b3JrLy4vanMvY29tcG9uZW50cy9hc3Nlc3NtZW50LmpzP2I0YTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBc3Nlc3NtZW50IEVuZ2luZSBDb21wb25lbnRcbiAqIE1hbmFnZXMgdGhlIGFzc2Vzc21lbnQgaW50ZXJmYWNlLCBxdWVzdGlvbiByZW5kZXJpbmcsIGFuZCByZXNwb25zZSBjb2xsZWN0aW9uXG4gKi9cblxuY2xhc3MgQXNzZXNzbWVudEVuZ2luZSB7XG4gIGNvbnN0cnVjdG9yKHF1ZXN0aW9uRGF0YSwgYXBwKSB7XG4gICAgdGhpcy5xdWVzdGlvbkRhdGEgPSBxdWVzdGlvbkRhdGE7XG4gICAgdGhpcy5hcHAgPSBhcHA7XG4gICAgdGhpcy5jdXJyZW50Q2F0ZWdvcnlJbmRleCA9IDA7XG4gICAgdGhpcy5jdXJyZW50UXVlc3Rpb25JbmRleCA9IDA7XG4gICAgdGhpcy5hc3Nlc3NtZW50Q29udGFpbmVyID0gbnVsbDtcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICB0aGlzLmFzc2Vzc21lbnRDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXNzZXNzbWVudC1jb250ZW50Jyk7XG4gICAgaWYgKCF0aGlzLmFzc2Vzc21lbnRDb250YWluZXIpIHJldHVybjtcblxuICAgIHRoaXMucmVuZGVyQXNzZXNzbWVudEludGVyZmFjZSgpO1xuICB9XG5cbiAgcmVuZGVyQXNzZXNzbWVudEludGVyZmFjZSgpIHtcbiAgICBpZiAoIXRoaXMucXVlc3Rpb25EYXRhLmFzc2Vzc21lbnRDYXRlZ29yaWVzIHx8IHRoaXMucXVlc3Rpb25EYXRhLmFzc2Vzc21lbnRDYXRlZ29yaWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhpcy5yZW5kZXJOb1F1ZXN0aW9ucygpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMucmVuZGVyUHJvZ3Jlc3NCYXIoKTtcbiAgICB0aGlzLnJlbmRlckN1cnJlbnRRdWVzdGlvbigpO1xuICAgIHRoaXMucmVuZGVyTmF2aWdhdGlvbigpO1xuICB9XG5cbiAgcmVuZGVyUHJvZ3Jlc3NCYXIoKSB7XG4gICAgY29uc3QgcHJvZ3Jlc3NDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBwcm9ncmVzc0NvbnRhaW5lci5jbGFzc05hbWUgPSAnYXNzZXNzbWVudC1wcm9ncmVzcyBtYi00JztcblxuICAgIGNvbnN0IHRvdGFsUXVlc3Rpb25zID0gdGhpcy5nZXRUb3RhbFF1ZXN0aW9ucygpO1xuICAgIGNvbnN0IGFuc3dlcmVkUXVlc3Rpb25zID0gT2JqZWN0LmtleXModGhpcy5hcHAuYXNzZXNzbWVudFJlc3BvbnNlcykubGVuZ3RoO1xuICAgIGNvbnN0IHByb2dyZXNzUGVyY2VudGFnZSA9IHRvdGFsUXVlc3Rpb25zID4gMCA/IChhbnN3ZXJlZFF1ZXN0aW9ucyAvIHRvdGFsUXVlc3Rpb25zKSAqIDEwMCA6IDA7XG5cbiAgICBwcm9ncmVzc0NvbnRhaW5lci5pbm5lckhUTUwgPSBgXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGFsaWduLWl0ZW1zLWNlbnRlciBtYi0yXCI+XG4gICAgICAgICAgICAgICAgPGg2IGNsYXNzPVwibWItMFwiPkFzc2Vzc21lbnQgUHJvZ3Jlc3M8L2g2PlxuICAgICAgICAgICAgICAgIDxzbWFsbCBjbGFzcz1cInRleHQtbXV0ZWRcIj4ke2Fuc3dlcmVkUXVlc3Rpb25zfS8ke3RvdGFsUXVlc3Rpb25zfSBxdWVzdGlvbnMgYW5zd2VyZWQ8L3NtYWxsPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicHJvZ3Jlc3NcIiBzdHlsZT1cImhlaWdodDogOHB4O1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwcm9ncmVzcy1iYXJcIiByb2xlPVwicHJvZ3Jlc3NiYXJcIiBcbiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPVwid2lkdGg6ICR7cHJvZ3Jlc3NQZXJjZW50YWdlfSVcIiBcbiAgICAgICAgICAgICAgICAgICAgIGFyaWEtdmFsdWVub3c9XCIke3Byb2dyZXNzUGVyY2VudGFnZX1cIiBcbiAgICAgICAgICAgICAgICAgICAgIGFyaWEtdmFsdWVtaW49XCIwXCIgXG4gICAgICAgICAgICAgICAgICAgICBhcmlhLXZhbHVlbWF4PVwiMTAwXCI+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtdC0yXCI+XG4gICAgICAgICAgICAgICAgPHNtYWxsIGNsYXNzPVwidGV4dC1tdXRlZFwiPlxuICAgICAgICAgICAgICAgICAgICAke3RoaXMuZ2V0Q3VycmVudENhdGVnb3J5KCk/Lm5hbWUgfHwgJ05vIGNhdGVnb3J5J30gXG4gICAgICAgICAgICAgICAgICAgICgke3RoaXMuY3VycmVudFF1ZXN0aW9uSW5kZXggKyAxfS8ke3RoaXMuZ2V0Q3VycmVudENhdGVnb3J5KCk/LnF1ZXN0aW9ucz8ubGVuZ3RoIHx8IDB9KVxuICAgICAgICAgICAgICAgIDwvc21hbGw+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYDtcblxuICAgIHRoaXMuYXNzZXNzbWVudENvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICB0aGlzLmFzc2Vzc21lbnRDb250YWluZXIuYXBwZW5kQ2hpbGQocHJvZ3Jlc3NDb250YWluZXIpO1xuICB9XG5cbiAgcmVuZGVyQ3VycmVudFF1ZXN0aW9uKCkge1xuICAgIGNvbnN0IHF1ZXN0aW9uID0gdGhpcy5nZXRDdXJyZW50UXVlc3Rpb24oKTtcbiAgICBpZiAoIXF1ZXN0aW9uKSB7XG4gICAgICB0aGlzLnJlbmRlckFzc2Vzc21lbnRDb21wbGV0ZSgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHF1ZXN0aW9uQ2FyZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHF1ZXN0aW9uQ2FyZC5jbGFzc05hbWUgPSAnY2FyZCBxdWVzdGlvbi1jYXJkJztcbiAgICBxdWVzdGlvbkNhcmQuaW5uZXJIVE1MID0gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtaGVhZGVyXCI+XG4gICAgICAgICAgICAgICAgPGg1IGNsYXNzPVwiY2FyZC10aXRsZSBtYi0wXCI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiYmFkZ2UgYmctcHJpbWFyeSBtZS0yXCI+USR7dGhpcy5jdXJyZW50UXVlc3Rpb25JbmRleCArIDF9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAke3F1ZXN0aW9uLnRleHR9XG4gICAgICAgICAgICAgICAgPC9oNT5cbiAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9XCJ0ZXh0LW11dGVkXCI+JHt0aGlzLmdldERpbWVuc2lvbkJhZGdlKHF1ZXN0aW9uLmRpbWVuc2lvbil9PC9zbWFsbD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtYm9keVwiPlxuICAgICAgICAgICAgICAgICR7dGhpcy5yZW5kZXJSZXNwb25zZU9wdGlvbnMocXVlc3Rpb24pfVxuICAgICAgICAgICAgICAgICR7cXVlc3Rpb24uZGVzY3JpcHRpb24gPyBgPHAgY2xhc3M9XCJ0ZXh0LW11dGVkIG10LTNcIj4ke3F1ZXN0aW9uLmRlc2NyaXB0aW9ufTwvcD5gIDogJyd9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgYDtcblxuICAgIHRoaXMuYXNzZXNzbWVudENvbnRhaW5lci5hcHBlbmRDaGlsZChxdWVzdGlvbkNhcmQpO1xuICB9XG5cbiAgcmVuZGVyUmVzcG9uc2VPcHRpb25zKHF1ZXN0aW9uKSB7XG4gICAgY29uc3QgY3VycmVudFJlc3BvbnNlID0gdGhpcy5hcHAuYXNzZXNzbWVudFJlc3BvbnNlc1txdWVzdGlvbi5pZF07XG4gICAgY29uc3QgY3VycmVudFZhbHVlID0gY3VycmVudFJlc3BvbnNlID8gY3VycmVudFJlc3BvbnNlLnNjb3JlIDogbnVsbDtcblxuICAgIHJldHVybiBgXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwicmVzcG9uc2Utb3B0aW9uc1wiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJidG4tZ3JvdXAtdmVydGljYWwgdy0xMDBcIiByb2xlPVwiZ3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgICAgJHtxdWVzdGlvbi5vcHRpb25zLm1hcChvcHRpb24gPT4gYFxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiYnRuIGJ0bi1vdXRsaW5lLXByaW1hcnkgJHtjdXJyZW50VmFsdWUgPT09IG9wdGlvbi52YWx1ZSA/ICdhY3RpdmUnIDogJyd9XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1zY29yZT1cIiR7b3B0aW9uLnZhbHVlfVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uY2xpY2s9XCJ3aW5kb3cuc2VBcHAuYXNzZXNzbWVudEVuZ2luZS5zZWxlY3RSZXNwb25zZSgke29wdGlvbi52YWx1ZX0sICcke29wdGlvbi5sYWJlbH0nKVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7b3B0aW9uLmxhYmVsfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIGApLmpvaW4oJycpfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIGA7XG4gIH1cblxuICByZW5kZXJOYXZpZ2F0aW9uKCkge1xuICAgIGNvbnN0IG5hdkNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIG5hdkNvbnRhaW5lci5jbGFzc05hbWUgPSAnYXNzZXNzbWVudC1uYXZpZ2F0aW9uIG10LTQnO1xuICAgIFxuICAgIC8vIENoZWNrIGlmIGN1cnJlbnQgcXVlc3Rpb24gaGFzIGJlZW4gYW5zd2VyZWRcbiAgICBjb25zdCBjdXJyZW50UXVlc3Rpb24gPSB0aGlzLmdldEN1cnJlbnRRdWVzdGlvbigpO1xuICAgIGNvbnN0IGhhc0Fuc3dlcmVkID0gY3VycmVudFF1ZXN0aW9uICYmIHRoaXMuYXBwLmFzc2Vzc21lbnRSZXNwb25zZXNbY3VycmVudFF1ZXN0aW9uLmlkXTtcbiAgICBcbiAgICBuYXZDb250YWluZXIuaW5uZXJIVE1MID0gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLW91dGxpbmUtc2Vjb25kYXJ5XCIgXG4gICAgICAgICAgICAgICAgICAgICAgICBvbmNsaWNrPVwid2luZG93LnNlQXBwLmFzc2Vzc21lbnRFbmdpbmUucHJldmlvdXNRdWVzdGlvbigpXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICR7dGhpcy5jdXJyZW50UXVlc3Rpb25JbmRleCA9PT0gMCAmJiB0aGlzLmN1cnJlbnRDYXRlZ29yeUluZGV4ID09PSAwID8gJ2Rpc2FibGVkJyA6ICcnfT5cbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJiaSBiaS1hcnJvdy1sZWZ0XCI+PC9pPiBQcmV2aW91c1xuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLXByaW1hcnlcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uY2xpY2s9XCJ3aW5kb3cuc2VBcHAuYXNzZXNzbWVudEVuZ2luZS5uZXh0UXVlc3Rpb24oKVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAkeyFoYXNBbnN3ZXJlZCA/ICdkaXNhYmxlZCcgOiAnJ30+XG4gICAgICAgICAgICAgICAgICAgICR7dGhpcy5pc0xhc3RRdWVzdGlvbigpID8gJ0NvbXBsZXRlIEFzc2Vzc21lbnQnIDogJ05leHQgUXVlc3Rpb24nfSBcbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJiaSBiaS1hcnJvdy1yaWdodFwiPjwvaT5cbiAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuXG4gICAgdGhpcy5hc3Nlc3NtZW50Q29udGFpbmVyLmFwcGVuZENoaWxkKG5hdkNvbnRhaW5lcik7XG4gIH1cblxuICByZW5kZXJOb1F1ZXN0aW9ucygpIHtcbiAgICB0aGlzLmFzc2Vzc21lbnRDb250YWluZXIuaW5uZXJIVE1MID0gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRleHQtY2VudGVyIHB5LTVcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1ib2R5XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cImJpIGJpLWV4Y2xhbWF0aW9uLXRyaWFuZ2xlIGRpc3BsYXktMSB0ZXh0LXdhcm5pbmcgbWItM1wiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5ObyBBc3Nlc3NtZW50IFF1ZXN0aW9uczwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRleHQtbXV0ZWRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaGUgYXNzZXNzbWVudCBxdWVzdGlvbnMgY291bGQgbm90IGJlIGxvYWRlZC4gUGxlYXNlIGNoZWNrIHRoZSBkYXRhIGZpbGVzLlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuICB9XG5cbiAgcmVuZGVyQXNzZXNzbWVudENvbXBsZXRlKCkge1xuICAgIC8vIEdlbmVyYXRlIHJlY29tbWVuZGF0aW9ucyBhdXRvbWF0aWNhbGx5IHdoZW4gYXNzZXNzbWVudCBpcyBjb21wbGV0ZVxuICAgIHRoaXMuYXBwLmNhbGN1bGF0ZVNjb3JlcygpO1xuICAgIFxuICAgIHRoaXMuYXNzZXNzbWVudENvbnRhaW5lci5pbm5lckhUTUwgPSBgXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwidGV4dC1jZW50ZXIgcHktNVwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkXCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJvZHlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYmkgYmktY2hlY2stY2lyY2xlIGRpc3BsYXktMSB0ZXh0LXN1Y2Nlc3MgbWItM1wiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxoMz5Bc3Nlc3NtZW50IENvbXBsZXRlITwvaDM+XG4gICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cInRleHQtbXV0ZWQgbWItNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFlvdSBoYXZlIGNvbXBsZXRlZCBhbGwgYXNzZXNzbWVudCBxdWVzdGlvbnMuIFlvdXIgcHJvY2VzcyB0YWlsb3JpbmcgcmVjb21tZW5kYXRpb25zIGFyZSByZWFkeS5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJtYi00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg1PkFzc2Vzc21lbnQgU2NvcmVzPC9oNT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtNiBjb2wtbWQtM1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQgYmctbGlnaHRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZC1ib2R5IHRleHQtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoNiBjbGFzcz1cImNhcmQtdGl0bGVcIj5PdmVyYWxsPC9oNj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPVwidGV4dC1wcmltYXJ5XCI+JHt0aGlzLmFwcC5hc3Nlc3NtZW50U2NvcmVzLm92ZXJhbGw/LnRvRml4ZWQoMSkgfHwgJzAuMCd9PC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC02IGNvbC1tZC0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZCBiZy1saWdodFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkLWJvZHkgdGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGg2IGNsYXNzPVwiY2FyZC10aXRsZVwiPkNvbXBsZXhpdHk8L2g2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9XCJ0ZXh0LWluZm9cIj4ke3RoaXMuYXBwLmFzc2Vzc21lbnRTY29yZXMuY29tcGxleGl0eT8udG9GaXhlZCgxKSB8fCAnMC4wJ308L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTYgY29sLW1kLTNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkIGJnLWxpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtYm9keSB0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9XCJjYXJkLXRpdGxlXCI+U2FmZXR5PC9oNj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPVwidGV4dC13YXJuaW5nXCI+JHt0aGlzLmFwcC5hc3Nlc3NtZW50U2NvcmVzLnNhZmV0eT8udG9GaXhlZCgxKSB8fCAnMC4wJ308L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTYgY29sLW1kLTNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjYXJkIGJnLWxpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNhcmQtYm9keSB0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDYgY2xhc3M9XCJjYXJkLXRpdGxlXCI+U2NhbGU8L2g2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3M9XCJ0ZXh0LXN1Y2Nlc3NcIj4ke3RoaXMuYXBwLmFzc2Vzc21lbnRTY29yZXMuc2NhbGU/LnRvRml4ZWQoMSkgfHwgJzAuMCd9PC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeSBidG4tbGdcIiBvbmNsaWNrPVwid2luZG93LnNlQXBwLnNob3dWaWV3KCdyZWNvbW1lbmRhdGlvbnMnKVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYmkgYmktZ3JhcGgtdXBcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgVmlldyBSZWNvbW1lbmRhdGlvbnNcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICBgO1xuICB9XG5cbiAgc2VsZWN0UmVzcG9uc2Uoc2NvcmUsIGxhYmVsKSB7XG4gICAgY29uc3QgcXVlc3Rpb24gPSB0aGlzLmdldEN1cnJlbnRRdWVzdGlvbigpO1xuICAgIGlmICghcXVlc3Rpb24pIHJldHVybjtcblxuICAgIHRoaXMuYXBwLnVwZGF0ZUFzc2Vzc21lbnRSZXNwb25zZShxdWVzdGlvbi5pZCwge1xuICAgICAgc2NvcmU6IHNjb3JlLFxuICAgICAgbGFiZWw6IGxhYmVsLFxuICAgICAgZGltZW5zaW9uOiBxdWVzdGlvbi5kaW1lbnNpb24sXG4gICAgfSk7XG5cbiAgICAvLyBVcGRhdGUgVUkgdG8gc2hvdyBzZWxlY3RlZCByZXNwb25zZVxuICAgIHRoaXMudXBkYXRlUmVzcG9uc2VCdXR0b25zKHNjb3JlKTtcbiAgfVxuXG4gIHVwZGF0ZVJlc3BvbnNlQnV0dG9ucyhzZWxlY3RlZFNjb3JlKSB7XG4gICAgY29uc3QgYnV0dG9ucyA9IHRoaXMuYXNzZXNzbWVudENvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCcucmVzcG9uc2Utb3B0aW9ucyBidXR0b24nKTtcbiAgICBidXR0b25zLmZvckVhY2goYnV0dG9uID0+IHtcbiAgICAgIGNvbnN0IHNjb3JlID0gcGFyc2VJbnQoYnV0dG9uLmdldEF0dHJpYnV0ZSgnZGF0YS1zY29yZScpKTtcbiAgICAgIGlmIChzY29yZSA9PT0gc2VsZWN0ZWRTY29yZSkge1xuICAgICAgICBidXR0b24uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBidXR0b24uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgXG4gICAgLy8gUmUtcmVuZGVyIG5hdmlnYXRpb24gdG8gZW5hYmxlIE5leHQgYnV0dG9uIGFmdGVyIHJlc3BvbnNlIHNlbGVjdGlvblxuICAgIHRoaXMucmVuZGVyTmF2aWdhdGlvbigpO1xuICB9XG5cbiAgbmV4dFF1ZXN0aW9uKCkge1xuICAgIGNvbnN0IGN1cnJlbnRDYXRlZ29yeSA9IHRoaXMuZ2V0Q3VycmVudENhdGVnb3J5KCk7XG4gICAgaWYgKCFjdXJyZW50Q2F0ZWdvcnkpIHJldHVybjtcblxuICAgIC8vIE1vdmUgdG8gbmV4dCBxdWVzdGlvbiBpbiBjdXJyZW50IGNhdGVnb3J5XG4gICAgdGhpcy5jdXJyZW50UXVlc3Rpb25JbmRleCsrO1xuXG4gICAgLy8gSWYgd2UndmUgcmVhY2hlZCB0aGUgZW5kIG9mIGN1cnJlbnQgY2F0ZWdvcnksIG1vdmUgdG8gbmV4dCBjYXRlZ29yeVxuICAgIGlmICh0aGlzLmN1cnJlbnRRdWVzdGlvbkluZGV4ID49IGN1cnJlbnRDYXRlZ29yeS5xdWVzdGlvbnMubGVuZ3RoKSB7XG4gICAgICB0aGlzLmN1cnJlbnRDYXRlZ29yeUluZGV4Kys7XG4gICAgICB0aGlzLmN1cnJlbnRRdWVzdGlvbkluZGV4ID0gMDtcblxuICAgICAgLy8gSWYgd2UndmUgcmVhY2hlZCB0aGUgZW5kIG9mIGFsbCBjYXRlZ29yaWVzLCBzaG93IGNvbXBsZXRpb25cbiAgICAgIGlmICh0aGlzLmN1cnJlbnRDYXRlZ29yeUluZGV4ID49IHRoaXMucXVlc3Rpb25EYXRhLmFzc2Vzc21lbnRDYXRlZ29yaWVzLmxlbmd0aCkge1xuICAgICAgICB0aGlzLnJlbmRlckFzc2Vzc21lbnRDb21wbGV0ZSgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5yZW5kZXJBc3Nlc3NtZW50SW50ZXJmYWNlKCk7XG4gIH1cblxuICBwcmV2aW91c1F1ZXN0aW9uKCkge1xuICAgIC8vIE1vdmUgdG8gcHJldmlvdXMgcXVlc3Rpb25cbiAgICB0aGlzLmN1cnJlbnRRdWVzdGlvbkluZGV4LS07XG5cbiAgICAvLyBJZiB3ZSd2ZSBnb25lIGJlZm9yZSB0aGUgZmlyc3QgcXVlc3Rpb24gaW4gY3VycmVudCBjYXRlZ29yeVxuICAgIGlmICh0aGlzLmN1cnJlbnRRdWVzdGlvbkluZGV4IDwgMCkge1xuICAgICAgdGhpcy5jdXJyZW50Q2F0ZWdvcnlJbmRleC0tO1xuXG4gICAgICAvLyBJZiB3ZSd2ZSBnb25lIGJlZm9yZSB0aGUgZmlyc3QgY2F0ZWdvcnksIHN0YXkgYXQgZmlyc3QgcXVlc3Rpb25cbiAgICAgIGlmICh0aGlzLmN1cnJlbnRDYXRlZ29yeUluZGV4IDwgMCkge1xuICAgICAgICB0aGlzLmN1cnJlbnRDYXRlZ29yeUluZGV4ID0gMDtcbiAgICAgICAgdGhpcy5jdXJyZW50UXVlc3Rpb25JbmRleCA9IDA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBNb3ZlIHRvIGxhc3QgcXVlc3Rpb24gb2YgcHJldmlvdXMgY2F0ZWdvcnlcbiAgICAgICAgY29uc3QgcHJldkNhdGVnb3J5ID0gdGhpcy5xdWVzdGlvbkRhdGEuYXNzZXNzbWVudENhdGVnb3JpZXNbdGhpcy5jdXJyZW50Q2F0ZWdvcnlJbmRleF07XG4gICAgICAgIHRoaXMuY3VycmVudFF1ZXN0aW9uSW5kZXggPSBwcmV2Q2F0ZWdvcnkucXVlc3Rpb25zLmxlbmd0aCAtIDE7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5yZW5kZXJBc3Nlc3NtZW50SW50ZXJmYWNlKCk7XG4gIH1cblxuICBnZXRDdXJyZW50Q2F0ZWdvcnkoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlc3Rpb25EYXRhLmFzc2Vzc21lbnRDYXRlZ29yaWVzW3RoaXMuY3VycmVudENhdGVnb3J5SW5kZXhdO1xuICB9XG5cbiAgZ2V0Q3VycmVudFF1ZXN0aW9uKCkge1xuICAgIGNvbnN0IGNhdGVnb3J5ID0gdGhpcy5nZXRDdXJyZW50Q2F0ZWdvcnkoKTtcbiAgICByZXR1cm4gY2F0ZWdvcnk/LnF1ZXN0aW9ucz8uW3RoaXMuY3VycmVudFF1ZXN0aW9uSW5kZXhdO1xuICB9XG5cbiAgZ2V0VG90YWxRdWVzdGlvbnMoKSB7XG4gICAgaWYgKCF0aGlzLnF1ZXN0aW9uRGF0YS5hc3Nlc3NtZW50Q2F0ZWdvcmllcykgcmV0dXJuIDA7XG4gICAgcmV0dXJuIHRoaXMucXVlc3Rpb25EYXRhLmFzc2Vzc21lbnRDYXRlZ29yaWVzLnJlZHVjZSgodG90YWwsIGNhdGVnb3J5KSA9PiB7XG4gICAgICByZXR1cm4gdG90YWwgKyAoY2F0ZWdvcnkucXVlc3Rpb25zID8gY2F0ZWdvcnkucXVlc3Rpb25zLmxlbmd0aCA6IDApO1xuICAgIH0sIDApO1xuICB9XG5cbiAgaXNMYXN0UXVlc3Rpb24oKSB7XG4gICAgY29uc3QgbGFzdENhdGVnb3J5SW5kZXggPSB0aGlzLnF1ZXN0aW9uRGF0YS5hc3Nlc3NtZW50Q2F0ZWdvcmllcy5sZW5ndGggLSAxO1xuICAgIGNvbnN0IGxhc3RDYXRlZ29yeSA9IHRoaXMucXVlc3Rpb25EYXRhLmFzc2Vzc21lbnRDYXRlZ29yaWVzW2xhc3RDYXRlZ29yeUluZGV4XTtcbiAgICByZXR1cm4gdGhpcy5jdXJyZW50Q2F0ZWdvcnlJbmRleCA9PT0gbGFzdENhdGVnb3J5SW5kZXggJiZcbiAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFF1ZXN0aW9uSW5kZXggPT09IGxhc3RDYXRlZ29yeS5xdWVzdGlvbnMubGVuZ3RoIC0gMTtcbiAgfVxuXG4gIGdldERpbWVuc2lvbkJhZGdlKGRpbWVuc2lvbikge1xuICAgIGNvbnN0IGJhZGdlQ2xhc3NlcyA9IHtcbiAgICAgIGNvbXBsZXhpdHk6ICdiZy1pbmZvJyxcbiAgICAgIHNhZmV0eTogJ2JnLXdhcm5pbmcnLFxuICAgICAgc2NhbGU6ICdiZy1zdWNjZXNzJyxcbiAgICAgIG1hdHVyaXR5OiAnYmctc2Vjb25kYXJ5JyxcbiAgICB9O1xuXG4gICAgY29uc3QgZGltZW5zaW9uTGFiZWxzID0ge1xuICAgICAgY29tcGxleGl0eTogJ1RlY2huaWNhbCBDb21wbGV4aXR5JyxcbiAgICAgIHNhZmV0eTogJ1NhZmV0eSBDcml0aWNhbGl0eScsXG4gICAgICBzY2FsZTogJ1Byb2plY3QgU2NhbGUnLFxuICAgICAgbWF0dXJpdHk6ICdPcmdhbml6YXRpb25hbCBNYXR1cml0eScsXG4gICAgfTtcblxuICAgIHJldHVybiBgPHNwYW4gY2xhc3M9XCJiYWRnZSAke2JhZGdlQ2xhc3Nlc1tkaW1lbnNpb25dIHx8ICdiZy1zZWNvbmRhcnknfVwiPiR7ZGltZW5zaW9uTGFiZWxzW2RpbWVuc2lvbl0gfHwgZGltZW5zaW9ufTwvc3Bhbj5gO1xuICB9XG5cbiAgcmVzZXRBc3Nlc3NtZW50KCkge1xuICAgIHRoaXMuY3VycmVudENhdGVnb3J5SW5kZXggPSAwO1xuICAgIHRoaXMuY3VycmVudFF1ZXN0aW9uSW5kZXggPSAwO1xuICAgIHRoaXMucmVuZGVyQXNzZXNzbWVudEludGVyZmFjZSgpO1xuICB9XG59XG5cbi8vIEV4cG9ydCBmb3IgZ2xvYmFsIGFjY2Vzc1xud2luZG93LkFzc2Vzc21lbnRFbmdpbmUgPSBBc3Nlc3NtZW50RW5naW5lO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./js/components/assessment.js\n\n}");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("6d62efb01f640c37816f")
/******/ })();
/******/ 
/******/ }
);