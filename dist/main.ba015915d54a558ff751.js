(()=>{var e={438:()=>{window.ExportManager=class{constructor(e){this.app=e}render(){const e=document.getElementById("export-content");if(!e)return;const t=this.app.getAssessmentData();t.recommendations&&Object.keys(t.recommendations).length>0?this.renderExportOptions(e,t):this.renderNoData(e)}renderNoData(e){e.innerHTML='\n            <div class="text-center py-5">\n                <div class="card">\n                    <div class="card-body">\n                        <i class="bi bi-exclamation-circle display-1 text-warning mb-3"></i>\n                        <h3>No Data to Export</h3>\n                        <p class="text-muted mb-4">\n                            Complete the assessment first to generate exportable recommendations and reports.\n                        </p>\n                        <button class="btn btn-primary" onclick="window.seApp.showView(\'assessment\')">\n                            <i class="bi bi-clipboard-check"></i>\n                            Start Assessment\n                        </button>\n                    </div>\n                </div>\n            </div>\n        '}renderExportOptions(e,t){const s=this.calculateExportStats(t);e.innerHTML=`\n            <div class="card shadow-sm mb-4">\n                <div class="card-header bg-gradient-primary text-white">\n                    <h4 class="card-title mb-0">\n                        <i class="bi bi-download"></i>\n                        Export Reports & Data\n                    </h4>\n                </div>\n                <div class="card-body">\n                    <div class="alert alert-info">\n                        <i class="bi bi-info-circle me-2"></i>\n                        <strong>Ready to Export:</strong> Your assessment contains ${s.totalProcesses} process recommendations \n                        with ${s.totalQuestions} assessment responses across ${s.categories} categories.\n                    </div>\n                    \n                    <div class="row mb-4">\n                        <div class="col-md-3 text-center">\n                            <div class="stat-card">\n                                <span class="stat-number text-primary">${s.totalProcesses}</span>\n                                <span class="stat-label">Process Recommendations</span>\n                            </div>\n                        </div>\n                        <div class="col-md-3 text-center">\n                            <div class="stat-card">\n                                <span class="stat-number text-success">${s.averageConfidence}%</span>\n                                <span class="stat-label">Average Confidence</span>\n                            </div>\n                        </div>\n                        <div class="col-md-3 text-center">\n                            <div class="stat-card">\n                                <span class="stat-number text-warning">${s.totalEffort}</span>\n                                <span class="stat-label">Total Effort Score</span>\n                            </div>\n                        </div>\n                        <div class="col-md-3 text-center">\n                            <div class="stat-card">\n                                <span class="stat-number text-info">${s.dependencies}</span>\n                                <span class="stat-label">Dependencies</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row">\n                <div class="col-lg-4 mb-4">\n                    <div class="export-option" data-export-type="pdf">\n                        <div class="export-icon">\n                            <i class="bi bi-file-earmark-pdf-fill"></i>\n                        </div>\n                        <h5 class="export-title">Professional PDF Report</h5>\n                        <p class="export-description">\n                            Comprehensive report with executive summary, detailed recommendations, \n                            process network visualization, and implementation roadmap.\n                        </p>\n                        <button class="btn btn-primary" id="export-pdf-btn">\n                            <i class="bi bi-download"></i>\n                            Download PDF\n                        </button>\n                    </div>\n                </div>\n                \n                <div class="col-lg-4 mb-4">\n                    <div class="export-option" data-export-type="json">\n                        <div class="export-icon">\n                            <i class="bi bi-file-earmark-code-fill"></i>\n                        </div>\n                        <h5 class="export-title">JSON Configuration</h5>\n                        <p class="export-description">\n                            Machine-readable format containing assessment data, scores, and recommendations \n                            for integration with other tools and systems.\n                        </p>\n                        <button class="btn btn-outline-primary" id="export-json-btn">\n                            <i class="bi bi-download"></i>\n                            Download JSON\n                        </button>\n                    </div>\n                </div>\n                \n                <div class="col-lg-4 mb-4">\n                    <div class="export-option" data-export-type="excel">\n                        <div class="export-icon">\n                            <i class="bi bi-file-earmark-spreadsheet-fill"></i>\n                        </div>\n                        <h5 class="export-title">Excel Analytics</h5>\n                        <p class="export-description">\n                            Spreadsheet format with assessment responses, process recommendations, \n                            effort calculations, and pivot tables for further analysis.\n                        </p>\n                        <button class="btn btn-outline-success" id="export-excel-btn">\n                            <i class="bi bi-download"></i>\n                            Download Excel\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            <div class="card">\n                <div class="card-header">\n                    <h6 class="card-title mb-0">\n                        <i class="bi bi-gear"></i>\n                        Export Options\n                    </h6>\n                </div>\n                <div class="card-body">\n                    <div class="row">\n                        <div class="col-md-6">\n                            <div class="form-check">\n                                <input class="form-check-input" type="checkbox" id="include-assessment-details" checked>\n                                <label class="form-check-label" for="include-assessment-details">\n                                    Include detailed assessment responses\n                                </label>\n                            </div>\n                            <div class="form-check">\n                                <input class="form-check-input" type="checkbox" id="include-rationale" checked>\n                                <label class="form-check-label" for="include-rationale">\n                                    Include recommendation rationale\n                                </label>\n                            </div>\n                            <div class="form-check">\n                                <input class="form-check-input" type="checkbox" id="include-dependencies" checked>\n                                <label class="form-check-label" for="include-dependencies">\n                                    Include process dependencies\n                                </label>\n                            </div>\n                        </div>\n                        <div class="col-md-6">\n                            <div class="form-check">\n                                <input class="form-check-input" type="checkbox" id="include-visualization" checked>\n                                <label class="form-check-label" for="include-visualization">\n                                    Include process network visualization\n                                </label>\n                            </div>\n                            <div class="form-check">\n                                <input class="form-check-input" type="checkbox" id="include-metadata" checked>\n                                <label class="form-check-label" for="include-metadata">\n                                    Include metadata and timestamps\n                                </label>\n                            </div>\n                            <div class="form-check">\n                                <input class="form-check-input" type="checkbox" id="include-implementation-guide">\n                                <label class="form-check-label" for="include-implementation-guide">\n                                    Include implementation guidance\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="mt-4 text-center">\n                <small class="text-muted">\n                    <i class="bi bi-shield-check"></i>\n                    All exports are generated locally in your browser. No data is sent to external servers.\n                </small>\n            </div>\n        `,this.attachExportEventListeners()}calculateExportStats(e){const t=e.recommendations||{},s=e.responses||{},n=Object.keys(t).length,o=Object.keys(s).length,i=new Set(Object.values(s).map(e=>e.dimension)).size,a=Object.values(t).map(e=>e.confidence||0);return{totalProcesses:n,totalQuestions:o,categories:i,averageConfidence:a.length>0?Math.round(a.reduce((e,t)=>e+t,0)/a.length*100):0,totalEffort:Object.values(t).reduce((e,t)=>e+(t.effort||0),0),dependencies:Object.values(t).reduce((e,t)=>e+(t.dependencies?.length||0),0)}}attachExportEventListeners(){document.getElementById("export-pdf-btn")?.addEventListener("click",()=>{this.exportPDF()}),document.getElementById("export-json-btn")?.addEventListener("click",()=>{this.exportJSON()}),document.getElementById("export-excel-btn")?.addEventListener("click",()=>{this.exportExcel()}),document.querySelectorAll(".export-option").forEach(e=>{e.addEventListener("click",t=>{if(!t.target.closest("button")){const t=e.querySelector("button");t&&t.click()}})})}getExportOptions(){return{includeAssessmentDetails:document.getElementById("include-assessment-details")?.checked??!0,includeRationale:document.getElementById("include-rationale")?.checked??!0,includeDependencies:document.getElementById("include-dependencies")?.checked??!0,includeVisualization:document.getElementById("include-visualization")?.checked??!0,includeMetadata:document.getElementById("include-metadata")?.checked??!0,includeImplementationGuide:document.getElementById("include-implementation-guide")?.checked??!1}}async exportPDF(){try{this.showExportProgress("Generating PDF report...");const e=this.app.getAssessmentData(),t=this.getExportOptions(),{jsPDF:s}=window.jspdf,n=new s;let o=20;const i=n.internal.pageSize.height,a=20,r=(e=20)=>{o+e>i-a&&(n.addPage(),o=20)};n.setFontSize(24),n.setTextColor(13,110,253),n.text("Systems Engineering Process",20,o),o+=10,n.text("Tailoring Report",20,o),o+=20,n.setFontSize(12),n.setTextColor(0,0,0),n.text(`Generated: ${(new Date).toLocaleDateString()}`,20,o),o+=10,n.text("Based on ISO/IEC/IEEE 15288:2023",20,o),o+=30,r(40),n.setFontSize(16),n.setTextColor(13,110,253),n.text("Executive Summary",20,o),o+=15,n.setFontSize(10),n.setTextColor(0,0,0);const l=e.scores;[`Overall Assessment Score: ${l.overall?.toFixed(1)||"N/A"}/5.0`,`Technical Complexity: ${l.complexity?.toFixed(1)||"N/A"}/5.0`,`Safety Criticality: ${l.safety?.toFixed(1)||"N/A"}/5.0`,`Project Scale: ${l.scale?.toFixed(1)||"N/A"}/5.0`,`Organizational Maturity: ${l.maturity?.toFixed(1)||"N/A"}/5.0`].forEach(e=>{r(),n.text(e,20,o),o+=6}),o+=10;const c=e.recommendations||{},d=this.getLevelCounts(c);[`Total Processes Analyzed: ${Object.keys(c).length}`,`Basic Level Processes: ${d.basic}`,`Standard Level Processes: ${d.standard}`,`Comprehensive Level Processes: ${d.comprehensive}`].forEach(e=>{r(),n.text(e,20,o),o+=6}),r(30),o+=10,n.setFontSize(16),n.setTextColor(13,110,253),n.text("Process Recommendations",20,o),o+=15;const m=this.groupRecommendationsByCategory(c);if(Object.keys(m).forEach(e=>{r(20),n.setFontSize(14),n.setTextColor(0,0,0);const s=this.app.processData.processCategories?.[e]||e;n.text(s,20,o),o+=10,m[e].forEach(e=>{r(15),n.setFontSize(10),n.setTextColor(0,0,0);const s=`${e.processName}: ${e.recommendedLevel.toUpperCase()}`;n.text(s,25,o),o+=5,t.includeRationale&&e.rationale&&e.rationale.slice(0,2).forEach(e=>{r();const t=`  • ${e}`;n.splitTextToSize(t,160).forEach(e=>{n.text(e,30,o),o+=4})}),o+=3}),o+=5}),t.includeImplementationGuide&&(r(30),n.setFontSize(16),n.setTextColor(13,110,253),n.text("Implementation Guidance",20,o),o+=15,n.setFontSize(10),n.setTextColor(0,0,0),["1. Begin with high-priority Technical Management processes","2. Implement processes in dependency order","3. Start with Basic level and mature gradually","4. Monitor effectiveness and adjust as needed","5. Regular reviews ensure continued alignment"].forEach(e=>{r(),n.text(e,20,o),o+=6})),t.includeAssessmentDetails){r(30),n.setFontSize(16),n.setTextColor(13,110,253),n.text("Assessment Details",20,o),o+=15;const t=e.responses||{};(this.app.questionData.assessmentCategories||[]).forEach(e=>{r(15),n.setFontSize(12),n.setTextColor(0,0,0),n.text(e.name,20,o),o+=8,e.questions.forEach(e=>{const s=t[e.id];s&&(r(12),n.setFontSize(9),n.text(`Q: ${e.text}`,25,o),o+=5,n.text(`A: ${s.label} (Score: ${s.score})`,25,o),o+=7)}),o+=5})}t.includeMetadata&&(r(20),n.setFontSize(12),n.setTextColor(100,100,100),n.text("Report Metadata",20,o),o+=10,n.setFontSize(8),[`Generated: ${(new Date).toISOString()}`,"Framework Version: 1.0.0","Standard: ISO/IEC/IEEE 15288:2023",`Processes Analyzed: ${Object.keys(c).length}`,`Assessment Questions: ${Object.keys(e.responses||{}).length}`].forEach(e=>{n.text(e,20,o),o+=4}));const h=`SE_Process_Tailoring_Report_${(new Date).toISOString().split("T")[0]}.pdf`;n.save(h),this.hideExportProgress(),this.app.showSuccess("PDF report downloaded successfully!")}catch(e){this.hideExportProgress(),this.app.showError("Failed to generate PDF report. Please try again.")}}exportJSON(){try{const e=this.app.getAssessmentData(),t=this.getExportOptions(),s={metadata:{generatedAt:(new Date).toISOString(),version:"1.0.0",standard:"ISO/IEC/IEEE 15288:2023",frameworkVersion:"1.0.0"},assessmentScores:e.scores,recommendations:e.recommendations};t.includeAssessmentDetails&&(s.assessmentResponses=e.responses),t.includeDependencies&&(s.dependencies=this.app.getDependencyData()),t.includeMetadata&&(s.processData=this.app.getProcessData());const n=JSON.stringify(s,null,2),o=new Blob([n],{type:"application/json"}),i=URL.createObjectURL(o),a=document.createElement("a");a.href=i,a.download=`SE_Process_Tailoring_Config_${(new Date).toISOString().split("T")[0]}.json`,document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(i),this.app.showSuccess("JSON configuration downloaded successfully!")}catch(e){this.app.showError("Failed to export JSON configuration. Please try again.")}}exportExcel(){try{const e=this.app.getAssessmentData(),t=this.getExportOptions();let s="Process Name,Category,Recommended Level,Effort,Complexity,Confidence,Rationale\n";const n=e.recommendations||{};Object.values(n).forEach(e=>{const n=t.includeRationale&&e.rationale?.join("; ")||"";s+=`"${e.processName}","${e.category}","${e.recommendedLevel}",${e.effort},${e.complexity},${Math.round(100*e.confidence)},"${n}"\n`}),t.includeAssessmentDetails&&(s+="\n\nAssessment Responses\n",s+="Question,Response,Score,Dimension\n",Object.values(e.responses||{}).forEach(e=>{s+=`"${e.questionId}","${e.label}",${e.score},"${e.dimension}"\n`}));const o=new Blob([s],{type:"text/csv"}),i=URL.createObjectURL(o),a=document.createElement("a");a.href=i,a.download=`SE_Process_Tailoring_Analysis_${(new Date).toISOString().split("T")[0]}.csv`,document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(i),this.app.showSuccess("Excel/CSV file downloaded successfully!")}catch(e){this.app.showError("Failed to export Excel file. Please try again.")}}showExportProgress(e){const t=`\n            <div class="text-center py-4" id="export-progress">\n                <div class="spinner-border text-primary mb-3" role="status">\n                    <span class="visually-hidden">Loading...</span>\n                </div>\n                <p class="text-muted">${e}</p>\n            </div>\n        `;document.body.insertAdjacentHTML("beforeend",`\n            <div class="position-fixed top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center bg-dark bg-opacity-50" style="z-index: 9999;" id="export-overlay">\n                ${t}\n            </div>\n        `)}hideExportProgress(){const e=document.getElementById("export-overlay");e&&e.remove()}getLevelCounts(e){const t={basic:0,standard:0,comprehensive:0};return Object.values(e).forEach(e=>{t[e.recommendedLevel]=(t[e.recommendedLevel]||0)+1}),t}groupRecommendationsByCategory(e){const t={};return Object.values(e).forEach(e=>{const s=e.category||"other";t[s]||(t[s]=[]),t[s].push(e)}),Object.keys(t).forEach(e=>{t[e].sort((e,t)=>e.processName.localeCompare(t.processName))}),t}}},694:()=>{window.AssessmentEngine=class{constructor(e,t){this.questionData=e,this.app=t,this.currentCategoryIndex=0,this.currentQuestionIndex=0,this.assessmentContainer=null}render(){this.assessmentContainer=document.getElementById("assessment-content"),this.assessmentContainer&&this.renderAssessmentInterface()}renderAssessmentInterface(){this.questionData.assessmentCategories&&0!==this.questionData.assessmentCategories.length?(this.assessmentContainer.innerHTML="",this.renderProgressBar(),this.renderCurrentQuestion(),this.renderNavigation()):this.renderNoQuestions()}renderProgressBar(){const e=document.createElement("div");e.className="assessment-progress mb-4";const t=this.getTotalQuestions(),s=Object.keys(this.app.assessmentResponses).length,n=t>0?s/t*100:0;e.innerHTML=`\n            <div class="d-flex justify-content-between align-items-center mb-2">\n                <h6 class="mb-0">Assessment Progress</h6>\n                <small class="text-muted">${s}/${t} questions answered</small>\n            </div>\n            <div class="progress" style="height: 8px;">\n                <div class="progress-bar" role="progressbar" \n                     style="width: ${n}%" \n                     aria-valuenow="${n}" \n                     aria-valuemin="0" \n                     aria-valuemax="100">\n                </div>\n            </div>\n            <div class="mt-2">\n                <small class="text-muted">\n                    ${this.getCurrentCategory()?.name||"No category"} \n                    (${this.currentQuestionIndex+1}/${this.getCurrentCategory()?.questions?.length||0})\n                </small>\n            </div>\n        `,this.assessmentContainer.appendChild(e)}renderCurrentQuestion(){const e=this.getCurrentQuestion();if(!e)return void this.renderAssessmentComplete();const t=document.createElement("div");t.className="card question-card",t.innerHTML=`\n            <div class="card-header">\n                <h5 class="card-title mb-0">\n                    <span class="badge bg-primary me-2">Q${this.currentQuestionIndex+1}</span>\n                    ${e.text}\n                </h5>\n                <small class="text-muted">${this.getDimensionBadge(e.dimension)}</small>\n            </div>\n            <div class="card-body">\n                ${this.renderResponseOptions(e)}\n                ${e.description?`<p class="text-muted mt-3">${e.description}</p>`:""}\n            </div>\n        `,this.assessmentContainer.appendChild(t)}renderResponseOptions(e){const t=this.app.assessmentResponses[e.id],s=t?t.score:null;return`\n            <div class="response-options">\n                <div class="btn-group-vertical w-100" role="group">\n                    ${e.options.map(e=>`\n                        <button type="button" \n                                class="btn btn-outline-primary ${s===e.value?"active":""}"\n                                data-score="${e.value}"\n                                onclick="window.seApp.assessmentEngine.selectResponse(${e.value}, '${e.label}')">\n                            ${e.label}\n                        </button>\n                    `).join("")}\n                </div>\n            </div>\n        `}renderNavigation(){const e=this.assessmentContainer.querySelector(".assessment-navigation");e&&e.remove();const t=document.createElement("div");t.className="assessment-navigation mt-4";const s=this.getCurrentQuestion(),n=s&&this.app.assessmentResponses[s.id];t.innerHTML=`\n            <div class="d-flex justify-content-between">\n                <button class="btn btn-outline-secondary" \n                        onclick="window.seApp.assessmentEngine.previousQuestion()"\n                        ${0===this.currentQuestionIndex&&0===this.currentCategoryIndex?"disabled":""}>\n                    <i class="bi bi-arrow-left"></i> Previous\n                </button>\n                <button class="btn btn-primary" \n                        onclick="window.seApp.assessmentEngine.nextQuestion()"\n                        ${n?"":"disabled"}>\n                    ${this.isLastQuestion()?"Complete Assessment":"Next Question"} \n                    <i class="bi bi-arrow-right"></i>\n                </button>\n            </div>\n        `,this.assessmentContainer.appendChild(t)}renderNoQuestions(){this.assessmentContainer.innerHTML='\n            <div class="text-center py-5">\n                <div class="card">\n                    <div class="card-body">\n                        <i class="bi bi-exclamation-triangle display-1 text-warning mb-3"></i>\n                        <h3>No Assessment Questions</h3>\n                        <p class="text-muted">\n                            The assessment questions could not be loaded. Please check the data files.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        '}renderAssessmentComplete(){this.app.calculateScores(),this.assessmentContainer.innerHTML=`\n            <div class="text-center py-5">\n                <div class="card">\n                    <div class="card-body">\n                        <i class="bi bi-check-circle display-1 text-success mb-3"></i>\n                        <h3>Assessment Complete!</h3>\n                        <p class="text-muted mb-4">\n                            You have completed all assessment questions. Your process tailoring recommendations are ready.\n                        </p>\n                        <div class="mb-4">\n                            <h5>Assessment Scores</h5>\n                            <div class="row">\n                                <div class="col-6 col-md-3">\n                                    <div class="card bg-light">\n                                        <div class="card-body text-center">\n                                            <h6 class="card-title">Overall</h6>\n                                            <h3 class="text-primary">${this.app.assessmentScores.overall?.toFixed(1)||"0.0"}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="col-6 col-md-3">\n                                    <div class="card bg-light">\n                                        <div class="card-body text-center">\n                                            <h6 class="card-title">Complexity</h6>\n                                            <h3 class="text-info">${this.app.assessmentScores.complexity?.toFixed(1)||"0.0"}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="col-6 col-md-3">\n                                    <div class="card bg-light">\n                                        <div class="card-body text-center">\n                                            <h6 class="card-title">Safety</h6>\n                                            <h3 class="text-warning">${this.app.assessmentScores.safety?.toFixed(1)||"0.0"}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class="col-6 col-md-3">\n                                    <div class="card bg-light">\n                                        <div class="card-body text-center">\n                                            <h6 class="card-title">Scale</h6>\n                                            <h3 class="text-success">${this.app.assessmentScores.scale?.toFixed(1)||"0.0"}</h3>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <button class="btn btn-primary btn-lg" onclick="window.seApp.showView('recommendations')">\n                            <i class="bi bi-graph-up"></i>\n                            View Recommendations\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `}selectResponse(e,t){const s=this.getCurrentQuestion();s&&(this.app.updateAssessmentResponse(s.id,{score:e,label:t,dimension:s.dimension}),this.updateResponseButtons(e))}updateResponseButtons(e){this.assessmentContainer.querySelectorAll(".response-options button").forEach(t=>{parseInt(t.getAttribute("data-score"))===e?t.classList.add("active"):t.classList.remove("active")}),this.renderNavigation()}nextQuestion(){const e=this.getCurrentCategory();e&&(this.currentQuestionIndex++,this.currentQuestionIndex>=e.questions.length&&(this.currentCategoryIndex++,this.currentQuestionIndex=0,this.currentCategoryIndex>=this.questionData.assessmentCategories.length)?this.renderAssessmentComplete():this.renderAssessmentInterface())}previousQuestion(){if(this.currentQuestionIndex--,this.currentQuestionIndex<0)if(this.currentCategoryIndex--,this.currentCategoryIndex<0)this.currentCategoryIndex=0,this.currentQuestionIndex=0;else{const e=this.questionData.assessmentCategories[this.currentCategoryIndex];this.currentQuestionIndex=e.questions.length-1}this.renderAssessmentInterface()}getCurrentCategory(){return this.questionData.assessmentCategories[this.currentCategoryIndex]}getCurrentQuestion(){const e=this.getCurrentCategory();return e?.questions?.[this.currentQuestionIndex]}getTotalQuestions(){return this.questionData.assessmentCategories?this.questionData.assessmentCategories.reduce((e,t)=>e+(t.questions?t.questions.length:0),0):0}isLastQuestion(){const e=this.questionData.assessmentCategories.length-1,t=this.questionData.assessmentCategories[e];return this.currentCategoryIndex===e&&this.currentQuestionIndex===t.questions.length-1}getDimensionBadge(e){return`<span class="badge ${{complexity:"bg-info",safety:"bg-warning",scale:"bg-success",maturity:"bg-secondary"}[e]||"bg-secondary"}">${{complexity:"Technical Complexity",safety:"Safety Criticality",scale:"Project Scale",maturity:"Organizational Maturity"}[e]||e}</span>`}resetAssessment(){this.currentCategoryIndex=0,this.currentQuestionIndex=0,this.renderAssessmentInterface()}}},722:()=>{window.RecommendationEngine=class{constructor(e,t,s){this.processData=e,this.dependencyData=t,this.app=s,this.recommendations={}}generateRecommendations(e){const t=this.processData.processes||[],s={};return t.forEach(t=>{s[t.id]=this.calculateProcessLevel(t,e)}),this.applyDependencyConstraints(s),this.applyProcessConstraints(s,e),this.calculateConfidenceScores(s,e),this.recommendations=s,s}calculateProcessLevel(e,t){const s=this.calculateBaseScore(e,t);let n="basic";return s>=3.6?n="comprehensive":s>=2.1&&(n="standard"),{processId:e.id,processName:e.name,category:e.category,recommendedLevel:n,baseScore:s,rationale:this.generateRationale(e,t,n),effort:e.tailoringLevels[n]?.effort||1,complexity:e.tailoringLevels[n]?.complexity||1,activities:e.tailoringLevels[n]?.activities||[],outputs:e.tailoringLevels[n]?.outputs||[],dependencies:[],constraints:[],confidence:.8}}calculateBaseScore(e,t){const s=this.getProcessWeights(e);let n=0,o=0;return Object.keys(s).forEach(e=>{void 0!==t[e]&&(n+=t[e]*s[e],o+=s[e])}),o>0?n/o:0}getProcessWeights(e){return{risk_management:{safety:.4,complexity:.25,scale:.2,maturity:.15},quality_assurance:{safety:.35,complexity:.25,scale:.2,maturity:.2},verification:{safety:.35,complexity:.3,scale:.2,maturity:.15},validation:{safety:.35,complexity:.25,scale:.2,maturity:.2},system_analysis:{complexity:.4,safety:.2,scale:.25,maturity:.15},architecture_definition:{complexity:.4,safety:.2,scale:.25,maturity:.15},design_definition:{complexity:.4,safety:.2,scale:.25,maturity:.15},project_planning:{scale:.35,maturity:.25,complexity:.2,safety:.2},project_assessment_control:{scale:.35,maturity:.25,complexity:.2,safety:.2},configuration_management:{scale:.3,maturity:.3,complexity:.2,safety:.2}}[e.id]||{complexity:.3,safety:.25,scale:.25,maturity:.2}}applyDependencyConstraints(e){const t=this.dependencyData.dependencies||[];let s=!0,n=0;for(;s&&n<10;)s=!1,n++,t.forEach(t=>{const n=e[t.source],o=e[t.target];if(n&&o){const e=this.getLevelValue(n.recommendedLevel),i=this.getLevelValue(t.targetLevel),a=this.getLevelValue(o.recommendedLevel);if(e>=this.getLevelValue(t.sourceLevel)&&a<i){const e=t.targetLevel;o.recommendedLevel=e,o.effort=this.processData.processes.find(e=>e.id===t.target)?.tailoringLevels[e]?.effort||o.effort,o.complexity=this.processData.processes.find(e=>e.id===t.target)?.tailoringLevels[e]?.complexity||o.complexity,o.constraints.push({type:"dependency",source:t.source,sourceLevel:t.sourceLevel,reason:`Required by ${n.processName} at ${t.sourceLevel} level`}),n.dependencies.push({target:t.target,targetName:o.processName,requiredLevel:t.targetLevel,type:t.type||"horizontal"}),s=!0}}})}applyProcessConstraints(e,t){(this.processData.processes||[]).forEach(s=>{const n=e[s.id];n&&s.constraints&&s.constraints.forEach(e=>{if(this.evaluateConstraintCondition(e.condition,t)){const t=e.requiredLevel;this.getLevelValue(n.recommendedLevel)<this.getLevelValue(t)&&(n.recommendedLevel=t,n.effort=s.tailoringLevels[t]?.effort||n.effort,n.complexity=s.tailoringLevels[t]?.complexity||n.complexity,n.constraints.push({type:"process",condition:e.condition,reason:e.rationale||"Process constraint applied"}))}})})}evaluateConstraintCondition(e,t){try{const s=e.match(/(\w+)\s*([><=]+)\s*(\d+\.?\d*)/);if(s){const[,e,n,o]=s,i=t[e],a=parseFloat(o);switch(n){case">":return i>a;case">=":return i>=a;case"<":return i<a;case"<=":return i<=a;case"=":case"==":return Math.abs(i-a)<.1;default:return!1}}}catch(e){}return!1}calculateConfidenceScores(e,t){Object.values(e).forEach(e=>{let s=.8;const n=e.baseScore;(n>=2&&n<=2.2||n>=3.5&&n<=3.7)&&(s-=.2),e.constraints.length>2&&(s-=.1),Object.values(t).filter(e=>e<=1.5||e>=4.5).length>=2&&(s+=.1),e.confidence=Math.max(.4,Math.min(1,s))})}getLevelValue(e){return{basic:1,standard:2,comprehensive:3}[e]||1}generateRationale(e,t,s){const n=[],o=this.getProcessWeights(e);switch(Object.keys(o).map(e=>({dimension:e,weight:o[e],score:t[e]})).sort((e,t)=>t.weight-e.weight).slice(0,2).forEach(e=>{const t=this.getScoreImpact(e.score);n.push(`${this.getDimensionName(e.dimension)} (${e.score.toFixed(1)}/5.0) ${t.description}`)}),s){case"basic":n.push("Basic level recommended for low complexity and risk profile");break;case"standard":n.push("Standard level provides balanced formality for moderate complexity");break;case"comprehensive":n.push("Comprehensive level required for high complexity and criticality")}return n}getDimensionName(e){return{complexity:"Technical Complexity",safety:"Safety Criticality",scale:"Project Scale",maturity:"Organizational Maturity"}[e]||e}getScoreImpact(e){return e<=2?{level:"low",description:"suggests minimal formality"}:e<=3.5?{level:"medium",description:"indicates moderate formality needed"}:{level:"high",description:"requires high formality and rigor"}}render(){const e=document.getElementById("recommendations-content");if(!e)return;const t=this.app.getAssessmentData();t.recommendations&&0!==Object.keys(t.recommendations).length?this.renderRecommendations(e,t):this.renderNoRecommendations(e)}renderNoRecommendations(e){e.innerHTML='\n            <div class="text-center py-5">\n                <div class="card">\n                    <div class="card-body">\n                        <i class="bi bi-exclamation-circle display-1 text-warning mb-3"></i>\n                        <h3>No Recommendations Available</h3>\n                        <p class="text-muted mb-4">\n                            Complete the assessment first to generate personalized process tailoring recommendations.\n                        </p>\n                        <button class="btn btn-primary" onclick="window.seApp.showView(\'assessment\')">\n                            <i class="bi bi-clipboard-check"></i>\n                            Start Assessment\n                        </button>\n                    </div>\n                </div>\n            </div>\n        '}renderRecommendations(e,t){const s=t.recommendations,n=this.groupRecommendationsByCategory(s),o=this.calculateSummaryStats(s),i=`\n            <div class="mb-4">\n                <div class="card shadow-sm">\n                    <div class="card-header bg-gradient-primary text-white">\n                        <h4 class="card-title mb-0">\n                            <i class="bi bi-lightbulb-fill"></i>\n                            Process Tailoring Recommendations\n                        </h4>\n                    </div>\n                    <div class="card-body">\n                        <div class="row mb-4">\n                            <div class="col-md-3">\n                                <div class="stat-card border-start-primary">\n                                    <span class="stat-number text-success">${o.basic}</span>\n                                    <span class="stat-label">Basic Level</span>\n                                </div>\n                            </div>\n                            <div class="col-md-3">\n                                <div class="stat-card border-start-warning">\n                                    <span class="stat-number text-warning">${o.standard}</span>\n                                    <span class="stat-label">Standard Level</span>\n                                </div>\n                            </div>\n                            <div class="col-md-3">\n                                <div class="stat-card border-start-danger">\n                                    <span class="stat-number text-danger">${o.comprehensive}</span>\n                                    <span class="stat-label">Comprehensive Level</span>\n                                </div>\n                            </div>\n                            <div class="col-md-3">\n                                <div class="stat-card">\n                                    <span class="stat-number">${o.totalEffort}</span>\n                                    <span class="stat-label">Total Effort Score</span>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div class="alert alert-info">\n                            <i class="bi bi-info-circle me-2"></i>\n                            <strong>Implementation Guidance:</strong> Start with high-priority processes and gradually implement others. \n                            Pay special attention to dependency relationships shown in the visualization.\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            ${Object.keys(n).map(e=>this.renderCategorySection(e,n[e])).join("")}\n        `;e.innerHTML=i,this.attachRecommendationEventListeners()}groupRecommendationsByCategory(e){const t={};return Object.values(e).forEach(e=>{const s=e.category||"other";t[s]||(t[s]=[]),t[s].push(e)}),Object.keys(t).forEach(e=>{t[e].sort((e,t)=>e.processName.localeCompare(t.processName))}),t}renderCategorySection(e,t){const s=this.processData.processCategories?.[e]||e;return`\n            <div class="mb-4">\n                <h5 class="mb-3">\n                    <i class="bi bi-${this.getCategoryIcon(e)}"></i>\n                    ${s}\n                </h5>\n                <div class="row">\n                    ${t.map(e=>this.renderProcessCard(e)).join("")}\n                </div>\n            </div>\n        `}renderProcessCard(e){const t=e.recommendedLevel,s=Math.round(100*e.confidence);return`\n            <div class="col-lg-6 mb-3">\n                <div class="process-card card ${t}">\n                    <div class="card-body">\n                        <div class="d-flex justify-content-between align-items-start mb-2">\n                            <h6 class="process-title mb-1">${e.processName}</h6>\n                            <span class="level-badge level-${t}">${e.recommendedLevel}</span>\n                        </div>\n                        \n                        <div class="mb-2">\n                            <small class="text-muted">\n                                Effort: <strong>${e.effort}</strong> | \n                                Complexity: <strong>${e.complexity}</strong> | \n                                Confidence: <strong>${s}%</strong>\n                            </small>\n                        </div>\n\n                        <div class="mb-3">\n                            <strong>Rationale:</strong>\n                            <ul class="list-unstyled mt-1 mb-0">\n                                ${e.rationale.map(e=>`<li class="text-small text-muted">• ${e}</li>`).join("")}\n                            </ul>\n                        </div>\n\n                        ${e.constraints.length>0?`\n                            <div class="mb-3">\n                                <strong>Constraints Applied:</strong>\n                                <ul class="list-unstyled mt-1 mb-0">\n                                    ${e.constraints.map(e=>`\n                                        <li class="text-small text-warning">• ${e.reason}</li>\n                                    `).join("")}\n                                </ul>\n                            </div>\n                        `:""}\n\n                        ${e.dependencies.length>0?`\n                            <div class="mb-3">\n                                <strong>Dependencies:</strong>\n                                <ul class="dependency-list">\n                                    ${e.dependencies.map(e=>`\n                                        <li class="dependency-item ${"vertical"===e.type?"critical":"important"}">\n                                            <small>\n                                                <strong>${e.targetName}</strong> requires <em>${e.requiredLevel}</em> level\n                                                <span class="badge badge-sm bg-secondary ms-1">${e.type}</span>\n                                            </small>\n                                        </li>\n                                    `).join("")}\n                                </ul>\n                            </div>\n                        `:""}\n\n                        <div class="text-end">\n                            <button class="btn btn-outline-primary btn-sm" onclick="window.seApp.showProcessDetails('${e.processId}')">\n                                <i class="bi bi-info-circle"></i>\n                                Details\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        `}calculateSummaryStats(e){const t={basic:0,standard:0,comprehensive:0,totalEffort:0,averageConfidence:0},s=Object.values(e);return s.forEach(e=>{t[e.recommendedLevel]++,t.totalEffort+=e.effort||0}),t.averageConfidence=s.length>0?s.reduce((e,t)=>e+t.confidence,0)/s.length:0,t}getCategoryIcon(e){return{technical_management:"gear",technical:"cpu",other:"circle"}[e]||"circle"}attachRecommendationEventListeners(){}getRecommendations(){return this.recommendations}getProcessRecommendation(e){return this.recommendations[e]}}},962:()=>{window.ProcessNetworkVisualizer=class{constructor(e,t,s){this.processData=e,this.dependencyData=t,this.app=s,this.svg=null,this.simulation=null,this.nodes=[],this.links=[],this.width=800,this.height=600,this.zoom=null,this.currentFilters={categories:new Set(["technical_management","technical"]),levels:new Set(["basic","standard","comprehensive"]),showDependencies:!0,showMetrics:!0,showRecommendations:!0,searchTerm:"",layoutSettings:{chargeStrength:-200,linkStrength:.5}}}render(){this.setupContainer(),this.renderControls(),this.prepareData(),this.createVisualization(),this.setupEventListeners()}setupContainer(){const e=document.getElementById("network-visualization");if(!e)return;e.innerHTML="";const t=e.getBoundingClientRect();this.width=Math.max(800,t.width-20),this.height=Math.max(600,t.height-20)}renderControls(){const e=document.getElementById("visualization-controls");e&&(e.innerHTML='\n            <div class="control-group">\n                <label class="control-label">Search Processes</label>\n                <div class="input-group input-group-sm">\n                    <span class="input-group-text">\n                        <i class="bi bi-search"></i>\n                    </span>\n                    <input type="text" class="form-control" id="process-search" \n                           placeholder="Type to search processes...">\n                </div>\n            </div>\n\n            <div class="control-group">\n                <label class="control-label">Process Categories</label>\n                <div class="form-check form-check-sm">\n                    <input class="form-check-input" type="checkbox" id="filter-technical-mgmt" checked>\n                    <label class="form-check-label" for="filter-technical-mgmt">\n                        Technical Management\n                    </label>\n                </div>\n                <div class="form-check form-check-sm">\n                    <input class="form-check-input" type="checkbox" id="filter-technical" checked>\n                    <label class="form-check-label" for="filter-technical">\n                        Technical Processes\n                    </label>\n                </div>\n            </div>\n\n            <div class="control-group">\n                <label class="control-label">Tailoring Levels</label>\n                <div class="form-check form-check-sm">\n                    <input class="form-check-input" type="checkbox" id="filter-basic" checked>\n                    <label class="form-check-label" for="filter-basic">\n                        <span class="level-badge level-basic">Basic</span>\n                    </label>\n                </div>\n                <div class="form-check form-check-sm">\n                    <input class="form-check-input" type="checkbox" id="filter-standard" checked>\n                    <label class="form-check-label" for="filter-standard">\n                        <span class="level-badge level-standard">Standard</span>\n                    </label>\n                </div>\n                <div class="form-check form-check-sm">\n                    <input class="form-check-input" type="checkbox" id="filter-comprehensive" checked>\n                    <label class="form-check-label" for="filter-comprehensive">\n                        <span class="level-badge level-comprehensive">Comprehensive</span>\n                    </label>\n                </div>\n            </div>\n\n            <div class="control-group">\n                <label class="control-label">Display Options</label>\n                <div class="form-check form-check-sm">\n                    <input class="form-check-input" type="checkbox" id="show-dependencies" checked>\n                    <label class="form-check-label" for="show-dependencies">\n                        Show Dependencies\n                    </label>\n                </div>\n                <div class="form-check form-check-sm">\n                    <input class="form-check-input" type="checkbox" id="show-labels" checked>\n                    <label class="form-check-label" for="show-labels">\n                        Show Labels\n                    </label>\n                </div>\n                <div class="form-check form-check-sm">\n                    <input class="form-check-input" type="checkbox" id="show-metrics" checked>\n                    <label class="form-check-label" for="show-metrics">\n                        Show Metrics\n                    </label>\n                </div>\n                <div class="form-check form-check-sm">\n                    <input class="form-check-input" type="checkbox" id="show-recommendations" checked>\n                    <label class="form-check-label" for="show-recommendations">\n                        Show Recommendations\n                    </label>\n                </div>\n            </div>\n\n            <div class="control-group">\n                <label class="control-label">Layout</label>\n                <select class="form-select form-select-sm" id="layout-select">\n                    <option value="force">Force-Directed</option>\n                    <option value="circular">Circular</option>\n                    <option value="hierarchical">Hierarchical</option>\n                </select>\n            </div>\n\n            <div class="control-group">\n                <label class="control-label">Force Layout Settings</label>\n                <div class="input-group input-group-sm">\n                    <span class="input-group-text">Charge</span>\n                    <input type="range" class="form-range" id="charge-strength" min="-1000" max="-50" value="-200">\n                    <span class="input-group-text" id="charge-value">-200</span>\n                </div>\n                <div class="input-group input-group-sm">\n                    <span class="input-group-text">Link</span>\n                    <input type="range" class="form-range" id="link-strength" min="0" max="2" step="0.1" value="0.5">\n                    <span class="input-group-text" id="link-value">0.5</span>\n                </div>\n            </div>\n\n            <div class="control-group">\n                <button class="btn btn-outline-primary btn-sm w-100" id="reset-filters-btn">\n                    <i class="bi bi-arrow-clockwise"></i>\n                    Reset Filters\n                </button>\n                <button class="btn btn-outline-secondary btn-sm w-100 mt-2" id="export-network-btn">\n                    <i class="bi bi-download"></i>\n                    Export Network\n                </button>\n                <button class="btn btn-outline-info btn-sm w-100 mt-2" id="help-network-btn">\n                    <i class="bi bi-question-circle"></i>\n                    Help & Tips\n                </button>\n            </div>\n        ',this.attachControlEventListeners())}attachControlEventListeners(){const e=document.getElementById("process-search");e&&e.addEventListener("input",e=>{this.currentFilters.searchTerm=e.target.value.toLowerCase(),this.updateVisualization()}),["technical-mgmt","technical"].forEach(e=>{const t=document.getElementById(`filter-${e}`);t&&t.addEventListener("change",t=>{const s="technical-mgmt"===e?"technical_management":"technical";t.target.checked?this.currentFilters.categories.add(s):this.currentFilters.categories.delete(s),this.updateVisualization()})}),["basic","standard","comprehensive"].forEach(e=>{const t=document.getElementById(`filter-${e}`);t&&t.addEventListener("change",t=>{t.target.checked?this.currentFilters.levels.add(e):this.currentFilters.levels.delete(e),this.updateVisualization()})});const t=document.getElementById("show-dependencies");t&&t.addEventListener("change",e=>{this.currentFilters.showDependencies=e.target.checked,this.updateVisualization()});const s=document.getElementById("show-labels");s&&s.addEventListener("change",e=>{this.toggleLabels(e.target.checked)});const n=document.getElementById("layout-select");n&&n.addEventListener("change",e=>{this.changeLayout(e.target.value)});const o=document.getElementById("charge-strength"),i=document.getElementById("charge-value");o&&i&&o.addEventListener("input",e=>{const t=parseInt(e.target.value);i.textContent=t,this.currentFilters.layoutSettings.chargeStrength=t,this.updateForceLayout()});const a=document.getElementById("link-strength"),r=document.getElementById("link-value");a&&r&&a.addEventListener("input",e=>{const t=parseFloat(e.target.value);r.textContent=t,this.currentFilters.layoutSettings.linkStrength=t,this.updateForceLayout()});const l=document.getElementById("show-metrics");l&&l.addEventListener("change",e=>{this.currentFilters.showMetrics=e.target.checked,this.updateVisualization()});const c=document.getElementById("show-recommendations");c&&c.addEventListener("change",e=>{this.currentFilters.showRecommendations=e.target.checked,this.updateVisualization()});const d=document.getElementById("export-network-btn");d&&d.addEventListener("click",()=>{this.exportNetwork()});const m=document.getElementById("help-network-btn");m&&m.addEventListener("click",()=>{this.showHelpModal()});const h=document.getElementById("reset-filters-btn");h&&h.addEventListener("click",()=>{this.resetFilters()})}updateForceLayout(){this.simulation&&(this.simulation.force("charge",d3.forceManyBody().strength(this.currentFilters.layoutSettings.chargeStrength)),this.simulation.force("link",d3.forceLink(this.links).strength(this.currentFilters.layoutSettings.linkStrength)),this.simulation.alpha(.3).restart())}exportNetwork(){const e=this.svg.node(),t=(new XMLSerializer).serializeToString(e).replace("<svg",'<svg xmlns="http://www.w3.org/2000/svg"'),s=new Blob([t],{type:"image/svg+xml"}),n=URL.createObjectURL(s),o=document.createElement("a");o.href=n,o.download="se-process-network.svg",document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(n)}showHelpModal(){const e=document.getElementById("network-help-modal");e&&e.remove(),document.body.insertAdjacentHTML("beforeend",'\n            <div class="modal fade" id="network-help-modal" tabindex="-1">\n                <div class="modal-dialog modal-lg">\n                    <div class="modal-content">\n                        <div class="modal-header">\n                            <h5 class="modal-title">Network Visualization Help</h5>\n                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>\n                        </div>\n                        <div class="modal-body">\n                            <h6>Interactive Features</h6>\n                            <ul>\n                                <li><strong>Drag nodes</strong> to reposition them</li>\n                                <li><strong>Click nodes</strong> to view process details</li>\n                                <li><strong>Mouse wheel</strong> to zoom in/out</li>\n                                <li><strong>Drag background</strong> to pan the view</li>\n                            </ul>\n                            \n                            <h6>Filtering Options</h6>\n                            <ul>\n                                <li><strong>Search</strong>: Filter processes by name</li>\n                                <li><strong>Categories</strong>: Show/hide process categories</li>\n                                <li><strong>Levels</strong>: Filter by tailoring levels</li>\n                                <li><strong>Dependencies</strong>: Toggle dependency visibility</li>\n                            </ul>\n                            \n                            <h6>Layout Controls</h6>\n                            <ul>\n                                <li><strong>Force-Directed</strong>: Dynamic physics-based layout</li>\n                                <li><strong>Circular</strong>: Organized circular arrangement</li>\n                                <li><strong>Hierarchical</strong>: Tree-like structure</li>\n                                <li><strong>Charge/Link</strong>: Adjust node repulsion and link strength</li>\n                            </ul>\n                        </div>\n                        <div class="modal-footer">\n                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        '),new bootstrap.Modal(document.getElementById("network-help-modal")).show()}prepareData(){const e=this.processData.processes||[],t=this.dependencyData.dependencies||[],s=this.app.getAssessmentData().recommendations;this.nodes=e.map(e=>{const t=s?.[e.id],n=t?.recommendedLevel||"basic";return{id:e.id,name:e.name,category:e.category,description:e.description,recommendedLevel:n,effort:t?.effort||1,complexity:t?.complexity||1,confidence:t?.confidence||.8,x:Math.random()*this.width,y:Math.random()*this.height}}),this.links=t.map(e=>({source:e.source,target:e.target,type:e.type||"horizontal",sourceLevel:e.sourceLevel,targetLevel:e.targetLevel,strength:"vertical"===e.type?.8:.4}))}createVisualization(){const e=document.getElementById("network-visualization");if(!e)return;this.svg=d3.select(e).append("svg").attr("width","100%").attr("height","100%").attr("viewBox",[0,0,this.width,this.height]).attr("preserveAspectRatio","xMidYMid meet").attr("class","network-svg").style("background","#f8f9fa"),this.zoom=d3.zoom().scaleExtent([.1,8]).translateExtent([[0,0],[this.width,this.height]]).on("zoom",e=>{this.svg.select(".zoom-container").attr("transform",e.transform)}),this.svg.call(this.zoom).call(this.zoom.transform,d3.zoomIdentity);const t=this.svg.append("g").attr("class","zoom-container"),s=this.svg.append("defs");[{id:"dependency",color:"#dc3545",width:4},{id:"information",color:"#0d6efd",width:3},{id:"sequential",color:"#198754",width:2}].forEach(e=>{s.append("marker").attr("id",`arrow-${e.id}`).attr("viewBox","0 -5 10 10").attr("refX",18).attr("refY",0).attr("markerWidth",8).attr("markerHeight",8).attr("orient","auto").append("path").attr("d","M0,-5L10,0L0,5").attr("fill",e.color).attr("stroke",e.color).attr("stroke-width",e.width)}),this.simulation=d3.forceSimulation(this.nodes).force("link",d3.forceLink(this.links).id(e=>e.id).strength(this.currentFilters.layoutSettings.linkStrength).distance(100)).force("charge",d3.forceManyBody().strength(this.currentFilters.layoutSettings.chargeStrength)).force("center",d3.forceCenter(this.width/2,this.height/2)).force("collision",d3.forceCollide().radius(45)).force("x",d3.forceX(this.width/2).strength(.05)).force("y",d3.forceY(this.height/2).strength(.05)),this.linkElements=t.append("g").attr("class","links").selectAll("line").data(this.links).enter().append("line").attr("class",e=>`network-link link-${e.type}`).attr("marker-end",e=>`url(#arrow-${e.type})`).attr("stroke-width",e=>({dependency:3,information:2,sequential:1.5}[e.type]||1.5)).attr("stroke-opacity",.8).attr("stroke-linecap","round"),this.nodeElements=t.append("g").attr("class","nodes").selectAll("circle").data(this.nodes).enter().append("circle").attr("class",e=>`network-node node-${e.category} level-${e.recommendedLevel}`).attr("r",e=>20*(e.complexity?e.complexity/10:1)).attr("fill",e=>this.getNodeColor(e)).attr("stroke","#fff").attr("stroke-width",2).attr("cursor","pointer").call(d3.drag().on("start",(e,t)=>this.dragStarted(e,t)).on("drag",(e,t)=>this.dragged(e,t)).on("end",(e,t)=>this.dragEnded(e,t))).on("mouseover",(e,t)=>this.showTooltip(e,t)).on("mouseout",()=>this.hideTooltip()).on("click",(e,t)=>this.nodeClicked(e,t)),this.labelElements=t.append("g").attr("class","labels").selectAll("text").data(this.nodes).enter().append("text").attr("class","network-text").attr("text-anchor","middle").attr("dy",e=>35+5*(e.complexity?e.complexity/10:1)).attr("font-size","12px").attr("font-weight","600").attr("fill","#2c3e50").attr("pointer-events","none").attr("paint-order","stroke").attr("stroke","#ffffff").attr("stroke-width",3).attr("stroke-linecap","round").attr("stroke-linejoin","round").text(e=>this.getNodeLabel(e)),this.metricElements=t.append("g").attr("class","metrics").selectAll("text").data(this.nodes).enter().append("text").attr("class","node-metric").attr("text-anchor","middle").attr("dy",e=>-25-5*(e.complexity?e.complexity/10:1)).attr("font-size","10px").attr("fill","#6c757d").attr("pointer-events","none").text(e=>{if(!this.currentFilters.showMetrics)return"";const t=[];return e.effort&&t.push(`Effort: ${e.effort}`),e.complexity&&t.push(`Complexity: ${e.complexity}`),t.join(" | ")}),this.tooltip=d3.select("body").append("div").attr("class","network-tooltip").style("opacity",0),this.simulation.on("tick",()=>this.ticked()),this.updateVisualization()}getNodeColor(e){return{basic:"#28a745",standard:"#ffc107",comprehensive:"#dc3545"}[e.recommendedLevel]||"#6c757d"}getNodeLabel(e){return e.name.length>12?`${e.name.substring(0,9)}...`:e.name}updateVisualization(){if(!this.nodeElements||!this.linkElements)return;const e=this.nodes.filter(e=>this.isNodeVisible(e)),t=new Set(e.map(e=>e.id)),s=this.currentFilters.showDependencies?this.links.filter(e=>t.has(e.source.id||e.source)&&t.has(e.target.id||e.target)):[];this.nodeElements.style("opacity",e=>this.isNodeVisible(e)?1:.1).style("pointer-events",e=>this.isNodeVisible(e)?"all":"none"),this.linkElements.style("opacity",e=>{const s=t.has(e.source.id||e.source),n=t.has(e.target.id||e.target);return s&&n&&this.currentFilters.showDependencies?.6:0}),this.labelElements.style("opacity",e=>this.isNodeVisible(e)?1:.1),this.simulation.nodes(e),this.simulation.force("link").links(s),this.simulation.alpha(.3).restart()}isNodeVisible(e){return!(!this.currentFilters.categories.has(e.category)||!this.currentFilters.levels.has(e.recommendedLevel)||this.currentFilters.searchTerm&&!e.name.toLowerCase().includes(this.currentFilters.searchTerm))}ticked(){this.linkElements&&this.linkElements.attr("x1",e=>e.source.x).attr("y1",e=>e.source.y).attr("x2",e=>e.target.x).attr("y2",e=>e.target.y),this.nodeElements&&this.nodeElements.attr("cx",e=>e.x).attr("cy",e=>e.y),this.labelElements&&this.labelElements.attr("x",e=>e.x).attr("y",e=>e.y)}dragStarted(e,t){e.active||this.simulation.alphaTarget(.3).restart(),t.fx=t.x,t.fy=t.y}dragged(e,t){t.fx=e.x,t.fy=e.y}dragEnded(e,t){e.active||this.simulation.alphaTarget(0),t.fx=null,t.fy=null}handleMouseOver(e,t){this.highlightConnectedElements(t),this.showEnhancedTooltip(e,t),d3.select(e.currentTarget).attr("stroke-width",3).attr("stroke","#ffc107").attr("filter","url(#glow)")}handleMouseOut(e,t){this.clearHighlights(),this.hideTooltip(),d3.select(e.currentTarget).attr("stroke-width",2).attr("stroke","#fff").attr("filter",null)}highlightConnectedElements(e){this.linkElements.style("stroke-width",t=>t.source.id===e.id||t.target.id===e.id?4:1.5).style("stroke-opacity",t=>t.source.id===e.id||t.target.id===e.id?1:.3),this.nodeElements.style("opacity",t=>this.links.some(s=>s.source.id===e.id&&s.target.id===t.id||s.source.id===t.id&&s.target.id===e.id)?1:.3)}showEnhancedTooltip(e,t){const s=`\n            <div class="tooltip-content">\n                <h4>${t.name}</h4>\n                <p><strong>Category:</strong> ${t.category}</p>\n                <p><strong>Recommended Level:</strong> ${t.recommendedLevel}</p>\n                ${t.effort?`<p><strong>Effort:</strong> ${t.effort}/10</p>`:""}\n                ${t.complexity?`<p><strong>Complexity:</strong> ${t.complexity}/10</p>`:""}\n                ${t.confidence?`<p><strong>Confidence:</strong> ${t.confidence}%</p>`:""}\n                <p><strong>Connections:</strong> ${this.getConnectionCount(t)}</p>\n            </div>\n        `;this.tooltip.html(s).style("left",`${e.pageX+10}px`).style("top",e.pageY-28+"px").style("opacity",1).style("max-width","300px")}getConnectionCount(e){return this.links.filter(t=>t.source.id===e.id||t.target.id===e.id).length}addZoomControls(){const e=d3.select("#visualization-controls").append("div").attr("class","zoom-controls").style("position","absolute").style("top","10px").style("right","10px").style("z-index","1000");e.append("button").attr("class","btn btn-sm btn-outline-primary me-2").html('<i class="fas fa-plus"></i>').on("click",()=>{this.svg.transition().duration(300).call(this.zoom.scaleBy,1.5)}),e.append("button").attr("class","btn btn-sm btn-outline-primary me-2").html('<i class="fas fa-minus"></i>').on("click",()=>{this.svg.transition().duration(300).call(this.zoom.scaleBy,.75)}),e.append("button").attr("class","btn btn-sm btn-outline-secondary").html('<i class="fas fa-sync-alt"></i>').on("click",()=>{this.svg.transition().duration(300).call(this.zoom.transform,d3.zoomIdentity)})}nodeClicked(e,t){e.stopPropagation(),window.seApp&&"function"==typeof window.seApp.showProcessDetails&&window.seApp.showProcessDetails(t.id)}showTooltip(e,t){this.tooltip.style("opacity",1).html(`\n                <strong>${t.name}</strong><br/>\n                Level: <span class="level-badge level-${t.recommendedLevel}">${t.recommendedLevel}</span><br/>\n                Effort: ${t.effort}/5<br/>\n                Confidence: ${Math.round(100*t.confidence)}%\n            `).style("left",`${e.pageX+10}px`).style("top",e.pageY-10+"px")}hideTooltip(){this.tooltip.style("opacity",0)}toggleLabels(e){this.labelElements&&this.labelElements.style("opacity",e?1:0)}changeLayout(e){if(this.simulation)switch(e){case"circular":this.applyCircularLayout();break;case"hierarchical":this.applyHierarchicalLayout();break;default:this.applyForceLayout()}}applyCircularLayout(){const e=this.width/2,t=this.height/2,s=Math.min(this.width,this.height)/3;this.nodes.forEach((n,o)=>{const i=2*Math.PI*o/this.nodes.length;n.fx=e+s*Math.cos(i),n.fy=t+s*Math.sin(i)}),this.simulation.alpha(.3).restart()}applyHierarchicalLayout(){const e=["technical_management","technical"],t=this.height/e.length;e.forEach((e,s)=>{const n=this.nodes.filter(t=>t.category===e),o=this.width/(n.length+1);n.forEach((e,n)=>{e.fx=(n+1)*o,e.fy=(s+.5)*t})}),this.simulation.alpha(.3).restart()}applyForceLayout(){this.nodes.forEach(e=>{e.fx=null,e.fy=null}),this.simulation.force("center",d3.forceCenter(this.width/2,this.height/2)).alpha(.3).restart()}resetFilters(){this.currentFilters={categories:new Set(["technical_management","technical"]),levels:new Set(["basic","standard","comprehensive"]),showDependencies:!0,searchTerm:""},document.getElementById("process-search").value="",document.getElementById("filter-technical-mgmt").checked=!0,document.getElementById("filter-technical").checked=!0,document.getElementById("filter-basic").checked=!0,document.getElementById("filter-standard").checked=!0,document.getElementById("filter-comprehensive").checked=!0,document.getElementById("show-dependencies").checked=!0,this.updateVisualization()}zoomIn(){this.svg.transition().call(this.zoom.scaleBy,1.5)}zoomOut(){this.svg.transition().call(this.zoom.scaleBy,1/1.5)}resetView(){this.svg.transition().call(this.zoom.transform,d3.zoomIdentity)}highlightProcess(e){this.nodeElements&&this.nodeElements.style("stroke",t=>t.id===e?"#ff6b6b":"#fff").style("stroke-width",t=>t.id===e?4:2)}clearHighlights(){this.nodeElements&&this.nodeElements.style("stroke","#fff").style("stroke-width",2)}setupEventListeners(){const e=document.getElementById("zoom-in-btn"),t=document.getElementById("zoom-out-btn"),s=document.getElementById("reset-view-btn");e&&e.addEventListener("click",()=>this.zoomIn()),t&&t.addEventListener("click",()=>this.zoomOut()),s&&s.addEventListener("click",()=>this.resetView())}}}},t={};function s(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,s),i.exports}s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";s(694),s(962),s(722),s(438);class e{constructor(){this.currentView="welcome",this.assessmentData={},this.processData={},this.questionData={},this.dependencyData={},this.recommendations={},this.assessmentEngine=null,this.visualizer=null,this.recommendationEngine=null,this.exportManager=null,this.assessmentResponses={},this.assessmentScores={complexity:0,safety:0,scale:0,maturity:0,overall:0},this.init()}async init(){try{console.log("=== SE Framework App Initialization Started ==="),this.showLoading(),console.log("Step 1: Checking component availability:",{AssessmentEngine:typeof AssessmentEngine,ProcessNetworkVisualizer:typeof ProcessNetworkVisualizer,RecommendationEngine:typeof RecommendationEngine,ExportManager:typeof ExportManager}),console.log("Step 2: Loading data..."),await this.loadData(),console.log("Step 3: Data loaded successfully"),console.log("Step 4: Setting up event listeners..."),this.setupEventListeners(),console.log("Step 5: Event listeners setup complete"),console.log("Step 6: Rendering welcome view..."),this.renderWelcomeView(),console.log("Step 7: Welcome view rendered"),console.log("Step 8: About to hide loading overlay..."),this.hideLoading(),console.log("Step 9: Loading overlay hidden"),console.log("=== App Initialized Successfully ===")}catch(e){console.error("=== App Initialization Failed ===",e),console.error("Error details:",e.stack),this.showError(`Failed to load application data: ${e.message}. Please refresh the page.`),this.hideLoading()}}async loadData(){try{console.log("Starting data loading...");const e="localhost"===window.location.hostname?"":"/se-tailoring-framework",t=await fetch(`${e}/data/processes.json`);if(console.log("Processes response status:",t.status),!t.ok)throw new Error("Failed to load processes data");const s=await t.json(),n=await fetch(`${e}/data/questions.json`);if(console.log("Questions response status:",n.status),!n.ok)throw new Error("Failed to load questions data");const o=await n.json(),i=await fetch(`${e}/data/dependencies.json`);if(console.log("Dependencies response status:",i.status),!i.ok)throw new Error("Failed to load dependencies data");const a=await i.json();console.log("Data loaded successfully:",{processes:s.processes?s.processes.length:0,questions:o.assessmentCategories?o.assessmentCategories.length:0,dependencies:a.dependencies?a.dependencies.length:0}),this.processData=s,this.questionData=o,this.dependencyData=a,console.log("Step 2.5: Checking component classes...");const r={AssessmentEngine:typeof AssessmentEngine,ProcessNetworkVisualizer:typeof ProcessNetworkVisualizer,RecommendationEngine:typeof RecommendationEngine,ExportManager:typeof ExportManager};if(console.log("Component availability:",r),"undefined"==typeof AssessmentEngine)throw new Error("AssessmentEngine class not loaded");if("undefined"==typeof ProcessNetworkVisualizer)throw new Error("ProcessNetworkVisualizer class not loaded");if("undefined"==typeof RecommendationEngine)throw new Error("RecommendationEngine class not loaded");if("undefined"==typeof ExportManager)throw new Error("ExportManager class not loaded");console.log("Step 2.6: Initializing components..."),this.assessmentEngine=new AssessmentEngine(this.questionData,this),console.log("AssessmentEngine created"),this.visualizer=new ProcessNetworkVisualizer(this.processData,this.dependencyData,this),console.log("ProcessNetworkVisualizer created"),this.recommendationEngine=new RecommendationEngine(this.processData,this.dependencyData,this),console.log("RecommendationEngine created"),this.exportManager=new ExportManager(this),console.log("ExportManager created"),console.log("Step 2.7: All components initialized successfully")}catch(e){throw console.error("Error loading data:",e),e}}setupEventListeners(){try{const e=document.getElementById("brand-link");e&&e.addEventListener("click",e=>{e.preventDefault(),this.showView("welcome")});const t=document.getElementById("nav-welcome");t&&t.addEventListener("click",e=>{e.preventDefault(),this.showView("welcome")});const s=document.getElementById("nav-assessment");s&&s.addEventListener("click",e=>{e.preventDefault(),this.showView("assessment")});const n=document.getElementById("nav-visualization");n&&n.addEventListener("click",e=>{e.preventDefault(),this.showView("visualization")});const o=document.getElementById("nav-recommendations");o&&o.addEventListener("click",e=>{e.preventDefault(),this.showView("recommendations")});const i=document.getElementById("nav-export");i&&i.addEventListener("click",e=>{e.preventDefault(),this.showView("export")});const a=document.getElementById("start-assessment-btn");a&&a.addEventListener("click",()=>{this.showView("assessment")})}catch(e){console.error("Error setting up event listeners:",e)}document.addEventListener("keydown",e=>{if(e.ctrlKey||e.metaKey)switch(e.key){case"1":e.preventDefault(),this.showView("welcome");break;case"2":e.preventDefault(),this.showView("assessment");break;case"3":e.preventDefault(),this.showView("visualization");break;case"4":e.preventDefault(),this.showView("recommendations");break;case"5":e.preventDefault(),this.showView("export")}})}showView(e){console.log(`=== showView called with: ${e} ===`);try{console.log("Step 1: Hiding all views...");const t=document.querySelectorAll(".view-container");console.log(`Found ${t.length} view containers`),t.forEach(e=>{e.style.display="none"}),console.log("Step 2: Updating navigation...");const s=document.querySelectorAll(".nav-link");console.log(`Found ${s.length} nav links`),s.forEach(e=>{e.classList.remove("active")}),console.log(`Step 3: Showing target view: ${e}-view`);const n=document.getElementById(`${e}-view`);if(console.log("Target view element:",n),n){n.style.display="block",console.log("Step 3a: Target view displayed");const t=document.getElementById(`nav-${e}`);switch(console.log("Nav link element:",t),t&&(t.classList.add("active"),console.log("Step 3b: Nav link activated")),this.currentView=e,console.log(`Step 3c: Current view set to ${e}`),console.log("Step 4: Initializing view-specific content..."),e){case"assessment":this.renderAssessmentView();break;case"visualization":this.renderVisualizationView();break;case"recommendations":this.renderRecommendationsView();break;case"export":this.renderExportView()}console.log("Step 4a: View-specific content initialized"),console.log("Step 5: Updating progress indicator..."),this.updateProgressIndicator(),console.log("Step 5a: Progress indicator updated"),window.scrollTo(0,0),console.log("Step 6: Scrolled to top"),console.log(`=== View ${e} shown successfully ===`)}else console.error(`View ${e} not found`),console.error("Available views:",Array.from(document.querySelectorAll('[id$="-view"]')).map(e=>e.id))}catch(t){console.error(`Error showing view ${e}:`,t),console.error("Error stack:",t.stack)}}renderWelcomeView(){console.log("Rendering welcome view...");try{this.showView("welcome"),console.log("Welcome view rendered successfully")}catch(e){console.error("Error rendering welcome view:",e);const t=document.getElementById("welcome-view");t&&(t.style.display="block")}}renderAssessmentView(){this.assessmentEngine&&(this.assessmentEngine.render(),this.showProgressIndicator())}renderVisualizationView(){this.visualizer&&setTimeout(()=>{this.visualizer.render()},100)}renderRecommendationsView(){this.recommendationEngine&&this.recommendationEngine.render()}renderExportView(){this.exportManager&&this.exportManager.render()}updateProgressIndicator(){const e=document.getElementById("progress-container"),t=document.getElementById("overall-progress"),s=document.getElementById("progress-text");if("welcome"===this.currentView)return void(e.style.display="none");let n=0;switch(this.currentView){case"assessment":n=this.getAssessmentProgress();break;case"visualization":n=this.hasCompletedAssessment()?75:25;break;case"recommendations":n=this.hasCompletedAssessment()?90:50;break;case"export":n=100}e.style.display="block",t.style.width=`${n}%`,s.textContent=`${Math.round(n)}%`}showProgressIndicator(){document.getElementById("progress-container").style.display="block"}hideProgressIndicator(){document.getElementById("progress-container").style.display="none"}getAssessmentProgress(){if(!this.assessmentEngine)return 0;const e=this.getTotalQuestions(),t=Object.keys(this.assessmentResponses).length;return e>0?Math.min(t/e*60,60):0}getTotalQuestions(){return this.questionData.assessmentCategories?this.questionData.assessmentCategories.reduce((e,t)=>e+(t.questions?t.questions.length:0),0):0}hasCompletedAssessment(){const e=this.getTotalQuestions();return Object.keys(this.assessmentResponses).length>=e&&e>0}updateAssessmentResponse(e,t){this.assessmentResponses[e]=t,this.calculateScores(),this.updateProgressIndicator(),this.saveAssessmentState()}calculateScores(){if(!this.questionData.assessmentCategories)return;const e={complexity:[],safety:[],scale:[],maturity:[]};this.questionData.assessmentCategories.forEach(t=>{t.questions.forEach(t=>{const s=this.assessmentResponses[t.id];if(s&&void 0!==s.score){const n=t.dimension;e[n]&&e[n].push({score:s.score,weight:t.weight||1})}})}),Object.keys(e).forEach(t=>{const s=e[t];if(s.length>0){const e=s.reduce((e,t)=>e+t.score*t.weight,0),n=s.reduce((e,t)=>e+t.weight,0);this.assessmentScores[t]=n>0?e/n:0}});const t={complexity:.3,safety:.25,scale:.25,maturity:.2};let s=0,n=0;Object.keys(t).forEach(e=>{this.assessmentScores[e]>0&&(s+=this.assessmentScores[e]*t[e],n+=t[e])}),this.assessmentScores.overall=n>0?s/n:0,this.hasCompletedAssessment()&&this.recommendationEngine&&(this.recommendations=this.recommendationEngine.generateRecommendations(this.assessmentScores))}saveAssessmentState(){const e={responses:this.assessmentResponses,scores:this.assessmentScores,recommendations:this.recommendations,timestamp:Date.now()};localStorage.setItem("se-tailoring-assessment",JSON.stringify(e))}loadAssessmentState(){try{const e=localStorage.getItem("se-tailoring-assessment");if(e){const t=JSON.parse(e),s=864e5;if(Date.now()-t.timestamp<s)return this.assessmentResponses=t.responses||{},this.assessmentScores=t.scores||{},this.recommendations=t.recommendations||{},!0}}catch(e){}return!1}clearAssessmentState(){this.assessmentResponses={},this.assessmentScores={complexity:0,safety:0,scale:0,maturity:0,overall:0},this.recommendations={},localStorage.removeItem("se-tailoring-assessment"),this.updateProgressIndicator()}showLoading(){document.getElementById("loading-overlay").style.display="flex"}hideLoading(){console.log("=== Hiding loading overlay ===");const e=document.getElementById("loading-overlay");console.log("Loading overlay element:",e),e?(console.log("Current display style:",e.style.display),console.log("Current computed style:",window.getComputedStyle(e).display),e.style.display="none",e.style.visibility="hidden",e.style.opacity="0",e.style.pointerEvents="none",e.classList.add("hidden"),console.log("Loading overlay hidden with multiple methods"),console.log("New display style:",e.style.display),console.log("New computed style:",window.getComputedStyle(e).display)):(console.warn("Loading overlay element not found"),console.log("Available elements with loading in ID:",Array.from(document.querySelectorAll('[id*="loading"]')).map(e=>e.id))),console.log("=== Loading overlay hide attempt complete ===")}showError(e){console.error("Showing error:",e);const t=`\n            <div class="alert alert-danger alert-dismissible fade show" role="alert">\n                <i class="bi bi-exclamation-triangle-fill me-2"></i>\n                <strong>Error:</strong> ${e}\n                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>\n            </div>\n        `,s=document.getElementById("main-content");s?(s.insertAdjacentHTML("afterbegin",t),setTimeout(()=>{const e=s.querySelector(".alert-danger");if(e)try{new bootstrap.Alert(e).close()}catch(t){e.remove()}},1e4)):console.error("Main content element not found for error display")}showSuccess(e){const t=`\n            <div class="alert alert-success alert-dismissible fade show" role="alert">\n                <i class="bi bi-check-circle-fill me-2"></i>\n                ${e}\n                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>\n            </div>\n        `,s=document.getElementById("main-content");s.insertAdjacentHTML("afterbegin",t),setTimeout(()=>{const e=s.querySelector(".alert-success");e&&new bootstrap.Alert(e).close()},5e3)}getProcessById(e){return this.processData.processes?.find(t=>t.id===e)}getDependenciesForProcess(e){return this.dependencyData.dependencies?.filter(t=>t.source===e)||[]}getProcessesDependingOn(e){return this.dependencyData.dependencies?.filter(t=>t.target===e)||[]}showProcessDetails(e){const t=document.getElementById("process-detail-modal"),s=document.getElementById("process-modal-title"),n=document.getElementById("process-modal-body");if(!t||!s||!n)return void console.error("Modal elements not found - check HTML structure");if(!t.classList.contains("modal"))return void console.error("Modal element is not properly initialized");const o=this.getProcessById(e),i=this.recommendations[e];if(!o)return;const a=i?.recommendedLevel||"basic";if(s.textContent=o.name,n.innerHTML=`\n            <div class="row">\n                <div class="col-md-6">\n                    <h6>Current Recommendation</h6>\n                    <span class="level-badge level-${a}">${a}</span>\n                    <p class="mt-2 text-muted">${o.description||"No description available"}</p>\n                </div>\n                <div class="col-md-6">\n                    <h6>Process Metrics</h6>\n                    <ul class="list-unstyled">\n                        <li><strong>Effort:</strong> ${i?.effort||1}/5</li>\n                        <li><strong>Complexity:</strong> ${i?.complexity||1}/5</li>\n                        <li><strong>Confidence:</strong> ${Math.round(100*(i?.confidence||.8))}%</li>\n                        <li><strong>Category:</strong> ${this.processData.processCategories?.[o.category]||o.category}</li>\n                    </ul>\n                </div>\n            </div>\n\n            ${i?.rationale?`\n                <div class="mt-3">\n                    <h6>Rationale</h6>\n                    <ul class="list-unstyled">\n                        ${i.rationale.map(e=>`<li class="text-muted">• ${e}</li>`).join("")}\n                    </ul>\n                </div>\n            `:""}\n\n            ${o?.tailoringLevels?`\n                <div class="mt-3">\n                    <h6>Available Tailoring Levels</h6>\n                    <div class="accordion" id="levels-accordion">\n                        ${Object.keys(o.tailoringLevels).map((e,t)=>`\n                            <div class="accordion-item">\n                                <h2 class="accordion-header">\n                                    <button class="accordion-button ${e!==a?"collapsed":""}" \n                                            type="button" data-bs-toggle="collapse" \n                                            data-bs-target="#level-${e}">\n                                        <span class="level-badge level-${e} me-2">${e}</span>\n                                        ${o.tailoringLevels[e].description}\n                                    </button>\n                                </h2>\n                                <div id="level-${e}" \n                                     class="accordion-collapse collapse ${e===a?"show":""}"\n                                     data-bs-parent="#levels-accordion">\n                                    <div class="accordion-body">\n                                        <p><strong>Activities:</strong></p>\n                                        <ul>\n                                            ${o.tailoringLevels[e].activities?.map(e=>`<li>${e}</li>`).join("")||"<li>No activities specified</li>"}\n                                        </ul>\n                                        <p><strong>Key Outputs:</strong></p>\n                                        <ul>\n                                            ${o.tailoringLevels[e].outputs?.map(e=>`<li>${e}</li>`).join("")||"<li>No outputs specified</li>"}\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                        `).join("")}\n                    </div>\n                </div>\n            `:""}\n        `,"undefined"!=typeof bootstrap)try{new bootstrap.Modal(t).show(),console.log("Modal shown successfully for process:",e),setTimeout(()=>{console.log("=== MODAL DEBUG INFO ==="),console.log("Modal display:",t.style.display),console.log("Modal classes:",t.className),console.log("Modal visibility:",null!==t.offsetParent);const e=document.querySelectorAll(".modal-backdrop");console.log("Backdrops found:",e.length),console.log("Modal z-index:",t.style.zIndex),console.log("Modal computed z-index:",window.getComputedStyle(t).zIndex);const s=t.getBoundingClientRect();console.log("Modal position:",s.top,s.left,s.width,s.height),console.log("Modal in viewport:",s.top>=0&&s.left>=0&&s.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&s.right<=(window.innerWidth||document.documentElement.clientWidth));let n=t;const o=[];for(;n.parentElement;){n=n.parentElement;const e=window.getComputedStyle(n);"none"!==e.display&&"hidden"!==e.visibility&&"0"!==e.opacity||o.push(n)}console.log("Hidden parents:",o.length,o);const i=window.getComputedStyle(t);null!==t.offsetParent&&0!==s.width&&0!==s.height&&"none"!==i.display&&"hidden"!==i.visibility&&"0"!==i.opacity||(console.log("Modal appears hidden - forcing visibility"),t.parentElement.removeChild(t),document.body.appendChild(t),t.style.display="block",t.style.visibility="visible",t.style.opacity="1",t.style.zIndex="1050",t.style.position="fixed",t.style.top="50%",t.style.left="50%",t.style.transform="translate(-50%, -50%)",document.querySelectorAll(".modal-backdrop").forEach(e=>{e.style.zIndex="1040"})),console.log("=== END DEBUG ===")},100)}catch(e){console.error("Failed to show modal:",e),t.style.display="block",t.classList.add("show"),document.body.classList.add("modal-open");const s=document.createElement("div");s.className="modal-backdrop fade show",s.style.zIndex="1040",document.body.appendChild(s),t.style.zIndex="1050"}else console.error("Bootstrap not available")}getAssessmentData(){return{responses:this.assessmentResponses,scores:this.assessmentScores,recommendations:this.recommendations}}getProcessData(){return this.processData}getDependencyData(){return this.dependencyData}}function t(){console.log("=== Force hiding loading overlay ==="),["#loading-overlay",".loading-overlay",'[id*="loading"]',".position-fixed.top-0.start-0.w-100.h-100"].forEach(e=>{try{document.querySelectorAll(e).forEach(t=>{console.log(`Hiding element with selector: ${e}`),t.style.display="none",t.style.visibility="hidden",t.style.opacity="0",t.style.pointerEvents="none",t.classList.add("hidden"),t.setAttribute("hidden","")})}catch(t){console.warn(`Error hiding elements with selector ${e}:`,t)}});try{const e=document.getElementById("loading-overlay");e&&e.parentNode&&(console.log("Removing loading overlay from DOM"),e.parentNode.removeChild(e))}catch(e){console.warn("Error removing loading overlay from DOM:",e)}console.log("=== Force hide complete ===")}document.addEventListener("DOMContentLoaded",()=>{console.log("DOM loaded, initializing app...");const s=setTimeout(()=>{console.warn("Failsafe timeout reached - hiding loading screen"),t()},1e4);setTimeout(()=>{try{const n=["AssessmentEngine","ProcessNetworkVisualizer","RecommendationEngine","ExportManager"].filter(e=>void 0===window[e]);if(n.length>0)throw console.error("Missing components:",n),new Error(`Required components not loaded: ${n.join(", ")}`);console.log("All components available, initializing app..."),window.seApp=new e,clearTimeout(s),setTimeout(()=>{console.log("Additional failsafe: Forcing loading overlay to hide"),t()},1e3)}catch(e){console.error("Failed to initialize app:",e),clearTimeout(s);const t=document.getElementById("loading-overlay");t&&(t.innerHTML=`\n                    <div class="text-center text-white">\n                        <div class="spinner-border mb-3" role="status">\n                            <span class="visually-hidden">Loading...</span>\n                        </div>\n                        <p class="text-danger">Failed to initialize application</p>\n                        <p class="small">${e.message}</p>\n                        <button class="btn btn-outline-light" onclick="window.location.reload()">Retry</button>\n                    </div>\n                `)}},100)}),window.addEventListener("popstate",e=>{window.seApp&&e.state&&window.seApp.showView(e.state.view)}),window.SEFrameworkApp=e})()})();
//# sourceMappingURL=main.ba015915d54a558ff751.js.map